{"version":3,"sources":["pages/Error404.js","utils/Config.js","components/admin/AdminNav.js","components/admin/CarouselItem.js","components/admin/Dashboard.js","components/admin/administrations/Semesters.js","components/admin/administrations/Settings.js","components/admin/administrations/TeamManagement.js","components/admin/administrations/Users.js","components/admin/administrations/BlockedUsers.js","components/admin/administrations/ResourcesManagement.js","components/admin/perms/Astreintes.js","components/admin/perms/CalendarManagement.js","components/admin/perms/CurrentPerm.js","components/admin/perms/PermDetails.js","components/admin/perms/PermsIndex.js","components/admin/perms/RequestedPerm.js","components/admin/website_management/GoodiesManagement.js","components/admin/website_management/ShotgunManagement.js","components/admin/website_management/PollsManagement.js","components/admin/application_management/Newsletter.js","components/admin/application_management/BeerInfo.js","components/admin/application_management/TrendingProduct.js","components/admin/application_management/Evenements.js","components/admin/tv/Media.js","components/admin/tv/Url.js","components/admin/tv/Configuration.js","components/admin/prostate/Prostate.js","pages/Admin.js","utils/Date.js","serviceWorker.js","components/Header.js","components/Footer.js","pages/Home.js","pages/Login.js","pages/Logout.js","components/Charte.js","components/Menu.js","pages/Poll.js","pages/PermForm.js","components/websocket.js","pages/Badge.js","pages/PermGen.js","pages/Shotgun.js","pages/AppAssistancy.js","pages/AppPrivacy.js","App.js","utils/Interceptor.js","index.js","utils/ProtectedRoute.js","utils/Ajax.js","utils/Auth.js","utils/String.js","utils/SnackbarComponent.js"],"names":["Error","React","Component","asset_url","path","config","urls","URL","API_URL","LOGO_PATH","CATEGORIES","id","link","icon","authorized","Auth","isUserMember","children","isUserAdmin","AdminDrawer","props","isMobile","useMediaQuery","useTheme","breakpoints","down","Drawer","classes","paper","drawerPaper","variant","onClose","handleDrawerToggle","open","mobileOpen","AdminNav","toggleCategoryCollapse","event","categoryId","currentTarget","getAttribute","setState","prevState","openCategories","openChildLink","window","closeNav","getLinkProps","startsWith","component","href","target","onClick","Link","to","state","bind","this","className","drawer","logo","alt","src","height","List","disablePadding","map","category","Fragment","key","ListItem","categoryHeader","value","button","ListItemIcon","itemIcon","ListItemText","primary","categoryHeaderPrimary","length","Collapse","in","Boolean","timeout","child","categoryChildren","categoryChildrenPrimary","Divider","withStyles","theme","root","display","up","width","flexShrink","appBar","marginLeft","menuButton","marginRight","spacing","toolbar","mixins","backgroundColor","color","content","flexGrow","padding","windowTitle","textDecoration","fontSize","paddingTop","paddingBottom","paddingLeft","palette","common","white","textAlign","minWidth","CarouselItem","notation","astreintes","grid_per_row","cell_height","snackbar","message","handleChange","compareAstreinte","addNote","isAstreinteRated","periode","notation_perm","soir","midi","matin","a1","a2","a1_rated","a2_rated","compareDjangoDate","creneau","date","not_rated","rated","index","astreinte_type","name","astreinte","astreinte_index","findIndex","a","Number","sort","b","ajaxPut","then","changeSnackbarState","catch","gridList","cols","rows","Card","xs","sm","card","style","Typography","subTitle","perm","nom","formateFromDjangoDate","article_set","categoryTitle","article","article_index","CardContent","FormControl","Grid","container","direction","perm_type","perm_type_index","item","noWrap","categorie","RadioGroup","onChange","type","type_index","FormControlLabel","control","Radio","label","TextField","multiline","commentaire","textField","margin","CardActions","justifyContent","Button","size","SnackbarComponent","duration","horizontal","vertical","closeSnackbar","section","note","border","marginTop","marginBottom","suggestions","zIndex","position","maxHeight","overflowY","ratedAstreinte","addButton","fontWeight","subTitleIcon","row","cell","btn","flexWrap","overflowX","transform","Dashboard","astreintes_matin","astreintes_midi","astreintes_soir","loading","loadCreneau","ajaxGet","res","data","push","justify","alignItems","CircularProgress","progress","title","ChevronRight","paddingRight","Semesters","new_semester","annee","start_date","Date","end_date","current_semester","selectedDate","semesters","handleDateDebutChange","handleDateFinChange","loadSemester","handleChangeNewSemester","handleChangeCurrentSemester","saveNewSemester","changeSemester","loadDefaultNewSemesterValue","current_year","getFullYear","month_number","getMonth","period","formatDate","day","getDate","slice","date_format","console","log","ajaxPost","new_current_semester","select","autoComplete","fullWidth","MenuItem","utils","DateFnsUtils","disableToolbar","format","KeyboardButtonProps","suggestionItem","minHeight","Settings","settings","GINGER_URL","GINGER_KEY","PAYUTC_CONNECTION_UID","PAYUTC_CONNECTION_PIN","PAYUTC_APP_KEY","PAYUTC_APP_URL","SEMESTER","user","login","autoCompleteUsers","handleChangeSetting","loadSettings","autoCompleteQuery","saveSettings","updateBadge","query","match","toString","substring","badge_uid","badge_pin","error","users","new_user","badge","pin","inputField","Paper","suggestion","split","TeamManagement","team","loadMembers","userrights","filter","u","right","userright_id","isUserAlreadyInTeam","user_id","t","rootTable","Table","TableHead","TableRow","TableCell","TableBody","hover","scope","userright","rated_astreintes","total_astreintes","disabled","addMember","add_item","Users","page","rowsPerPage","saveUser","upgradeUser","downgradeUser","selectUser","deleteUser","giveaccesUser","updateUser","handleChangePage","loadUsers","prenom","regex","user_name","replace","newPage","option","right_detail","e","TablePagination","rowsPerPageOptions","count","backIconButtonProps","nextIconButtonProps","onChangePage","BlockedUsers","justification","blocked_users","ajaxDelete","deleteBlockedUser","ResourcesManagement","handleModalClickOpen","open_modal","handleModalClickClose","confirm_modal","reloadNewCreneau","selectCreneau","mode","creneaux","perm_id","loadPerms","perms","loadCreneaux","crneau","new_creneau","unshift","ajaxPatch","updated_creneau_index","c","creneau_id","Fab","handleConfirmModalOpen","Dialog","maxWidth","scroll","DialogTitle","DialogContent","saveCreneau","DialogContentText","DialogActions","deleteCreneau","Astreintes","members","astreinte_id","displayCreneau","changeNewAstreinte","goNextWeek","goPreviousWeek","saveAstreinte","loadDates","startDate","endDate","currentDate","current_day","getDay","addDays","loadAstreintes","formateToDjangoDate","reloadAstreinte","new_astreinte_type","creneau_type","found_creneaux","creneau_index","member_id","new_member_id","member","week_days","loader","calendarDate","code","leftTitleCell","week_day","IconButton","edge","aria-label","defaultValue","deleteAstreinte","CalendarManagement","newPerm","nom_resp","mail_resp","nom_resp_2","mail_resp_2","asso","asso_login","calendar","open_mail","selected_perms","unselected_perms","autocomplete_users_1","autocomplete_users_2","assos","handleCheckboxChange","handlePlanningChange","handleDeleteCreneau","savePerm","deletePerm","formateCalendarDate","handleChangeOnMail","sendPermsMail","loadAssos","shortname","loadCurrentSemester","toLowerCase","index_creneau","creneau_array","perm_nom","creneau_detail","createCalender","d1","d2","existing_creneaux","stopDate","week_number","dt","setDate","new_date","createCreneaux","compareDates","week_size","missing_day","getTime","splice","creneau_matin_index","formatCreneauDate","creneau_midi_index","creneau_soir_index","week_index","day_index","perm_index","p","creneau_date","creneau_period","nom_resp_type","mail_resp_type","autocomplete_type","mail_asso","titleIcon","paper_box","lg","textFieldContainer","checkBox","Checkbox","checked","labelPlacement","handleAssoChange","InputProps","handleAutocompleteChange","handleRespChange","btnAddPerm","btnMail","listPerms","M_creneaux","D_creneaux","S_creneaux","canDelete","secondary","ListItemSecondaryAction","week","index_day","align","gutterBottom","creneau_card","Chip","perm_chip","onDelete","isDatePast","perm_select","aria-labelledby","selectPerm","chip","unselectPerm","input","CurrentPerm","current_creneau","new_article","tva","stock","prix","invoice_checked","addArticleToPayutc","handleCheckChange","saveArticle","loadCurrentPerm","ventes_last_update","ventes_last_formatted_update","formateDate","loadCreneauSignature","setInterval","signature","signature_count","month","year","hours","getHours","minutes","getMinutes","id_payutc","ventes","sales","signature_message","toFixed","updateArticleSales","menu","redirectToMenu","md","saving_btn","textTransform","maring","PermDetails","URLSearchParams","location","search","get","note_orga","dot","dot_red","dot_orange","dot_lgreen","dot_green","note_deco","note_menu","note_anim","cellLeft","cren","mean_m","mean_s","mean_d","afficheNote","borderRadius","PermsIndex","notations","consultNotation","mean_note","semestre_id","notation_id","current_date","getCurrentDate","perm_soir","loadOtherSemester","nb_note_orga","nb_astreintes","RequestedPerms","requested_perms","perm_may_be_requested","loadPermMayBeRequest","loadRequestedPerms","requested_perm_index","requested_perm","added","Switch","handleSliderChange","getRequestedPermsPDF","addPerm","GoodiesManagement","winners","generateGoodiesWinners","deleteGoodiesWinners","updateGoodieWinner","handleStartDateChange","handleEndDateChange","loadGoodiesWinners","w","picked_up","generate_btn","title_btn","Math","ceil","winner","PollsManagement","activeShotgun","unActiveShotgun","listPeople","newShotgun","text","dateShotgun","nb","dateStart","dateEnd","personAdd","loadShotgun","saveShotgun","handleSwitch","loadPeople","temp","shotgunDate","max_people","start","end","actif","r","loadAllComponent","idCreneau","id_creneau","alert","people","inactif","shotgun","person","email","btnAddNews","handleDeletePerson","element","nbPeople","liste","sendEmails","inputProps","handleDelete","Accordion","AccordionSummary","expandIcon","aria-controls","AccordionDetails","addPerson","displayPerson","container_createShotgun","InputLabelProps","shrink","btnAddShotgun","displaySotgun","reloadNewSurvey","survey","description","image","surveyitem_set","multi_choice","visible","loadSurveys","selectSurvey","request","XMLHttpRequest","that","responseType","onload","reader","FileReader","readAsDataURL","response","result","send","surveys","surveys_history","handleSurveyItemChange","addSurveyItem","loadHistory","votes","total_votes","j","surveyitemvote_set","file","files","onloadend","new_survey_item","status","survey_item_id","s","survey_id","survey_index","changeSurveyVisibility","item_row","item_index","CardMedia","media","accept","input_file","handleFileChange","htmlFor","upload_button","saveSurvey","modal_title","root_items","GridList","GridListTile","CardActionArea","handleItemFileChange","vote_typo","deleteSurveyItem","saveSurveyItem","deleteSurvey","backgroundSize","overflow","background","light","titleBar","modal","Newsletter","newsletter","edit","newNews","datePublication","editContent","author","dateCreation","datePub","saveNews","deleteNews","editNews","handleChangeEdit","updateNews","handleFileChangeNew","handleFileChangeEdit","fileUpload","loadNewsletter","news","i","publication_date","creation_date","author_id","localStorage","getItem","new_image","fd","FormData","append","errors","tempPub","tempCrea","styles","pub","container_createNews","markdownEdit","flexDirection","useState","beerInfo","setBeerInfo","beerNames","setBeerNames","setEdit","infoToEdit","setInfoToEdit","create","setCreate","reload","setReload","listOfBeersToCreate","setListOfBeersToCreate","useEffect","info","weez_id","products","names","beer","infoAfficher","undefined","handleChangeString","editedInfo","handleChangeInt","parseInt","new_logo","saveInfo","ajax_info","amertume","fruite","acidite","sucre","tempDict","listOfBeers","Object","entries","forEach","handleOpenCreate","max","min","setProducts","newTrendingProduct","setNewTrendingProduct","categoryNames","setCategoryNames","productNames","product","nom_produit","nom_categorie","events","setEvents","eventToAdd","setEventToAdd","evenements","semestre","Media","reloadNewMedia","media_type","activate","times","selectMedia","loadMedias","medias","file_loading","includes","new_media","media_index","ajax_media","media_id","m","changeMediaActivation","saveMedia","deleteMedia","Url","loadLinks","reloadNewLink","selectLink","links","url","link_id","l","saveLink","deleteLink","Configuration","tvs","loadTVs","tv_index","link_index","tv_paper","handleChangeLink","Prostate","setLoading","setStartDate","setEndDate","setResult","handleForm","toISOString","categorie__nom","total_price","Intl","NumberFormat","reduce","partialSum","IconButtonLink","Admin","pathname","AppBar","Toolbar","displayScreenName","ProtectedRoute","only","exact","ShotgunManagement","RequestedPerm","Evenements","BeerInfo","TrendingProduct","Error404","days","splitted_date","splitted_d1","splitted_d2","separator","newDate","isLocalhost","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","COUVERTURE_PATH","COUVERTURE_PATH_XS","Header","updateSize","innerHeight","open_menu","addEventListener","removeEventListener","anchor","hash","imgContainer","Hidden","smUp","implementation","couvXS","logoCouv","couverture","xsDown","borderTop","left","objectFit","top","Footer","footer","footer_content","rel","copyright","boxShadow","Home","CssBaseline","Container","header","fixed","legend","Login","loginUser","redirectUser","Logout","logoutUser","logout_window","setTimeout","close","Charte","newSignature","currentCreneau","saving","saveSignature","handleSnackbarClose","new_signature","required","placeholder","displayDate","verticalAlign","Menu","menus","selected_article","orders","open_login","user_credentials","username","stack_information","selectMenu","loginBadge","checkAuth","clearInterval","interval","loadMenus","loginUsername","authenticateUser","loadSelectedMenu","find","stack_index_to_remove","stack","order_index","order","id_transaction","served","is_staff","all_served","order_in_state","order_edited","first_name","subtitle","total_quantity","quantity","served_quantity","areMenusAllServed","delete_btn","last_name","servedMenu","staffMenu","menu_selection","autoFocus","deleteMenu","Poll","vote_loading","results","canVote","params","getResults","item_id","voted","found","items","exit_link","exit_btn","exit_icon","survey_description","multiple_choice","survey_img","isThereDescriptionInItems","item_img","item_description","hasVote","findResult","voted_item","cancelVote","vote","overflowWrap","PermForm","autocomplete_users","new_perm","ambiance","membres","founder_login","saved","checkPermFormAvaibility","authUser","openSnackbar","getUserInformation","isFormExisting","form_id","isFormValid","isStringEmpty","perm_title","backToForm","newForm","handleNewPermChange","perm_input","perm_label","form_field_length","rowsMax","Slider","step","valueLabelDisplay","slider_input","handleResp2Change","saveRequestedPerm","radio_btn","WebSocketManager","useAlert","onMessage","useCallback","badgeID","axios","show","err","onOpen","substr","reconnectIntervalInMilliSeconds","options","positions","MIDDLE","offset","transition","transitions","SCALE","Badge","infos","document","createElement","innerHTML","childNodes","nodeValue","hideComponent","template","AlertTemplate","PermGen","personnesPerm","dayType","currentTypeDay","postes","listJobs","handleChangeTextField","loadTypeDay","handleChangeDay","n","concat","listCreneau","titre","hour","formControl","InputLabel","Select","labelId","val","btnAddMember","role","dense","listItem","deleteItem","job","messages","Shotgun","qs","ignoreQueryPrefix","parts","cookie","pop","shift","now","reason","getCookie","exeption","font","makeshotgun","extraText","customMessage","renderMessageShotgun","renderShutgun","fontfamily","AppAssistancy","bottom","AppPrivacy","lazy","GlobalStyles","createGlobalStyle","App","basename","process","Suspense","fallback","uncaught_path","interceptors","use","indexOf","redirection","Promise","reject","ReactDOM","render","getElementById","origin","fetch","contentType","headers","ready","unregister","checkValidServiceWorker","isAuthorized","isUserAuthenticated","auth","routeProps","defaultProps","defaultConfig","withCredentials","post","put","patch","delete","identity","goLogin","emptyLocalStorage","isConnexionRestricted","setItem","authenticated","mail","connexion","current_url","redirect","clear","str","variantIcon","success","CheckCircleIcon","warning","WarningIcon","ErrorIcon","InfoIcon","useStyles1","makeStyles","green","dark","main","amber","iconVariant","opacity","SnackbarContentWrapper","other","Icon","clsx","aria-describedby","action","prevProps","anchorOrigin","autoHideDuration"],"mappings":"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","file":"static/js/main.2c00a816.chunk.js","sourcesContent":["import React from 'react';\n\nclass Error extends React.Component {\n\trender() {\n\t\treturn(\n\t\t\t<h1>Error 404 dommage</h1>\n\t\t);\n\t}\n}\n\nexport default Error\n","const prod = {\n    urls: {\n        URL:'https://kraken.picasso-utc.fr', // URL de l'API\n        API_URL:'https://kraken.picasso-utc.fr/api/' // URL de l'API\n    }\n}\n\nconst dev = {\n    urls: {\n        URL:'https://kraken-dev.picasso-utc.fr', // URL de l'API\n        API_URL:'https://kraken-dev.picasso-utc.fr/api/' // URL de l'API\n    }\n}\n\nconst local = {\n    urls: {\n        URL:'http://localhost:8000', // URL de l'API\n        API_URL:'http://localhost:8000/api/' // URL de l'API\n    }\n}\n\nexport const PUBLIC_URL = process.env.PUBLIC_URL || '';\nexport function asset_url(path) {\n    return PUBLIC_URL + path;\n}\n\n\nexport const config = process.env.REACT_APP_KRAKEN === 'prod' ? prod : process.env.REACT_APP_KRAKEN === 'dev' ? dev : local;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { withStyles, useTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nimport {\n    Divider,\n    Drawer,\n    Collapse,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n} from '@material-ui/core';\n\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport ImportantDevicesIcon from '@material-ui/icons/ImportantDevices';\nimport WebAsset from '@material-ui/icons/WebAsset';\nimport HomeIcon from '@material-ui/icons/Home';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\nimport HowToRegIcon from '@material-ui/icons/HowToReg';\nimport LiveTvIcon from '@material-ui/icons/LiveTv';\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\nimport PhonelinkSetup from '@material-ui/icons/PhonelinkSetup';\nimport Auth from '../../utils/Auth';\nimport { asset_url } from '../../utils/Config';\n\nconst LOGO_PATH = asset_url('/images/logo.png');\nconst CATEGORIES = [\n    {\n        id: 'Dashboard',\n        link: '/admin',\n        icon: <HomeIcon />,\n        authorized: Auth.isUserMember,\n    },\n    {\n        id: 'Gestion du site',\n        icon: <WebAsset />,\n        authorized: Auth.isUserMember,\n        children: [\n            { id: 'Goodies', link: '/admin/goodies' },\n            // { id: 'Sondages', link: '/admin/polls'},\n            { id: 'Shotgun', link: '/admin/shotgun' },\n        ],\n    },\n    {\n        id: \"Gestion de l'application\",\n        icon: <PhonelinkSetup />,\n        authorized: Auth.isUserMember,\n        children: [\n            { id: 'Newsletter', link: '/admin/newsletter' },\n            { id: 'Info Bières', link: '/admin/beerInfo' },\n            { id: 'Évenements du semestre', link: '/admin/evenements' },\n            { id: 'Trending Product', link: '/admin/trending_product' },\n        ],\n    },\n    {\n        id: ' Gestion des télés',\n        icon: <LiveTvIcon />,\n        authorized: Auth.isUserMember,\n        children: [\n            { id: 'Configuration', link: '/admin/tv/config' },\n            { id: 'Média', link: '/admin/tv/media' },\n            { id: 'URL', link: '/admin/tv/url' },\n        ],\n    },\n    {\n        id: 'Perms',\n        icon: <EventNoteIcon />,\n        authorized: Auth.isUserMember,\n        children: [\n            // { id: 'Perm en cours', link: '/admin/current/perm'},\n            { id: 'Planning', link: '/admin/calendar' },\n            // { id: 'Menu', link: '/menu'},\n            { id: 'Index notations', link: '/admin/perms' },\n            // { id: 'Demandées', link: '/admin/requested/perms'},\n            { id: 'Astreintes', link: '/admin/astreintes' },\n        ],\n    },\n    {\n        id: 'Prostate',\n        link: '/admin/prostate',\n        icon: <EqualizerIcon />,\n        authorized: Auth.isUserMember,\n    },\n    {\n        id: 'Charte',\n        link: '/charte',\n        icon: <HowToRegIcon />,\n        authorized: Auth.isUserMember,\n    },\n    {\n        id: 'Applications',\n        icon: <ImportantDevicesIcon />,\n        authorized: Auth.isUserMember,\n        children: [\n            { id: 'Weezevent', link: 'https://admin.nemopay.net/#!/login?system=80405' },\n            { id: 'Picsous', link: 'https://picsous.picasso-utc.fr' },\n            { id: 'Beethoven', link: 'https://beethoven.picasso-utc.fr/' },\n            { id: 'WebTV Pic Bar', link: 'https://webtv.picasso-utc.fr/?id=1' },\n            { id: 'WebTV Pic Salle', link: 'https://webtv.picasso-utc.fr/?id=2' },\n        ],\n    },\n    {\n        id: 'Administration',\n        icon: <SettingsIcon />,\n        authorized: Auth.isUserAdmin,\n        children: [\n            { id: 'Blocage', link: '/admin/blocked/users' },\n            { id: 'Utilisateurs', link: '/admin/users' },\n            { id: 'Team', link: '/admin/team' },\n            { id: 'Semestres', link: '/admin/semesters' },\n            // {id: 'Gestion', link: '/admin/resources'},\n            { id: 'Paramètres', link: '/admin/settings' },\n        ],\n    },\n];\n\nfunction AdminDrawer(props) {\n    const isMobile = useMediaQuery(useTheme().breakpoints.down('sm'));\n    return (\n        <Drawer\n            classes={{ paper: props.classes.drawerPaper }}\n            variant={isMobile ? 'temporary' : 'permanent'}\n            onClose={props.handleDrawerToggle}\n            open={!isMobile || props.mobileOpen}\n        >\n            {props.children}\n        </Drawer>\n    );\n}\n\nclass AdminNav extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mobileOpen: false,\n            openCategories: {},\n        };\n\n        this.getLinkProps = this.getLinkProps.bind(this);\n        this.closeNav = this.closeNav.bind(this);\n    }\n\n    toggleCategoryCollapse = (event) => {\n        const categoryId = event.currentTarget.getAttribute('value');\n        this.setState((prevState) => ({\n            openCategories: {\n                [categoryId]: !prevState.openCategories[categoryId],\n            },\n        }));\n    };\n\n    openChildLink = (event) => {\n        const link = event.currentTarget.getAttribute('value');\n        window.open(link);\n    };\n\n    closeNav = (event) => {\n        this.props.handleDrawerToggle();\n    };\n\n    getLinkProps = (link) => {\n        if (!link) return {};\n        if (link.startsWith('http'))\n            return {\n                component: 'a',\n                href: link,\n                target: '_blank',\n                onClick: this.closeNav,\n            };\n        return {\n            component: Link,\n            to: link || '',\n            onClick: this.closeNav,\n        };\n    };\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <nav className={classes.drawer}>\n                <AdminDrawer {...this.props}>\n                    <div className={classes.logo}>\n                        <Link to=\"/\">\n                            <img alt=\"logo\" src={LOGO_PATH} height=\"44px\" />\n                        </Link>\n                    </div>\n                    <List disablePadding>\n                        {CATEGORIES.map((category) => {\n                            if (category.authorized()) {\n                                return (\n                                    <React.Fragment key={category.id}>\n                                        <ListItem\n                                            className={classes.categoryHeader}\n                                            onClick={\n                                                category.children && this.toggleCategoryCollapse\n                                            }\n                                            value={category.id}\n                                            button\n                                            {...this.getLinkProps(category.link)}\n                                        >\n                                            <ListItemIcon className={classes.itemIcon}>\n                                                {category.icon}\n                                            </ListItemIcon>\n                                            <ListItemText\n                                                classes={{ primary: classes.categoryHeaderPrimary }}\n                                            >\n                                                {category.id}\n                                            </ListItemText>\n                                        </ListItem>\n\n                                        {category.children && category.children.length && (\n                                            <Collapse\n                                                in={Boolean(this.state.openCategories[category.id])}\n                                                timeout=\"auto\"\n                                            >\n                                                <List component=\"div\" disablePadding>\n                                                    {category.children.map((child) => (\n                                                        <ListItem\n                                                            key={child.id}\n                                                            button\n                                                            className={classes.categoryChildren}\n                                                            value={child.link}\n                                                            {...this.getLinkProps(child.link)}\n                                                        >\n                                                            <ListItemText\n                                                                primary={child.id}\n                                                                classes={{\n                                                                    primary:\n                                                                        classes.categoryChildrenPrimary,\n                                                                }}\n                                                            />\n                                                        </ListItem>\n                                                    ))}\n                                                </List>\n                                            </Collapse>\n                                        )}\n                                        <Divider />\n                                    </React.Fragment>\n                                );\n                            }\n                            return <></>;\n                        })}\n                    </List>\n                </AdminDrawer>\n            </nav>\n        );\n    }\n}\n\nconst drawerWidth = 240;\n\nconst styles = (theme) => ({\n    root: {\n        display: 'flex',\n    },\n    drawer: {\n        [theme.breakpoints.up('md')]: {\n            width: drawerWidth,\n            flexShrink: 0,\n        },\n    },\n    appBar: {\n        marginLeft: drawerWidth,\n        [theme.breakpoints.up('md')]: {\n            width: `calc(100% - ${drawerWidth}px)`,\n        },\n        backgroundColor: 'white',\n        color: '#000223',\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n        [theme.breakpoints.up('md')]: {\n            display: 'none',\n        },\n    },\n    toolbar: theme.mixins.toolbar,\n\n    drawerPaper: {\n        width: drawerWidth,\n        backgroundColor: '#000223',\n        color: 'white',\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n\n    windowTitle: {\n        textDecoration: 'underline #B22132',\n        fontSize: 24,\n    },\n    categoryHeader: {\n        paddingTop: 4,\n        paddingBottom: 0,\n        paddingLeft: 15,\n    },\n    categoryHeaderPrimary: {\n        color: theme.palette.common.white,\n        fontSize: 15,\n    },\n\n    categoryChildren: {\n        paddingTop: 0,\n        paddingBottom: 0,\n        paddingLeft: 75,\n    },\n\n    categoryChildrenPrimary: {\n        color: theme.palette.common.white,\n        fontSize: 12,\n    },\n    logo: {\n        textAlign: 'center',\n        paddingTop: 10,\n        paddingBottom: 30,\n    },\n    itemIcon: {\n        minWidth: 'auto',\n        color: 'white',\n        marginRight: 15,\n    },\n});\n\nexport default withStyles(styles)(AdminNav);\n","import React, {Component} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Typography, TextField, Button, Grid } from '@material-ui/core';\nimport { Card, CardContent, CardActions } from '@material-ui/core';\nimport { FormControl, RadioGroup, FormControlLabel, Radio } from '@material-ui/core';\nimport notation_perm from './notation.json'\nimport { formateFromDjangoDate, compareDjangoDate } from '../../utils/Date';\nimport SnackbarComponent from '../../utils/SnackbarComponent';\nimport { ajaxPut } from '../../utils/Ajax';\n\n\nclass CarouselItem extends Component{\n \n\t\n\tconstructor(props) {\n\t\tsuper(props)\n\n\t\tthis.state ={\n\t\t\tnotation : [],\n\t\t\tastreintes: [],\n\t\t\tgrid_per_row : this.props.grid_per_row,\n\t\t\tcell_height : this.props.cell_height,\n\t\t\tsnackbar: {\n\t\t\t\topen: false,\n\t\t\t\tvariant: 'success',\n                message: '',\n\t\t\t},\n\t\t}\n\t\tthis.handleChange = this.handleChange.bind(this)\n\t\tthis.compareAstreinte = this.compareAstreinte.bind(this)\n\t\tthis.addNote = this.addNote.bind(this)\n\t\tthis.isAstreinteRated = this.isAstreinteRated.bind(this)\n\t}\n\n\tcomponentDidMount(){\n\t\t// Load notation json file\n\t\tif(this.props.periode === \"soir\"){\n\t\t\tthis.setState({notation : notation_perm.soir});\n\t\t}\n\t\tif(this.props.periode === \"midi\"){\n\t\t\tthis.setState({notation : notation_perm.midi});\n\t\t}\n\t\tif(this.props.periode === \"matin\"){\n\t\t\tthis.setState({notation : notation_perm.matin});\n\t\t}\n\n\t\tthis.setState({astreintes: this.props.astreintes})\n\t}\n\n\n\tcompareAstreinte(a1, a2){\n\t\tconst a1_rated = this.isAstreinteRated(a1);\n\t\tconst a2_rated = this.isAstreinteRated(a2);\n\t\tif (a1_rated && !a2_rated) {\n\t\t\treturn 1;\n\t\t} else if (!a1_rated && a2_rated){\n\t\t\treturn -1;\n\t\t}\n\t\tif (compareDjangoDate(a1.creneau.date,a2.creneau.date)) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn -1;\n\t}\n\n\t\n\tisAstreinteRated(a1){\n\t\t\n\t\tif (a1.not_rated) {\n\t\t\treturn false;\n\t\t}\n\t\tlet rated = true;\n\t\tconst notation = this.state.notation;\n\n\t\tfor (let index = 0; index < notation[a1.astreinte_type].length; index++) {\n\t\t\tconst name = notation[a1.astreinte_type][index].name;\n\t\t\tif (a1[name] === 0 ) {\n\t\t\t\trated = false;\n\t\t\t}\n\t\t}\n\t\treturn rated;\n\t}\n\n\thandleChange(event, astreinte){\n\t\tlet astreintes = this.state.astreintes;\n\t\tconst astreinte_index = astreintes.findIndex(a => a.id === astreinte.id);\n\t\tlet value = event.target.value;\n\t\tif (event.target.name !== \"commentaire\") {\n\t\t\tvalue = Number(value);\n\t\t}\n\t\tif (astreintes[astreinte_index][event.target.name] === 0) {\n\t\t\tastreintes[astreinte_index].not_rated = true;\n\t\t}\n\t\tastreintes[astreinte_index][event.target.name] = value;\n\t\tastreintes = astreintes.sort(function(a,b){\n            if (compareDjangoDate(a.creneau.date, b.creneau.date)) {\n                return 1\n            }\n            return -1\n\t\t})\n\t\tif (event.target.name === \"commentaire\") {\n\t\t\tif (event.target.value.length > 250) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tthis.setState({astreintes: astreintes})\n\t}\n\n\taddNote(astreinte){\n        ajaxPut('perm/astreintes/'+astreinte['id']+'/',astreinte).then(() => {\n\t\t\tthis.changeSnackbarState(true, 'success', 'La notation a bien été enregistrée');\n\t\t\tif (astreinte.not_rated) {\n\t\t\t\tlet astreintes = this.state.astreintes;\n\t\t\t\tconst astreinte_index = astreintes.findIndex(a => a.id === astreinte.id);\n\t\t\t\tastreintes[astreinte_index].not_rated = false;\n\t\t\t\tthis.setState({astreintes: astreintes})\n\t\t\t}\n        })\n        .catch(() => {\n        \tthis.changeSnackbarState(true, 'error', 'Une erreur est survenue lors de l\\'enregistrement');\n        })\n    }\n\n\tchangeSnackbarState(open, variant, message){\n\t\tthis.setState({\n\t\t\tsnackbar: {\n\t\t\t\topen: open,\n\t\t\t\tvariant: variant,\n\t\t\t\tmessage: message\n\t\t\t}\n\t\t})\n\t}\n\n\trender(){\n\t\t\n\t\tconst { classes } = this.props;\n\t\tconst { notation, astreintes, snackbar } = this.state;\n\n\t\treturn (\n\t\t\t<div className={classes.gridList}>\n\t\t\t\t{astreintes.sort(this.compareAstreinte)\n\t\t\t\t.map((astreinte, astreinte_index) => (\n\t\t\t\t\t<div key={astreinte_index} cols={1} rows={1}>\n\t\t\t\t\t\t<Card xs={8} sm={6} className={classes.card} style={this.isAstreinteRated(astreinte) ? {backgroundColor: 'rgba(0,0,0, 0.15'} : {backgroundColor: 'white'}  }>\n\t\t\t\t\t\t\t<Typography variant=\"h6\" className={classes.subTitle}>\n\t\t\t\t\t\t\t\t{astreinte.creneau.perm.nom} - {formateFromDjangoDate(astreinte.creneau.date)}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t{astreinte.creneau.article_set.length > 0 &&\n\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t<Typography variant=\"body1\" className={classes.categoryTitle}>\n\t\t\t\t\t\t\t\t\t\tArticle(s):\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t{astreinte.creneau.article_set.map((article, article_index) => (\n\t\t\t\t\t\t\t\t\t\t\t<li key={article_index}><Typography variant=\"body1\">{article.nom}</Typography></li>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<CardContent style={{padding: 0}}>\n\t\t\t\t\t\t\t\t<FormControl component=\"fieldset\" style={{width: '100%'}}> \n\t\t\t\t\t\t\t\t\t<Grid container direction=\"row\">   \n\t\t\t\t\t\t\t\t\t\t\t{notation[astreinte.astreinte_type].map((perm_type,perm_type_index) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid key={perm_type_index} item xs={12}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography variant=\"body1\" noWrap className={classes.categoryTitle}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{perm_type.categorie}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<RadioGroup \n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={perm_type.name} \n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={astreinte[perm_type.name]} \n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => this.handleChange(event, astreinte)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{perm_type.notation.map((type, type_index) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={type.value}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontrol={<Radio color=\"primary\" />}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={type.label}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={type_index}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</RadioGroup>\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\tlabel=\"Commentaire (255 caractères max.)\"\n\t\t\t\t\t\t\t\t\t\tmultiline\n\t\t\t\t\t\t\t\t\t\trows=\"3\"\n\t\t\t\t\t\t\t\t\t\tname=\"commentaire\"\n\t\t\t\t\t\t\t\t\t\tvalue={astreinte.commentaire || ''}\n\t\t\t\t\t\t\t\t\t\tonChange={(event) => this.handleChange(event, astreinte)}\n\t\t\t\t\t\t\t\t\t\tclassName={classes.textField}\n\t\t\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t\t\t<CardActions style={{justifyContent: 'center'}}>\n\t\t\t\t\t\t\t\t\t<Button variant=\"contained\" size=\"small\" color=\"primary\" onClick={(event) => this.addNote(astreinte)}>\n\t\t\t\t\t\t        \t\tValider\n\t\t\t\t\t\t        \t</Button>\n\t\t\t\t\t\t\t  \t</CardActions>\n\t\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t\t<SnackbarComponent \n                    open={snackbar.open} \n                    variant={snackbar.variant} \n                    message={snackbar.message}\n\t\t\t\t\tduration={5000}\n\t\t\t\t\thorizontal='right'\n\t\t\t\t\tvertical='bottom'\n                    closeSnackbar={\n                        ()=>{\n                            this.setState({\n                                snackbar: {\n                                    ...this.state.snackbar,\n                                    open: false,\n                                }\n                            })\n                        }\n                    }\n                />\n\t\t\t</div>\n\t\t);\n\t};\n\n}\n\nconst styles = theme => ({\n\tsection:{\n\t\tpaddingBottom :70,\n\t},\n\tpaper: {\n\t\tpadding: 10\n\t},\n\tnote: {\n\t\tbackgroundColor: 'rgba(0,0,0, 0.05)',\n\t\tpadding: 10,\n\t\tborder: 'thin solid grey',\n\t\tmarginTop: 16,\n\t\tmarginBottom: 8,\n\t},\n\ttextField: {\n\t\tmarginTop: 8,\n\t\twidth: \"100%\",\n\t},\n\tsuggestions: {\n\t\tzIndex: 100,\n\t\tposition: 'absolute',\n\t\tmaxHeight: 200,\n\t\toverflowY: 'scroll',\n\t\tmarginRight: 15,\n\t},\n\tcard: {\n\t\tmarginBottom: 10,\n\t\tmarginRight: 5,\n\t\tmarginLeft: 5,\n\t\tpadding : 10,\n\t\tpaddingBottom: 0,\n\t\tfontSize : 9,\n\t\tminWidth: 300,\n\t\twidth: 'min-content'\n\t},\n\tratedAstreinte: {\n\t\tbackgroundColor: 'rgba(0,0,0, 0.05)',\n\t\tmargin: 30,\n\t\tpadding : 10,\n\t\tfontSize : 9\n\t},\n\taddButton: {\n\t\tmarginTop: 16,\n\t\tmarginBottom: 8,\n\t\theight: 49,\n\t\twidth: \"100%\",\n\t},\n\tsubTitle: {\n\t\t// marginTop: 10,\n\t\t// marginBottom: 10,\n\t},\n\tcategoryTitle : {\n\t\tfontWeight: 600,\n\t\tmarginTop:5,\n\t\tmarginBottom: 5\n\t},\n\tsubTitleIcon: {\n\t\tmarginRight: 8,\n\t\tpaddingTop: 5,\n\t},\n\trow: {\n\t\theight: 40,\n\t},\n\tcell: {\n\t\tpaddingTop: 10,\n\t\tpaddingBottom: 10,\n\t},\n\tbtn: {\n\t\tmarginLeft: 5,\n\t\tmarginRight: 5,\n\t\tmarginTop: 3,\n\t},\n\tgridList: {\n\t\tdisplay: 'flex',\n\t\tflexWrap: 'nowrap',\n\t\toverflowX: 'auto',\n    \t// Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n    \ttransform: 'translateZ(0)',\n    },\n});\n\nexport default withStyles (styles) (CarouselItem)\n\n\n\n\n\n\n\n\n\n","import React, {Component} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Typography, Grid } from '@material-ui/core';\nimport { ChevronRight } from '@material-ui/icons';\nimport CarouselItem from './CarouselItem.js'\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { ajaxGet } from '../../utils/Ajax';\n\n\n\nclass Dashboard extends Component{\n \n\t\n\tconstructor(props) {\n\t\tsuper(props)\n\n\t\tthis.state ={\n\t\t\tastreintes_matin : [],\n\t\t\tastreintes_midi : [],\n\t\t\tastreintes_soir : [],\n\t\t\tloading: true,\n\t\t}\n\t\t\n\t}\n\n\tcomponentDidMount(){\n\t\tthis.loadCreneau();\n\t}\n\n\n\tloadCreneau(){\n\t\tajaxGet('perms/user/astreintes').then(res => {\n\n\t\t\tconst astreintes_matin = []\n\t\t\tconst astreintes_midi = []\n\t\t\tconst astreintes_soir = []\n\t\t\tfor (let index = 0; index < res.data.astreintes.length; index++) {\n\t\t\t\tif (res.data.astreintes[index].creneau.creneau === \"M\"){\n\t\t\t\t\tastreintes_matin.push(res.data.astreintes[index]);\n\t\t\t\t} else if (res.data.astreintes[index].creneau.creneau === \"D\"){\n\t\t\t\t\tastreintes_midi.push(res.data.astreintes[index]);\n\t\t\t\t} else {\n\t\t\t\t\tastreintes_soir.push(res.data.astreintes[index]);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\n\t\t\tthis.setState({astreintes_matin: astreintes_matin, astreintes_midi: astreintes_midi, astreintes_soir: astreintes_soir, loading:false})\n\t\t})\n\t}\n\n\trender(){\n\t\t\n\t\tconst { classes } = this.props;\n\t\tconst { astreintes_matin, astreintes_midi, astreintes_soir, loading } = this.state;\n\n\t\tif(loading){\n            return (\n                <Grid \n                    container \n                    className=\"admin_loader\"\n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                >\n                    <Grid item>\n                        <CircularProgress className={classes.progress} />\n                    </Grid>\n                </Grid>\n            )\n        }\n\n\t\treturn (\n\t\t\t<div className=\"admin_container\">\n\t\t\t\t\n\n\t\t\t\t<Grid container className={classes.section}>\n\t\t\t\t\t<Typography variant=\"h5\" className={classes.title}>\n\t\t\t\t\t\t<ChevronRight className={classes.subTitleIcon}/>\n\t\t\t\t\t\tNotation des perms\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Grid container className={classes.note}>\n\t\t\t\t\t\tCe menu vous permet de noter les perms dont tu as été astreinteur au cours du semestre.<br/>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Grid container direction=\"row\" className={classes.section}>\n\t\t\t\t\t\t<Typography variant=\"h6\" className={classes.subTitle}>\n\t\t\t\t\t\t\t<ChevronRight className={classes.subTitleIcon}/>\n\t\t\t\t\t\t\tPerms du matin\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Grid container>\n\t\t\t\t\t\t\t<CarouselItem periode=\"matin\" grid_per_row=\"2\" cell_height=\"470\" astreintes={astreintes_matin}/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Grid container direction=\"row\" className={classes.section}>\n\t\t\t\t\t\t<Typography variant=\"h6\" className={classes.subTitle}>\n\t\t\t\t\t\t\t<ChevronRight className={classes.subTitleIcon}/>\n\t\t\t\t\t\t\tPerms du midi\n\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t\t<Grid container>\n\t\t\t\t\t\t\t<CarouselItem periode=\"midi\" grid_per_row=\"1.5\" cell_height=\"500\" astreintes={astreintes_midi}/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Grid  container direction=\"row\" className={classes.section}>\n\t\t\t\t\t\t<Typography variant=\"h6\" className={classes.subTitle}>\n\t\t\t\t\t\t\t<ChevronRight className={classes.subTitleIcon}/>\n\t\t\t\t\t\t\tPerms du soir\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Grid container>\n\t\t\t\t\t\t\t<CarouselItem periode=\"soir\" grid_per_row=\"1.5\" cell_height=\"800\" astreintes={astreintes_soir}/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t\t\n\t\t\t</div>\n\t\t);\n\t};\n\n}\n\nconst styles = theme => ({\n\tsection:{\n\t\tpaddingBottom : 10,\n\t},\n\tpaper: {\n\t\tpadding: 10\n\t},\n\tnote: {\n\t\tbackgroundColor: 'rgba(0,0,0, 0.05)',\n\t\tpadding: 10,\n\t\tborder: 'thin solid grey',\n\t\tmarginTop: 16,\n\t\tmarginBottom: 8,\n\t},\n\ttextField: {\n\t\tmarginTop: 16,\n\t\tpaddingRight: 15,\n\t\twidth: \"100%\",\n\t},\n\tsuggestions: {\n\t\tzIndex: 100,\n\t\tposition: 'absolute',\n\t\tmaxHeight: 200,\n\t\toverflowY: 'scroll',\n\t\tmarginRight: 15,\n\t},\n\tcard: {\n\t\tmargin: 30,\n\t\tpadding : 10,\n\t\tfontSize : 9\n\t},\n\taddButton: {\n\t\tmarginTop: 16,\n\t\tmarginBottom: 8,\n\t\theight: 49,\n\t\twidth: \"100%\",\n\t},\n\ttitle : {\n\t\tfontWeight: 400,\n\t},\n\tsubTitle: {\n\t\tmarginTop: 10,\n\t\tmarginBottom: 10,\n\t\tfontWeight: 400\n\t},\n\tsubTitleIcon: {\n\t\tmarginRight: 8,\n\t\tpaddingTop: 5,\n\t},\n\trow: {\n\t\theight: 40,\n\t},\n\tcell: {\n\t\tpaddingTop: 10,\n\t\tpaddingBottom: 10,\n\t},\n\tbtn: {\n\t\tmarginLeft: 5,\n\t\tmarginRight: 5,\n\t\tmarginTop: 3,\n\t},\n\tgridList: {\n\t\tdisplay: 'flex',\n\t\tflexWrap: 'wrap',\n\t},\n});\n\nexport default withStyles (styles) (Dashboard)\n\n\n\n\n\n\n\n\n","import React, {Component} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Typography, TextField, Button, Grid, MenuItem } from '@material-ui/core';\nimport { ChevronRight } from '@material-ui/icons';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { ajaxGet, ajaxPost } from '../../../utils/Ajax';\n\n\nclass Semesters extends Component{\n \n    \n    constructor(props) {\n        super(props)\n\n        this.state = {\n            new_semester : {\n                periode : '',\n                annee : '',\n                start_date : new Date(),\n                end_date : new Date()\n            },\n            current_semester : {\n                id : null,\n                periode : '',\n                annee : null,\n                start_date : null,\n                end_date : null\n            },\n            selectedDate: null,\n            semesters : [],\n            loading: true\n        }\n\n        this.handleDateDebutChange = this.handleDateDebutChange.bind(this);\n        this.handleDateFinChange = this.handleDateFinChange.bind(this);\n        this.loadSemester = this.loadSemester.bind(this);\n        this.handleChangeNewSemester = this.handleChangeNewSemester.bind(this);\n        this.handleChangeCurrentSemester = this.handleChangeCurrentSemester.bind(this);\n        this.saveNewSemester = this.saveNewSemester.bind(this);\n        this.changeSemester = this.changeSemester.bind(this);    \n    }\n\n\n    componentDidMount(){\n        this.loadSemester();\n        this.loadDefaultNewSemesterValue();\n    }\n\n\n    loadDefaultNewSemesterValue(){\n        const date = new Date();\n        const current_year = date.getFullYear();\n        const month_number = date.getMonth();\n        let period = 'A';\n        if (month_number >= 1 && month_number <= 5) {\n            period = 'P';\n        }\n        const new_semester = {\n            periode : period,\n            annee : current_year,\n            start_date : this.formatDate(new Date()),\n            end_date : this.formatDate(new Date())\n        }\n        this.setState({new_semester: new_semester});\n    }\n\n\n    formatDate(date){\n        const day = (\"0\" + (date.getDate())).slice(-2);\n        const month_number = (\"0\" + (date.getMonth() + 1)).slice(-2)\n        const year = date.getFullYear();\n        return year + \"-\" + month_number + \"-\" + day;\n    }\n\n    handleDateDebutChange(date) {\n        const date_format = this.formatDate(date)\n        this.setState({\n            new_semester: {\n                ...this.state.new_semester,\n                start_date: date_format\n            }\n        })\n    }\n\n    handleDateFinChange(date) {\n        console.log(date)\n        const date_format = this.formatDate(date)\n        this.setState({\n            new_semester: {\n                ...this.state.new_semester,\n                end_date: date_format\n            }\n        })\n    }\n\n\n    loadSemester(){\n        ajaxGet('semesters').then(res => {\n            this.setState({semesters:res.data, loading: false}) \n        })\n        ajaxGet('current/semester').then(res => {\n            this.setState({current_semester:res.data}) \n        })\n \n    }\n\n    handleChangeCurrentSemester(event){\n        this.setState({\n            current_semester: {\n                ...this.state.current_semester,\n                [event.target.name]: event.target.value\n            }\n        })\n    }\n\n    handleChangeNewSemester(event){\n        this.setState({\n            new_semester: {\n                ...this.state.new_semester,\n                [event.target.name]: event.target.value\n            }\n        })\n    }\n\n    saveNewSemester(){\n        ajaxPost('semesters/',this.state.new_semester).then(res => {\n            let semesters = [...this.state.semesters];\n            semesters.push(res.data);\n            this.setState({semesters: semesters});\n            this.loadDefaultNewSemesterValue();\n        })\n        .catch(res => {\n            console.log(res)  \n        })\n\n    }\n\n    changeSemester(){\n\n        ajaxPost('current/semester',{new_current_semester: this.state.current_semester.id}).then(res => {\n            \n        })\n        .catch(res => {\n            console.log(res)  \n        })\n\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { semesters, current_semester, new_semester, loading } = this.state;\n        const periode = [\n            {\n                value : 'Automne',\n                key : 'A'\n            },\n            {\n                value : 'Printemps',\n                key : 'P'\n            }\n        ]\n\n        if (loading) {\n            return (\n                <Grid \n                    container \n                    className=\"admin_loader\"\n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                >\n                    <Grid item>\n                        <CircularProgress/>\n                    </Grid>\n                </Grid>\n            )\n        }\n\n        return (\n            <div className=\"admin_container\">\n                <Grid container>\n                    <Typography variant=\"h6\" className={classes.subTitle}>\n                        <ChevronRight className={classes.subTitleIcon}/>\n                        Changer de semestre\n                    </Typography>\n                    <Grid container className={classes.note}>\n                        Ce menu vous permet de choisir le semestre en cours, c'est à dire le semestre qui apparaîtra aux utilisateurs de Picsous.<br/> <br/>\n                        A partir du moment où vous changez un semestre, les perms des autres semestres n'apparaîtront plus aux utilisateurs de Picsous - \n                        pour les administrateurs, le système n'affichera par défaut que les factures du semestre en cours. Ils peuvent cependant naviguer \n                        entre les semestres grâce au menu déroulant en haut de l'écran.<br/> <br/>\n                        Ne changez pas de semestre si vous souhaitez juste consulter les informations d'un semestre ! Pour cela, utilisez le menu déroulant.\n                    </Grid>\n                    <Grid container>\n                        <Grid item xs={8} sm={6}>\n                            <TextField\n                                select\n                                className={classes.textField}\n                                name=\"id\"\n                                value={current_semester.id || ''}\n                                autoComplete=\"off\"\n                                margin=\"dense\"\n                                fullWidth\n                                variant=\"outlined\"\n                                onChange={this.handleChangeCurrentSemester}\n                            >\n                                {semesters.map(semesters => (\n                                <MenuItem key={semesters.id} value={semesters.id}>\n                                    {semesters.periode+semesters.annee}\n                                </MenuItem>\n                                ))}\n                            </TextField>\n                        </Grid> \n                        <Grid item xs={4} sm={2}>\n                            <Button variant=\"contained\" size=\"small\" color=\"primary\" className={classes.addButton} onClick={this.changeSemester}> \n                                Changer\n                            </Button>\n                        </Grid>             \n                    </Grid>\n                </Grid>\n\n                <Grid container className={classes.section}>\n                    <Typography variant=\"h6\" className={classes.subTitle}>\n                        <ChevronRight className={classes.subTitleIcon}/>\n                        Créer un semestre\n                    </Typography>\n                    <Grid container className={classes.note}>\n                        Attention ! Cette action n'est pas réversible.\n                    </Grid>\n                    <Grid container>\n                        <Grid item xs={12} sm={6}>\n                            <TextField\n                                select\n                                className={classes.textField}\n                                name=\"periode\"\n                                value={new_semester.periode || ''}\n                                autoComplete=\"off\"\n                                onChange={this.handleChangeNewSemester}\n                                margin=\"dense\"\n                                fullWidth\n                                \n                            >\n                                {periode.map(periode => (\n                                <MenuItem key={periode.key} value={periode.key}>\n                                    {periode.value}\n                                </MenuItem>\n                                ))}\n                            </TextField>\n                        </Grid> \n                        <Grid item xs={12} sm={6}>\n                            <TextField\n                                id=\"standard-number\"\n                                name=\"annee\"\n                                type=\"number\"\n                                value={new_semester.annee}\n                                className={classes.textField}\n                                onChange={this.handleChangeNewSemester}\n                                margin=\"dense\"\n                                fullWidth\n                              />\n                        </Grid>\n\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                            <Grid item xs={12} sm={5}>\n                                \n                                <KeyboardDatePicker\n                                    disableToolbar\n                                    variant=\"inline\"\n                                    format=\"MM/dd/yyyy\"\n                                    name=\"start_date\"\n                                    margin=\"normal\"\n                                    label=\"Date de début\"\n                                    value={new_semester.start_date}\n                                    onChange={this.handleDateDebutChange}\n                                    KeyboardButtonProps={{\n                                        'aria-label': 'change date',\n                                    }}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={5}>\n                                <KeyboardDatePicker\n                                    disableToolbar\n                                    variant=\"inline\"\n                                    name=\"end_date\"\n                                    format=\"MM/dd/yyyy\"\n                                    margin=\"normal\"\n                                    label=\"Date de fin\"\n                                    value={new_semester.end_date}\n                                    onChange={this.handleDateFinChange}\n                                    KeyboardButtonProps={{\n                                        'aria-label': 'change date',\n                                    }}\n                                />\n                            </Grid>\n                        </MuiPickersUtilsProvider>\n\n                        <Grid item xs={4} sm={2}> \n                            <Button variant=\"contained\" size=\"small\" color=\"primary\" className={classes.addButton} onClick={this.saveNewSemester}> \n                                Ajouter\n                            </Button>\n                        </Grid>\n                                     \n                    </Grid>\n                </Grid>\n                \n            </div>\n        );\n    };\n\n}\n\nconst styles = theme => ({\n    container: {\n        padding: 20,\n        margin: 30,\n        marginTop: 100,\n        border: \"2px solid #B22132\",\n    },\n    paper: {\n        padding: 10\n    },\n    note: {\n        backgroundColor: 'rgba(0,0,0, 0.05)',\n        padding: 10,\n        border: 'thin solid grey',\n        marginTop: 16,\n        marginBottom: 8,\n    },\n    textField: {\n        marginTop: 16,\n        paddingRight: 15,\n    },\n    suggestions: {\n        zIndex: 100,\n        position: 'absolute',\n        maxHeight: 200,\n        overflowY: 'scroll',\n        marginRight: 15,\n    },\n    suggestionItem: {\n        paddingLeft: 15,\n        paddingBottom: 0,\n        paddingTop: 0,\n        fontSize: 14,\n        minHeight: 30,\n    },\n    addButton: {\n        marginTop: 16,\n        marginBottom: 8,\n    },\n    subTitle: {\n        marginTop: 10,\n        marginBottom: 10,\n    },\n    subTitleIcon: {\n        marginRight: 8,\n        paddingTop: 5,\n    },\n    row: {\n        height: 40,\n    },\n    cell: {\n        paddingTop: 10,\n        paddingBottom: 10,\n    },\n    btn: {\n        marginLeft: 5,\n        marginRight: 5,\n        marginTop: 3,\n    },\n});\n\nexport default withStyles (styles) (Semesters)","import React, {Component} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport Grid from '@material-ui/core/Grid';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Paper from '@material-ui/core/Paper';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { ajaxGet, ajaxPost } from '../../../utils/Ajax';\n\nclass Settings extends Component{\n \n    \n    constructor(props) {\n        super(props)\n\n        this.state = {\n            settings : {\n                GINGER_URL : '', \n                GINGER_KEY : '',  \n                PAYUTC_CONNECTION_UID : '', \n                PAYUTC_CONNECTION_PIN: '', \n                PAYUTC_APP_KEY: '', \n                PAYUTC_APP_URL: '', \n                SEMESTER: ''\n            },\n            user : {\n                login : ''\n            },\n            autoCompleteUsers: [],\n            loading: true\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleChangeSetting = this.handleChangeSetting.bind(this);\n        this.loadSettings = this.loadSettings.bind(this);\n        this.autoCompleteQuery = this.autoCompleteQuery.bind(this);\n        this.saveSettings = this.saveSettings.bind(this);\n        this.updateBadge = this.updateBadge.bind(this);\n    }\n\n\n    componentDidMount(){\n        this.loadSettings();\n    }\n\n    updateBadge(name){\n        const login = name.match(/\\(.*\\)/).toString()\n        const query = login.substring(1,9)\n        ajaxGet('core/user?login='+query).then(res => {\n            const new_user = {\n                login : '',\n            }\n            this.setState({\n                settings: {\n                    ...this.state.settings,\n                    PAYUTC_CONNECTION_UID : res.data.badge_uid,\n                    PAYUTC_CONNECTION_PIN :  res.data.badge_pin\n                }\n            })\n            this.setState({user : new_user, autoCompleteUsers:[]})\n\n        })\n\n    }\n\n    saveSettings(){\n        ajaxPost('admin/settings', {settings: this.state.settings}).then(res => {\n    \n        })\n        .catch(error=>{\n            console.log(error)\n        })\n    }\n\n\n    handleChange(event){\n        this.setState({\n            user: {\n                ...this.state.user,\n                [event.target.name]: event.target.value\n            }\n        })\n        if (event.target.name === 'login' && event.target.value) {\n            this.autoCompleteQuery(event.target.value)\n        }\n    }\n\n    handleChangeSetting(event){\n        this.setState({\n            settings: {\n                ...this.state.settings,\n                [event.target.name]: event.target.value\n            }\n        })\n    }\n\n\n    // Méthode pour obtenir de Payutc des auto complétions\n    // via la valeur entrée\n    autoCompleteQuery(query){\n        ajaxGet('payutc/user/autocomplete/' + query).then(res => {\n            this.setState({autoCompleteUsers: res.data.users});\n        })\n        .catch(error => {\n            console.log(error)\n        })\n    }\n\n    loadSettings(){\n\n        ajaxGet('admin/settings', this.state.settings).then(res => {\n            const new_user = {\n                login : '',\n                badge : res.data.settings.PAYUTC_CONNECTION_UID,\n                pin : res.data.settings.PAYUTC_CONNECTION_PIN\n            }\n            this.setState({settings:res.data.settings, user : new_user, loading: false}) \n        })\n        .catch(res => {\n            console.log(res)  \n        })\n \n    }\n \n\n    render(){\n        \n        const { classes } = this.props;\n\n        const {settings, autoCompleteUsers, user, loading} = this.state;\n\n        if (loading) {\n            return (\n                <Grid \n                    container \n                    className=\"admin_loader\"\n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                >\n                    <Grid item>\n                        <CircularProgress/>\n                    </Grid>\n                </Grid>\n            )\n        }\n\n        return (\n            <div className=\"admin_container\">\n                <Grid container className={classes.section}>\n                    <Typography variant=\"h6\" className={classes.subTitle}>\n                        <ChevronRightIcon className={classes.subTitleIcon}/>\n                        Badge PayUTC\n                    </Typography>\n                    <Grid container className={classes.note}>\n                        Ce badge permet de définir avec quels identifiants la connexion à PayUTC est réalisée. <br/><br/>\n                        Bien que cette méthode de connexion à PayUTC pour le serveur aie une configuration contraignante (il faut, pour se connecter, l'identifiant du badge et le PIN, à la façon d'une connexion sur les caisses), c'est celle qui une fois installée permet le fonctionnement le plus rapide du logiciel.\n                    </Grid>\n                    <Grid container>\n                        <Grid item xs={12}>\n                            <TextField\n                                label=\"Chercher un utilisateur ...\"\n                                className={classes.inputField}\n                                name=\"login\"\n                                value={user.login|| ''}\n                                onChange={this.handleChange}\n                                autoComplete=\"off\"\n                                margin=\"dense\"\n                                variant=\"outlined\"\n                                fullWidth\n                            />\n                            <Paper className={classes.suggestions}>\n                                {autoCompleteUsers.map((suggestion, index)=> (\n                                    <MenuItem\n                                        className={classes.suggestionItem}\n                                        key={index}\n                                        component=\"div\"\n                                        onClick={()=>this.updateBadge(suggestion.name.split('-')[0])}\n                                        \n                                    >\n                                        {suggestion.name.split('-')[0]}\n                                    </MenuItem>\n                                ))}     \n                            </Paper>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <TextField\n                                label=\"Badge de connexion (UID)\"\n                                className={classes.inputField}\n                                name=\"PAYUTC_CONNECTION_UID\"\n                                value={settings.PAYUTC_CONNECTION_UID|| ''}\n                                onChange={this.handleChangeSetting}\n                                autoComplete=\"off\"\n                                margin=\"dense\"\n                                variant=\"outlined\"\n                                fullWidth\n                            />\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <TextField\n                                label=\"Code PIN de l'utilisateur\"\n                                className={classes.inputField}\n                                name=\"PAYUTC_CONNECTION_PIN\"\n                                value={settings.PAYUTC_CONNECTION_PIN|| ''}\n                                onChange={this.handleChangeSetting}\n                                autoComplete=\"off\"\n                                margin=\"dense\"\n                                variant=\"outlined\"\n                                type=\"password\"\n                                fullWidth\n                            />\n                            \n                        </Grid>\n                    </Grid>\n                    \n                </Grid>\n\n                <Grid container className={classes.section}>\n                    <Typography variant=\"h6\" className={classes.subTitle}>\n                        <ChevronRightIcon className={classes.subTitleIcon}/>\n                        API Ginger\n                    </Typography>\n                    <Grid container className={classes.note}>\n                        Ces paramètres permettent de définir d'où les informations sur les utilisateurs sont récupérées.\n                    </Grid>\n                    <Grid container>\n                        <Grid item xs={12} sm={6}>\n                            <TextField\n                                label=\"URL de l'API\"\n                                className={classes.inputField}\n                                name=\"GINGER_URL\"\n                                value={settings.GINGER_URL}\n                                onChange={this.handleChangeSetting}\n                                autoComplete=\"off\"\n                                margin=\"dense\"\n                                fullWidth\n                                variant=\"outlined\"\n                            />\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <TextField\n                                label=\"Clé de connexion\"\n                                className={classes.inputField}\n                                name=\"GINGER_KEY\"\n                                value={settings.GINGER_KEY}\n                                onChange={this.handleChangeSetting}\n                                autoComplete=\"off\"\n                                margin=\"dense\"\n                                variant=\"outlined\"\n                                fullWidth\n                            />\n                        </Grid>              \n                    </Grid>\n                </Grid>\n\n                <Grid container className={classes.section}>\n                    <Typography variant=\"h6\" className={classes.subTitle}>\n                        <ChevronRightIcon className={classes.subTitleIcon}/>\n                        API PayUTC\n                    </Typography>\n                    <Grid container className={classes.note}>\n                        Ces paramètres permettent de définir la connexion au serveur PayUTC.\n                    </Grid>\n                    <Grid container>\n                        <Grid item xs={12} sm={6}>\n                            <TextField\n                                label=\"URL de l'API\"\n                                className={classes.inputField}\n                                name=\"PAYUTC_APP_URL\"\n                                value={settings.PAYUTC_APP_URL}\n                                onChange={this.handleChangeSetting}\n                                autoComplete=\"off\"\n                                margin=\"dense\"\n                                variant=\"outlined\"\n                                fullWidth\n                            />\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <TextField\n                                label=\"Clé de connexion\"\n                                className={classes.inputField}\n                                name=\"PAYUTC_APP_KEY\"\n                                value={settings.PAYUTC_APP_KEY}\n                                onChange={this.handleChangeSetting}\n                                autoComplete=\"off\"\n                                margin=\"dense\"\n                                variant=\"outlined\"\n                                fullWidth\n                            />\n                        </Grid>              \n                    </Grid>\n                </Grid>\n\n                <Grid \n                    container \n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                >\n                    <Button variant=\"contained\" color=\"primary\" className={classes.addButton} onClick={this.saveSettings}> \n                        Sauvegarder\n                    </Button>\n                </Grid>\n                \n            </div>\n        );\n    };\n\n}\n\nconst styles = theme => ({\n    container: {\n        padding: 20,\n        margin: 30,\n        marginTop: 100,\n        border: \"2px solid #B22132\",\n    },\n    section:{\n        paddingBottom :30,\n    },\n    paper: {\n        padding: 10\n    },\n    note: {\n        backgroundColor: 'rgba(0,0,0, 0.05)',\n        padding: 10,\n        border: 'thin solid grey',\n        marginTop: 16,\n        marginBottom: 8,\n    },\n    inputField: {\n        marginTop: 16,\n        paddingLeft: 5,\n        paddingRight: 5,\n    },\n    suggestions: {\n        zIndex: 100,\n        position: 'absolute',\n        maxHeight: 200,\n        overflowY: 'scroll',\n        marginRight: 15,\n    },\n    suggestionItem: {\n        paddingLeft: 15,\n        paddingBottom: 0,\n        paddingTop: 0,\n        fontSize: 14,\n        minHeight: 30,\n    },\n    addButton: {\n        marginTop: 16,\n        marginBottom: 8,\n    },\n    subTitle: {\n        marginTop: 10,\n        marginBottom: 10,\n    },\n    subTitleIcon: {\n        marginRight: 8,\n        paddingTop: 5,\n    },\n    row: {\n        height: 40,\n    },\n    cell: {\n        paddingTop: 10,\n        paddingBottom: 10,\n    },\n    btn: {\n        marginLeft: 5,\n        marginRight: 5,\n        marginTop: 3,\n    },\n});\n\nexport default withStyles (styles) (Settings)\n\n\n","import React, {Component} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { ajaxGet, ajaxPost } from '../../../utils/Ajax';\n\nclass TeamManagement extends Component{\n \n    \n    constructor(props) {\n        super(props)\n\n        this.state = {\n            team : [],\n            users: [],\n            loading: true,\n        }\n    }\n\n    componentDidMount(){\n        this.loadMembers();\n    }\n\n\n    loadMembers(){\n        ajaxGet('core/team').then(res => {\n            this.setState({team: res.data.team, loading: false})\n        })\n        .catch(error => {\n            console.log(error)\n        })\n        ajaxGet('userrights').then(res => {\n            const userrights = res.data.filter(u => u.right === \"A\" || u.right === \"M\");\n            this.setState({users: userrights})\n        })\n        .catch(error => {\n            console.log(error)\n        })\n    }\n\n\n    addMember(userright_id){\n        ajaxPost('admin/members/', {userright_id: userright_id}).then(res => {\n            this.loadMembers();\n        })\n        .catch(error => {\n            console.log(error);\n        })\n    }\n\n\n    render(){\n        \n        const { classes } = this.props;\n\n        const {team, loading, users} = this.state;\n\n        function isUserAlreadyInTeam(user_id){\n            const index = team.findIndex(t => t.userright_id === user_id);\n            if(index >= 0){\n                return true;\n            }\n            return false;\n        }\n\n\n        if (loading) {\n            return (\n                <Grid \n                    container \n                    className=\"admin_loader\"\n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                >\n                    <Grid item>\n                        <CircularProgress/>\n                    </Grid>\n                </Grid>\n            )\n        }\n\n        return (\n            <div className=\"admin_container\">\n                <Typography variant=\"h6\" className={classes.subTitle}>\n                    <ChevronRightIcon className={classes.subTitleIcon}/>\n                    Liste des membres\n                </Typography>\n                <Grid container className={classes.note}>\n                    Cet onglet permet d'ajouter à la Team tous les membres du Pic. Les personnes ayant des droits sur les systèmes du Pic\n                    (anciennes team info, ...) mais ne faisant pas partie de la vraie team du Pic ne doivent donc pas être ajoutés. Cette team\n                    a uniquement pour objectif l'attribution des astreintes et la notation des perms. \n                </Grid>\n                <Paper className={classes.rootTable}>\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell className={classes.cell}>\n                                    Nom\n                                </TableCell>\n                                <TableCell className={classes.cell}>\n                                    Notation\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {team.map((row, index) => (\n                                <TableRow hover key={index} className={classes.row}>\n                                    <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\n                                        {row.userright.name}\n                                    </TableCell>\n                                    <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\n                                        {row.rated_astreintes} / {row.total_astreintes}\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </Paper>\n                <Typography variant=\"h6\" className={classes.subTitle} style={{marginTop: 30}}>\n                    <ChevronRightIcon className={classes.subTitleIcon}/>\n                    Ajouter de nouveaux membres\n                </Typography>\n                <Paper className={classes.rootTable}>\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell className={classes.cell}>\n                                    Nom\n                                </TableCell>\n                                <TableCell className={classes.cell}>\n                                    Droit\n                                </TableCell>\n                                <TableCell className={classes.cell}>\n                                    Action\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {users.map((row, index) => \n                                !isUserAlreadyInTeam(row.id) && (\n                                    <TableRow hover key={index} className={classes.row}>\n                                        <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\n                                            {row.name}\n                                        </TableCell>\n                                        <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\n                                            {row.right === \"A\" && <span>Administrateur</span>}\n                                            {row.right === \"M\" && <span>Membre</span>}\n                                        </TableCell>\n                                        <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\n                                            <Button \n                                                color=\"primary\"\n                                                variant=\"contained\" \n                                                margin=\"dense\"\n                                                size=\"small\"\n                                                disabled={isUserAlreadyInTeam(row.id)}\n                                                className={classes.btn} \n                                                onClick={() => this.addMember(row.id)}\n                                            >\n                                                Ajouter\n                                            </Button>\n                                        </TableCell>\n                                    </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </Paper>\n            </div>\n        );\n    };\n\n}\n\nconst styles = theme => ({\n    rootTable : {\n        width: '100%',\n        overflowX: 'auto'\n    },\n    container: {\n        padding: 20,\n        margin: 30,\n        marginTop: 100,\n        border: \"1.5px solid #B22132\",\n    },\n    subTitle: {\n        marginBottom: 40,\n    },\n    note: {\n        backgroundColor: 'rgba(0,0,0, 0.05)',\n        padding: 10,\n        border: 'thin solid grey',\n        marginTop: 16,\n        marginBottom: 8,\n    },\n    subTitleIcon: {\n        marginRight: 8,\n        paddingTop: 5,\n    },\n    add_item : {\n        marginLeft: 10,\n    },\n    btn : {\n        margin: 5,\n    },\n});\n\nexport default withStyles (styles) (TeamManagement)","import React, {Component} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Grid from '@material-ui/core/Grid';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Paper from '@material-ui/core/Paper';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { ajaxGet, ajaxPost } from '../../../utils/Ajax';\n\nclass Users extends Component{\n \n    \n    constructor(props) {\n        super(props)\n\n        this.state = {\n            users : [],\n            new_user : {\n                login: '',\n                right: 'M',\n                name: ''\n            },\n            page: 0,\n            rowsPerPage: 5,\n            autoCompleteUsers: [],\n            loading: true\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.autoCompleteQuery = this.autoCompleteQuery.bind(this);\n        this.saveUser = this.saveUser.bind(this);\n        this.upgradeUser = this.upgradeUser.bind(this);\n        this.downgradeUser = this.downgradeUser.bind(this);\n        this.selectUser = this.selectUser.bind(this);\n        this.deleteUser = this.deleteUser.bind(this);\n        this.giveaccesUser = this.giveaccesUser.bind(this);\n        this.updateUser = this.updateUser.bind(this);\n        this.handleChangePage = this.handleChangePage.bind(this);\n    }\n\n    componentDidMount(){\n        this.loadUsers();\n    }\n\n\n    handleChange(event){\n        this.setState({\n            new_user: {\n                ...this.state.new_user,\n                [event.target.name]: event.target.value\n            }\n        })\n        if (event.target.name === 'login') {\n            if (event.target.value){\n                this.autoCompleteQuery(event.target.value)\n            } else {\n                this.setState({autoCompleteUsers: []})\n            }\n        }\n    }\n\n\n    // Méthode pour obtenir de Payutc des auto complétions\n    // via la valeur entrée\n    autoCompleteQuery(query){\n        ajaxGet('payutc/user/autocomplete/' + query).then(res => {\n            this.setState({autoCompleteUsers: res.data.users});\n        })\n        .catch(error => {\n\n        })\n    }\n\n\n    loadUsers(){\n        ajaxGet('users').then(res => {\n            let users = res.data.users;\n            users = users.sort(function(a,b){\n                if (a.user.prenom > b.user.prenom) {\n                    return 1\n                }\n                return -1\n            })\n            this.setState({users: users, loading: false})\n        })\n        .catch(error => {\n            console.log(error)\n        })\n    }\n\n\n    selectUser(name){\n        const regex = name.match(/\\(.*\\)/).toString()\n        const login = regex.substring(1,9)\n        const user_name = name.replace(\" \" + regex,'');\n        this.setState({\n            new_user: {\n                ...this.state.new_user,\n                login: login,\n                name: user_name,\n            },\n            autoCompleteUsers: [],\n        })\n    }\n\n\n    saveUser(){\n        //Traiter le cas où user déjà présent\n        ajaxPost('users/', this.state.new_user).then(res => {\n            const new_user = res.data.user;\n            let users = this.state.users;\n            // On vérifie que l'utilisateur n'est pas déjà dans le tableau\n            const index = users.findIndex(u => u.login === new_user.login);\n            if (index >= 0) {\n                users[index] = new_user;\n            } else {\n                users.push(new_user);\n            }\n            this.setState({users: users})\n        })\n        .catch(res => {\n\n        })\n        this.setState({\n            new_user : {login: '', right: 'M'}\n        });\n    }\n\n\n    upgradeUser(event, user){\n        user.right = 'A';\n        this.updateUser(user)\n    }\n\n    \n    downgradeUser(event, user){\n        user.right = 'M';\n        this.updateUser(user)\n    }\n\n    \n    giveaccesUser(event, user){\n        user.right = 'M';\n        this.updateUser(user)\n    }\n\n    \n    deleteUser(event, user){\n        user.right = 'N';\n        this.updateUser(user)\n    }\n\n    \n    updateUser(user){\n        ajaxPost('users/', user).then(res => {\n            let users = this.state.users;\n            const index = users.findIndex(u => u.login === user.login);\n            if (index >= 0) {\n                users[index] = res.data.user;\n                this.setState({users: users})\n            }   \n        })\n        .catch(error => {\n\n        })\n    }\n\n    \n    handleChangePage(event, newPage){\n        this.setState({page: newPage});\n    }\n        \n\n    render(){\n        \n        const { classes } = this.props;\n\n        const {users, new_user, autoCompleteUsers, page, rowsPerPage, loading} = this.state;\n\n        const rights = [\n            { value: 'N', label: 'Aucun droit' },\n            { value: 'M', label: 'Membre du Pic' },\n            { value: 'A', label: 'Administrateur' },\n        ];\n\n        if (loading) {\n            return (\n                <Grid \n                    container \n                    className=\"admin_loader\"\n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                >\n                    <Grid item>\n                        <CircularProgress/>\n                    </Grid>\n                </Grid>\n            )\n        }\n\n        return (\n            <div className=\"admin_container\">\n                <Typography variant=\"h6\" className={classes.subTitle}>\n                    <ChevronRightIcon className={classes.subTitleIcon}/>\n                    Ajouter un nouvel utilisateur\n                </Typography>\n                <Grid container>\n                    <Grid item xs={12} sm={5}>\n                        <TextField\n                            label=\"Nom de l'étudiant\"\n                            className={classes.textField}\n                            name=\"login\"\n                            value={new_user.login}\n                            onChange={this.handleChange}\n                            autoComplete=\"off\"\n                            margin=\"dense\"\n                            variant=\"outlined\"\n                        />\n                        <Paper className={classes.suggestions}>\n                            {autoCompleteUsers.map((suggestion, index)=> (\n                                <MenuItem\n                                    className={classes.suggestionItem}\n                                    key={index}\n                                    component=\"div\"\n                                    onClick={()=>this.selectUser(suggestion.name.split('-')[0])}\n                                >\n                                    {suggestion.name.split('-')[0]}\n                                </MenuItem>\n                            ))}\n                            \n                        </Paper>\n                    </Grid>\n                    <Grid item xs={8} sm={5}>\n                        <TextField\n                            select\n                            label=\"Droit de l'utilisateur\"\n                            className={classes.textField}\n                            name=\"right\"\n                            value={new_user.right}\n                            onChange={this.handleChange}\n                            margin=\"dense\"\n                            variant=\"outlined\"\n                        >\n                            {rights.map(option => (\n                            <MenuItem key={option.value} value={option.value}>\n                                {option.label}\n                            </MenuItem>\n                            ))}\n                        </TextField>\n                    </Grid>\n                    <Grid item xs={4} sm={2}>\n                        <Button variant=\"contained\" color=\"primary\" className={classes.addButton} size=\"small\" onClick={this.saveUser}>\n                            Ajouter\n                        </Button>\n                    </Grid>\n                </Grid>\n                \n                <Typography variant=\"h6\" className={classes.subTitle}>\n                    <ChevronRightIcon className={classes.subTitleIcon}/>\n                    Liste des utilisateurs\n                </Typography>\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell className={classes.cell}>\n                                Utilisateur\n                            </TableCell>\n                            <TableCell className={classes.cell}>\n                                Droit\n                            </TableCell>\n                            <TableCell className={classes.cell}>\n                                Actions\n                            </TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {users.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                            .map((row, index) => (\n                            <TableRow hover key={index} className={classes.row}>\n                                <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\n                                    {row.user && row.user.prenom} {row.user && row.user.nom} ({row.login})\n                                </TableCell>\n                                <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\n                                    {row.right_detail}\n                                </TableCell>\n                                <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\n                                    {row.right === \"A\" && (\n                                        <Button \n                                            variant=\"contained\" \n                                            size=\"small\" \n                                            className={classes.btn} \n                                            onClick={(e) => this.downgradeUser(e, row)}\n                                        >\n                                            Rétrograder\n                                        </Button>\n                                    )}\n                                    {row.right === \"M\" && (\n                                        <Button \n                                            variant=\"contained\" \n                                            size=\"small\" \n                                            color=\"primary\" \n                                            className={classes.btn} \n                                            onClick={(e) => this.upgradeUser(e, row)}\n                                        >\n                                            Upgrader\n                                        </Button>\n                                    )}\n                                    {row.right === \"N\" ? (\n                                        <Button \n                                            variant=\"contained\" \n                                            size=\"small\" \n                                            color=\"primary\" \n                                            className={classes.btn} \n                                            onClick={(e) => this.giveaccesUser(e, row)}\n                                        >\n                                            Accès\n                                        </Button>\n                                    ): (\n                                        <Button \n                                            variant=\"contained\" \n                                            size=\"small\" \n                                            color=\"secondary\" \n                                            className={classes.btn} \n                                            onClick={(e) => this.deleteUser(e, row)}\n                                        >\n                                            Supprimer\n                                        </Button>\n                                    )}\n                                    \n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n                <TablePagination\n                    component=\"div\"\n                    rowsPerPageOptions={[]}\n                    count={users.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    backIconButtonProps={{\n                        'aria-label': 'previous page',\n                    }}\n                    nextIconButtonProps={{\n                        'aria-label': 'next page',\n                    }}\n                    onChangePage={this.handleChangePage}\n                />\n            </div>\n        );\n    };\n\n}\n\nconst styles = theme => ({\n    container: {\n        padding: 20,\n        margin: 30,\n        marginTop: 100,\n        border: \"1.5px solid #B22132\",\n    },\n    paper: {\n        padding: 10\n    },\n    textField: {\n        marginTop: 16,\n        paddingRight: 15,\n        width: \"100%\",\n    },\n    suggestions: {\n        zIndex: 100,\n        position: 'absolute',\n        maxHeight: 200,\n        overflowY: 'scroll',\n        marginRight: 15,\n    },\n    suggestionItem: {\n        paddingLeft: 15,\n        paddingBottom: 0,\n        paddingTop: 0,\n        fontSize: 14,\n        minHeight: 30,\n    },\n    addButton: {\n        marginTop: 16,\n        marginBottom: 8,\n    },\n    subTitle: {\n        marginTop: 10,\n        marginBottom: 10,\n    },\n    subTitleIcon: {\n        marginRight: 8,\n        paddingTop: 5,\n    },\n    row: {\n        height: 40,\n    },\n    cell: {\n        paddingTop: 10,\n        paddingBottom: 10,\n        paddingRight: 10,\n        paddingLeft: 10,\n    },\n    btn: {\n        margin: 5\n    },\n});\n\nexport default withStyles (styles) (Users)","import React, {Component} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Grid from '@material-ui/core/Grid';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Paper from '@material-ui/core/Paper';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { ajaxGet, ajaxPost, ajaxDelete } from '../../../utils/Ajax';\nimport { formateFromDjangoDate } from '../../../utils/Date';\n\nclass BlockedUsers extends Component{\n\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            users : [],\n            new_user : {\n                login: '',\n                justification: ''\n            },\n            autoCompleteUsers: [],\n            loading: true\n        }\n    }\n\n    componentDidMount(){\n        this.loadUsers();\n    }\n\n\n    handleChange(event){\n        this.setState({\n            new_user: {\n                ...this.state.new_user,\n                [event.target.name]: event.target.value\n            }\n        })\n        if (event.target.name === 'login') {\n            if (event.target.value){\n                this.autoCompleteQuery(event.target.value)\n            } else {\n                this.setState({autoCompleteUsers: []})\n            }\n        }\n    }\n\n\n    // Méthode pour obtenir de Payutc des auto complétions\n    // via la valeur entrée\n    autoCompleteQuery(query){\n        ajaxGet('payutc/user/autocomplete/' + query).then(res => {\n            this.setState({autoCompleteUsers: res.data.users});\n        })\n        .catch(error => {\n\n        })\n    }\n\n\n    loadUsers(){\n        ajaxGet('blocked/users/').then(res => {\n            let users = res.data.blocked_users;\n            users = users.sort(function(a,b){\n                if (a.date > b.date) {\n                    return -1\n                }\n                return 1\n            })\n            this.setState({users: users, loading: false})\n        })\n        .catch(error => {\n            console.log(error)\n        })\n    }\n\n\n    selectUser(name){\n        const regex = name.match(/\\(.*\\)/).toString()\n        const login = regex.substring(1,9)\n        this.setState({\n            new_user: {\n                ...this.state.new_user,\n                login: login,\n            },\n            autoCompleteUsers: [],\n        })\n    }\n\n\n    saveUser(){\n        ajaxPost('blocked/users/', this.state.new_user).then(res => {\n            const user = res.data.user;\n            let users = this.state.users;\n            users.push(user);\n            this.setState({users: users})\n        })\n        .catch(res => {\n\n        })\n        this.setState({\n            new_user : {login: '', justification: ''}\n        });\n    }\n\n\n\n    deleteBlockedUser(user){\n        ajaxDelete('blocked/users/' + user.id + '/').then(res => {\n            const users = this.state.users.filter(u => u.id !== user.id);\n            this.setState({users: users})\n        })\n        .catch(error => {\n\n        })\n    }\n\n\n    render(){\n\n        const { classes } = this.props;\n\n        const {users, new_user, autoCompleteUsers, loading} = this.state;\n\n        if (loading) {\n            return (\n                <Grid\n                    container\n                    className=\"admin_loader\"\n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                >\n                    <Grid item>\n                        <CircularProgress/>\n                    </Grid>\n                </Grid>\n            )\n        }\n\n        return (\n            <div className=\"admin_container\">\n                <Typography variant=\"h6\" className={classes.subTitle}>\n                    <ChevronRightIcon className={classes.subTitleIcon}/>\n                    Bloquer un utilisateur\n                </Typography>\n                <Grid container>\n                    <Grid item xs={12} sm={5}>\n                        <TextField\n                            label=\"Nom de l'étudiant\"\n                            className={classes.textField}\n                            name=\"login\"\n                            value={new_user.login}\n                            onChange={(e) => this.handleChange(e)}\n                            autoComplete=\"off\"\n                            margin=\"dense\"\n                            variant=\"outlined\"\n                        />\n                        <Paper className={classes.suggestions}>\n                            {autoCompleteUsers.map((suggestion, index)=> (\n                                <MenuItem\n                                    className={classes.suggestionItem}\n                                    key={index}\n                                    component=\"div\"\n                                    onClick={()=>this.selectUser(suggestion.name.split('-')[0])}\n                                >\n                                    {suggestion.name.split('-')[0]}\n                                </MenuItem>\n                            ))}\n\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={8} sm={5}>\n                        <TextField\n                            label=\"Motif\"\n                            className={classes.textField}\n                            name=\"justification\"\n                            value={new_user.justification}\n                            onChange={(e) => this.handleChange(e)}\n                            margin=\"dense\"\n                            variant=\"outlined\"\n                        />\n                    </Grid>\n                    <Grid item xs={4} sm={2}>\n                        <Button variant=\"contained\" color=\"primary\" className={classes.addButton} size=\"small\" onClick={() => this.saveUser()}>\n                            Ajouter\n                        </Button>\n                    </Grid>\n                </Grid>\n\n                <Typography variant=\"h6\" className={classes.subTitle}>\n                    <ChevronRightIcon className={classes.subTitleIcon}/>\n                    Liste des utilisateurs bloqués\n                </Typography>\n                <Paper className={classes.rootTable}>\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell className={classes.cell}>\n                                    Utilisateur\n                                </TableCell>\n                                <TableCell className={classes.cell}>\n                                    Motif\n                                </TableCell>\n                                <TableCell className={classes.cell}>\n                                    Depuis le\n                                </TableCell>\n                                <TableCell className={classes.cell}>\n                                    Actions\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {users.map((row, index) => (\n                                <TableRow hover key={index} className={classes.row}>\n                                    <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\n                                        {row.name}\n                                    </TableCell>\n                                    <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\n                                        {row.justification}\n                                    </TableCell>\n                                    <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\n                                        {formateFromDjangoDate(row.date)}\n                                    </TableCell>\n                                    <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\n                                        <Button\n                                            variant=\"contained\"\n                                            size=\"small\"\n                                            className={classes.btn}\n                                            onClick={() => this.deleteBlockedUser(row)}\n                                        >\n                                            Débloquer\n                                        </Button>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </Paper>\n            </div>\n        );\n    };\n\n}\n\nconst styles = theme => ({\n    container: {\n        padding: 20,\n        margin: 30,\n        marginTop: 100,\n        border: \"1.5px solid #B22132\",\n    },\n    rootTable : {\n        width: '100%',\n        overflowX: 'auto'\n    },\n    paper: {\n        padding: 10\n    },\n    textField: {\n        marginTop: 16,\n        paddingRight: 15,\n        width: \"100%\",\n    },\n    suggestions: {\n        zIndex: 100,\n        position: 'absolute',\n        maxHeight: 200,\n        overflowY: 'scroll',\n        marginRight: 15,\n    },\n    suggestionItem: {\n        paddingLeft: 15,\n        paddingBottom: 0,\n        paddingTop: 0,\n        fontSize: 14,\n        minHeight: 30,\n    },\n    addButton: {\n        marginTop: 16,\n        marginBottom: 8,\n    },\n    subTitle: {\n        marginTop: 10,\n        marginBottom: 10,\n    },\n    subTitleIcon: {\n        marginRight: 8,\n        paddingTop: 5,\n    },\n    row: {\n        height: 40,\n    },\n    cell: {\n        paddingTop: 10,\n        paddingBottom: 10,\n        paddingRight: 10,\n        paddingLeft: 10,\n    },\n    btn: {\n        margin: 5\n    },\n});\n\nexport default withStyles (styles) (BlockedUsers)\n","import React, {Component} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { ajaxGet, ajaxPost, ajaxPatch, ajaxDelete } from '../../../utils/Ajax';\nimport { formateFromDjangoDate } from '../../../utils/Date';\n\n\nclass ResourcesManagement extends Component{\n \n    \n    constructor(props) {\n        super(props)\n\n        this.state = {\n            creneaux : [],\n            creneau : {\n                perm_id: '',\n                date: '',\n                creneau: 'M',\n            },\n            mode: 'create',\n            open_modal: false,\n            confirm_modal: false,\n            loading: true,\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    componentDidMount(){\n        this.loadPerms();\n    }\n\n\n    handleChange(event){\n        this.setState({\n            creneau: {\n                ...this.state.creneau,\n                [event.target.name]: event.target.value\n            }\n        })\n    }\n\n    handleModalClickOpen = () => {\n        this.setState({open_modal: true})\n    }\n\n    handleConfirmModalOpen(creneau){\n        this.setState({creneau: creneau, confirm_modal: true})\n    }\n\n    handleModalClickClose = () => {\n        this.setState({open_modal: false, confirm_modal: false})\n        this.reloadNewCreneau();\n    };\n\n\n    selectCreneau = (event, creneau) => {\n        this.setState({creneau: creneau, mode: 'edit'})\n        this.handleModalClickOpen();\n    }\n\n\n    loadPerms(){\n        ajaxGet('perms/').then(res => {\n            let perms = res.data\n            perms = perms.sort(function(a,b){\n                if (a.nom > b.nom) {\n                    return 1\n                }\n                return -1\n            })\n            this.setState({perms: perms})\n            this.loadCreneaux();\n        })\n        .catch(error => {\n            console.log(error)\n        })\n    }\n\n\n    loadCreneaux(){\n        ajaxGet('creneau/').then(res => {\n            let creneaux = res.data\n            creneaux = creneaux.sort(function(a,b){\n                if (a.date > b.date) {\n                    return -1\n                }\n                return 1\n            })\n            this.setState({creneaux: creneaux, loading: false})\n        })\n        .catch(error => {\n            console.log(error)\n        })\n    }\n\n    reloadNewCreneau(){\n        this.setState({creneau: {\n            perm_id: '',\n            date: '',\n            crneau: 'M',     \n        }, mode: 'create'})\n    }\n\n\n    saveCreneau(){\n        const creneau = this.state.creneau\n        if(this.state.mode === \"create\"){\n            ajaxPost('creneau/', creneau).then((res) => {  \n                const new_creneau = res.data;\n                let creneaux = [...this.state.creneaux];\n                creneaux.unshift(new_creneau);\n                this.setState({creneaux: creneaux})\n                this.handleModalClickClose();\n            })\n            .catch((error) => {\n                console.log(error);\n            })  \n        } else if (this.state.mode === \"edit\"){\n            const data = {\n                creneau: creneau.creneau,\n                date: creneau.date,\n                perm_id: creneau.perm_id\n            }\n            ajaxPatch('creneau/' + creneau.id + '/', data).then((res) => {\n                let creneaux = [...this.state.creneaux];\n                const updated_creneau_index = creneaux.findIndex(c => c.id === creneau.id);\n                if (updated_creneau_index > -1) {\n                    creneaux[updated_creneau_index].perm_id = data.perm_id;\n                    creneaux[updated_creneau_index].date = data.date;\n                    creneaux[updated_creneau_index].creneau = data.creneau;\n                }\n                this.setState({creneaux: creneaux})\n                this.handleModalClickClose();\n            })\n            .catch((error) => {\n                console.log(error);\n            }) \n        }\n    }\n\n\n    deleteCreneau(creneau_id){\n        ajaxDelete('creneau/' + creneau_id + '/').then(() => {\n            let creneaux = this.state.creneaux;\n            creneaux = creneaux.filter(c => c.id !== creneau_id)\n            this.setState({creneaux: creneaux, confirm_modal: false})\n        })\n        .catch((error) => {\n\n        })\n    }\n\n        \n\n    render(){\n        \n        const { classes } = this.props;\n\n        const {creneau, creneaux, perms, mode, open_modal, confirm_modal, loading} = this.state;\n\n        const creneau_types = [\n            {value: \"M\", label: \"Matin\"},\n            {value: \"D\", label: \"Midi\"},\n            {value: \"S\", label: \"Soir\"}\n        ]\n\n\n        if (loading) {\n            return (\n                <Grid \n                    container \n                    className=\"admin_loader\"\n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                >\n                    <Grid item>\n                        <CircularProgress/>\n                    </Grid>\n                </Grid>\n            )\n        }\n\n        return (\n            <div className=\"admin_container\">\n                <Typography variant=\"h5\" className={classes.subTitle}>\n                    <ChevronRightIcon className={classes.subTitleIcon}/>\n                    Liste des créneaux\n                    <Fab \n                        size=\"small\" \n                        color=\"primary\" \n                        className={classes.add_item}\n                        onClick={(e) => this.handleModalClickOpen()}\n                    >\n                        <AddIcon />\n                    </Fab>\n                </Typography>\n                <Typography variant=\"body1\">\n                    **Note : Les créneaux ayant déjà des articles leur étant associés ne peuvent être supprimés.\n                </Typography>\n                <Paper className={classes.rootTable}>\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell className={classes.cell}>\n                                    #\n                                </TableCell>\n                                <TableCell className={classes.cell}>\n                                    Perm\n                                </TableCell>\n                                <TableCell className={classes.cell}>\n                                    Date\n                                </TableCell>\n                                <TableCell className={classes.cell}>\n                                    Type\n                                </TableCell>\n                                <TableCell className={classes.cell}>\n                                    Actions\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {creneaux.map((row, index) => (\n                                <TableRow hover key={index} className={classes.row}>\n                                    <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\n                                        {row.id}\n                                    </TableCell>\n                                    <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\n                                        {row.perm.nom}\n                                    </TableCell>\n                                    <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\n                                        {formateFromDjangoDate(row.date)}\n                                    </TableCell>\n                                    <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\n                                        {row.creneau === \"M\" && <span>Matin</span>}\n                                        {row.creneau === \"D\" && <span>Midi</span>}\n                                        {row.creneau === \"S\" && <span>Soir</span>}\n                                    </TableCell>\n                                    <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\n                                        <Button \n                                            color=\"primary\"\n                                            variant=\"contained\" \n                                            margin=\"dense\"\n                                            size=\"small\"\n                                            className={classes.btn} \n                                            onClick={(e) => this.selectCreneau(e, row)}\n                                        >\n                                            Consulter\n                                        </Button>\n                                        <Button \n                                            color=\"secondary\"\n                                            variant=\"contained\" \n                                            margin=\"dense\"\n                                            size=\"small\"\n                                            disabled={row.article_set && row.article_set.length > 0}\n                                            className={classes.btn} \n                                            onClick={() => this.handleConfirmModalOpen(row)}\n                                        >\n                                            Supprimer\n                                        </Button>                                        \n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </Paper>\n                <Dialog \n                    onClose={this.handleModalClickClose} \n                    open={open_modal} \n                    maxWidth=\"lg\"\n                    width=\"lg\"\n                    scroll=\"body\"\n                >\n                    <DialogTitle onClose={this.handleModalClickClose}>\n                        {mode === \"edit\"? (\n                            <span>Créneau : {creneau.perm && <span>{creneau.perm.nom}</span>} - {formateFromDjangoDate(creneau.date)}</span>\n                        ):\n                        (\n                            <span>Ajouter un nouveau créneau</span>\n                        )}\n                    </DialogTitle>\n                    <DialogContent>\n                        <Grid container direction=\"row\">\n                            <TextField\n                                select\n                                label=\"Perm\"\n                                className={classes.textField}\n                                name=\"perm_id\"\n                                value={creneau.perm_id}\n                                onChange={this.handleChange}\n                                margin=\"dense\"\n                                fullWidth\n                                variant=\"outlined\"\n                            >\n                                {perms.map(perm => (\n                                <MenuItem key={perm.id} value={perm.id}>\n                                    {perm.nom}\n                                </MenuItem>\n                                ))}\n                            </TextField>\n                            <TextField\n                                label=\"Date (aaaa-mm-jj)\"\n                                className={classes.textField}\n                                value={creneau.date}\n                                onChange={this.handleChange}\n                                name=\"date\"\n                                fullWidth\n                                margin=\"dense\"\n                                variant=\"outlined\"\n                            />\n                            <TextField\n                                select\n                                label=\"Type\"\n                                className={classes.textField}\n                                name=\"creneau\"\n                                value={creneau.creneau}\n                                onChange={this.handleChange}\n                                margin=\"dense\"\n                                fullWidth\n                                variant=\"outlined\"\n                            >\n                                {creneau_types.map(type => (\n                                <MenuItem key={type.value} value={type.value}>\n                                    {type.label}\n                                </MenuItem>\n                                ))}\n                            </TextField>\n                        </Grid>\n                        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                            <Button \n                                onClick={() => this.saveCreneau()} \n                                variant=\"contained\" \n                                color=\"primary\"\n                                margin=\"dense\"\n                                size=\"small\"\n                                style = {{marginTop: 30}}\n                            >\n                                Enregistrer\n                            </Button>\n                        </Grid>\n                    </DialogContent>\n                </Dialog>\n                <Dialog\n                    open={confirm_modal}\n                    onClose={() => this.handleModalClickClose()}\n                >\n                    <DialogTitle>Suppresion: {creneau.perm && <span>{creneau.perm.nom}</span>} - {formateFromDjangoDate(creneau.date)}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            Veux-tu vraiment supprimer ce créneau ?\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button \n                            color=\"secondary\"\n                            variant=\"contained\" \n                            margin=\"dense\"\n                            size=\"small\"\n                            className={classes.btn} \n                            onClick={(e) => this.deleteCreneau(creneau.id)}\n                        >\n                            Supprimer\n                        </Button>    \n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    };\n\n}\n\nconst styles = theme => ({\n    rootTable : {\n        width: '100%',\n        overflowX: 'auto'\n    },\n    container: {\n        padding: 20,\n        margin: 30,\n        marginTop: 100,\n        border: \"1.5px solid #B22132\",\n    },\n    subTitle: {\n        marginBottom: 40,\n    },\n    subTitleIcon: {\n        marginRight: 8,\n        paddingTop: 5,\n    },\n    add_item : {\n        marginLeft: 10,\n    },\n    btn : {\n        margin: 5,\n    },\n});\n\nexport default withStyles (styles) (ResourcesManagement)","import React, {Component} from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { addDays, formateToDjangoDate, calendarDate } from '../../../utils/Date';\nimport { ajaxGet, ajaxPost, ajaxDelete } from '../../../utils/Ajax'\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport Button from '@material-ui/core/Button';\n\nclass Astreintes extends Component{\n\n    constructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n            creneaux: [],\n            members: [],\n            loading: true,\n            astreinte_id: '',\n            confirm_modal: false\n        }\n        \n        this.displayCreneau = this.displayCreneau.bind(this)\n        this.changeNewAstreinte = this.changeNewAstreinte.bind(this)\n        this.goNextWeek = this.goNextWeek.bind(this)\n        this.goPreviousWeek = this.goPreviousWeek.bind(this)\n        this.saveAstreinte = this.saveAstreinte.bind(this)\n\t}\n\n\t\n\tcomponentDidMount(){\n        this.loadDates();\n        this.loadMembers();\n\t}\n\n\n    loadMembers(){\n        ajaxGet('admin/members').then(res => {\n            let members = res.data;\n            members = members.sort(function(a,b){\n                if (a.userright.name > b.userright.name) {\n                    return 1\n                }\n                return -1\n            })\n\t\t\tthis.setState({members: members, loading: false})\n\t\t})\n\t\t.catch(error => {\n\t\t\tthis.setState({loading: false});\n\t\t});\n    }\n\n\tloadDates(startDate=null, endDate=null){\n\t\tif (!startDate || !endDate) {\n\t\t\tconst currentDate = new Date();\n\t\t\t// On récupère le jour de la SVGElementInstance, entre 0 (dimanche) et 6\n\t\t\tconst current_day = currentDate.getDay();\n\t\t\t// Le jour de départ doit être lundi, donc day = 1\n\t\t\t// Fonction addDays qui va enlever ou ajouter le nombre de jour nécessaire\n\t\t\tconst startDate = addDays(currentDate, 1 - current_day);\n\t\t\t// Le jour de fin doit être samedi, donc day = 6\n\t\t\tconst endDate = addDays(currentDate, 6-current_day)\n\n\t\t\tthis.setState({startDate: startDate, endDate: endDate})\n\n\t\t\t// On envoie les dates avec le format Django\n\t\t\tthis.loadAstreintes(formateToDjangoDate(startDate), formateToDjangoDate(endDate));\n\t\t} \n    }\n    \n    goNextWeek(){\n        const startDate = addDays(this.state.startDate, 7);\n        const endDate = addDays(this.state.endDate, 7); \n        this.reloadAstreinte(startDate, endDate);\n    }\n\n    goPreviousWeek(){\n        const startDate = addDays(this.state.startDate, -7);\n        const endDate = addDays(this.state.endDate, -7); \n        this.reloadAstreinte(startDate, endDate);\n    }\n\n    reloadAstreinte(startDate, endDate){\n        this.setState({\n            startDate: startDate,\n            endDate: endDate,\n            loading: true\n        })\n        this.loadAstreintes(formateToDjangoDate(startDate), formateToDjangoDate(endDate));\n    }\n\n\tloadAstreintes(startDate, endDate){\n\t\tajaxPost('perms/week/astreintes', {start_date: startDate, end_date: endDate}).then(res => {\n            let creneaux = res.data.creneaux;\n            for (let index = 0; index < creneaux.length; index++) {\n                if (creneaux[index].creneau === \"M\"){\n                    creneaux[index].new_astreinte_type = \"M1\";\n                } else if (creneaux[index].creneau === \"D\"){\n                    creneaux[index].new_astreinte_type = \"D1\";\n                } else {\n                    creneaux[index].new_astreinte_type = \"S\";\n                }\n            }\n\t\t\tthis.setState({creneaux: res.data.creneaux, loading: false})\n\t\t})\n\t\t.catch(error => {\n\t\t\tthis.setState({loading: false});\n\t\t});\n\t}\n\n\tdisplayCreneau(date, creneau_type){\n\t\tif(date){\n            date = formateToDjangoDate(date);\n            const found_creneaux = this.state.creneaux.filter(c => c.date === date && c.creneau === creneau_type);\n\t\t\tif (found_creneaux.length > 0) {\n\t\t\t\treturn found_creneaux[0];\n            }\n\t\t}\n\t\treturn '';\n    }\n    \n\n    changeNewAstreinte(creneau, name, value){\n        let creneaux= [...this.state.creneaux];\n        const creneau_index = creneaux.findIndex(c => c.id === creneau.id);\n        if (creneau_index >= 0) {\n            creneaux[creneau_index][name] = value;\n        }\n        this.setState({creneaux: creneaux})\n    }\n\n\n    saveAstreinte(creneau){\n        const creneaux = [...this.state.creneaux];\n        const creneau_index = creneaux.findIndex(c => c.id === creneau.id);\n\n        const data={\n            member_id: creneau.new_member_id,\n            astreinte_type: creneau.new_astreinte_type,\n            creneau_id: creneau.id\n        }\n\n        ajaxPost('perm/astreintes/', data).then(res => {\n            const astreinte = res.data.astreinte_type + \" - \" + res.data.member.userright.name + \" - \" + res.data.id;\n            creneaux[creneau_index].new_member_id = '';\n            creneaux[creneau_index].astreintes.push(astreinte);\n            this.setState({creneaux: creneaux});\n\t\t})\n\t\t.catch(error => {\n\t\t\t// this.setState({loading: false});\n\t\t});\n    }\n\n    handleModalClickClose(){\n        this.setState({astreinte_id: '', confirm_modal: false})\n    }\n\n    handleConfirmModalOpen(astreinte_id){\n        this.setState({astreinte_id: astreinte_id, confirm_modal: true})\n    }\n\n    deleteAstreinte(){\n        const astreinte_id = this.state.astreinte_id\n        if (astreinte_id) {\n            ajaxDelete('perm/astreintes/' + astreinte_id + '/').then(() => {\n                this.setState({confirm_modal: false, astreinte_id: ''})\n                this.reloadAstreinte(this.state.startDate, this.state.endDate);\n            })\n            .catch((error) => {\n            })\n        } else {\n            this.setState({confirm_modal: false, astreinte_id: ''})\n        }\n    }\n\n    render(){\n        \n        const { classes } = this.props;\n        const { startDate, members, loading, confirm_modal } = this.state;\n\n        const week_days=[0,1,2,3,4,5]\n\t\tconst creneau_types=[\n            {code: 'M', name:'Matin'},\n            {code: 'D', name:'Midi'},\n\t\t\t{code: 'S', name:'Soir'}\n        ];\n\n        if(loading){\n            return (\n                <Grid \n                    container \n                    className={classes.loader}\n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                >\n                    <Grid item>\n                        <CircularProgress  className=\"admin_loader\" color=\"secondary\"/>\n                    </Grid>\n                </Grid>\n            )\n        }\n\n        return (\n            <div className=\"admin_container\">\n                <div className=\"responsive_table\">\n                    <table>\n                        <thead>\n                            <tr>\n                                <th></th>\n                                <th>Lundi {calendarDate(startDate)}</th>\n                                <th>Mardi {calendarDate(addDays(startDate,1))}</th>\n                                <th>Mercredi {calendarDate(addDays(startDate,2))}</th>\n                                <th>Jeudi {calendarDate(addDays(startDate,3))}</th>\n                                <th>Vendredi {calendarDate(addDays(startDate,4))}</th>\n                                <th>Samedi {calendarDate(addDays(startDate,5))}</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {creneau_types.map((creneau_type) => (\n                                <tr key={creneau_type.code}>\n                                    <th className={classes.leftTitleCell}>{creneau_type.name}</th>\n                                    {week_days.map((week_day, index)=> {\n                                        const creneau = this.displayCreneau(addDays(startDate, week_day), creneau_type.code)\n                                        return (\n                                            <td key={index} className={classes.cell}>                                        \n                                                {creneau ? (\n                                                    <React.Fragment>\n                                                        <span>{creneau.perm.nom}</span>\n                                                        <hr/>\n                                                        {creneau.astreintes.map(astreinte => (\n                                                            // Astreinte de la forme astreinte_type - nom_astreinteur - id_astreinte\n                                                            <span key={astreinte}>\n                                                                {astreinte.split('-')[0]} - {astreinte.split('-')[1]}\n                                                                <IconButton \n                                                                    edge=\"end\" \n                                                                    aria-label=\"delete\" \n                                                                    color=\"secondary\"\n                                                                    style={{padding:0}}\n                                                                    onClick={() => this.handleConfirmModalOpen(astreinte.split('-')[2])}\n                                                                >\n                                                                    <CloseIcon />\n                                                                </IconButton>\n                                                                <br/>\n                                                            </span>\n                                                        ))}\n                                                        <select \n                                                            value={creneau.new_member_id} \n                                                            name = 'new_member_id'\n                                                            onChange={event => this.changeNewAstreinte(creneau, event.target.name, event.target.value)}\n                                                        >\n                                                            <option value=\"\" defaultValue></option>\n                                                            {members.map(member => (\n                                                                <option key={member.id} value={member.id}>{member.userright.name}</option>\n                                                            ))}\n                                                        </select>\n                                                        <select \n                                                            value={creneau.new_astreinte_type} \n                                                            name = 'new_astreinte_type'\n                                                            onChange={event => this.changeNewAstreinte(creneau, event.target.name, event.target.value)}\n                                                        >\n                                                            <option value=\"\" defaultValue></option>\n                                                            {creneau.creneau === \"M\" && <option value=\"M1\">Matin 1</option>}\n                                                            {creneau.creneau === \"M\" && <option value=\"M2\">Matin 2</option>}\n                                                            {creneau.creneau === \"D\" && <option value=\"D1\">Midi 1</option>}\n                                                            {creneau.creneau === \"D\" && <option value=\"D2\">Midi 2</option>}\n                                                            {creneau.creneau === \"S\" && <option value=\"S\">Soir</option>}\n                                                        </select>\n                                                        <button disabled={!creneau.new_astreinte_type && !creneau.new_member_id} onClick={() => this.saveAstreinte(creneau)}>\n                                                            Ajouter\n                                                        </button>\n                                                    </React.Fragment>\n                                                ):(\n                                                    ''  \n                                                )}\n                                            </td>        \n                                        )\n                                    })}\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n                <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" className=\"top10\">\n                    <button onClick={this.goPreviousWeek} className=\"margin10\">\n                        Semaine précédente\n                    </button>\n                    <button onClick={this.goNextWeek} className=\"margin10\">\n                        Semaine suivante\n                    </button>\n                </Grid>\n                <Dialog\n                    open={confirm_modal}\n                    onClose={() => this.handleModalClickClose()}\n                >\n                    <DialogTitle>Suppresion</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            Veux-tu vraiment supprimer cette astreinte ?\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button \n                            color=\"secondary\"\n                            variant=\"contained\" \n                            margin=\"dense\"\n                            size=\"small\"\n                            className={classes.btn} \n                            onClick={(e) => this.deleteAstreinte()}\n                        >\n                            Supprimer\n                        </Button>    \n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    };\n\n}\n\nconst styles = theme => ({\n    container: {\n        padding: 20,\n\t\tmargin: 30,\n\t\tmarginTop: 100,\n\t\tborder: \"2px solid #B22132\",\n    },\n    section:{\n\t\tpaddingBottom :70,\n    },\n    subTitle: {\n\t\tmarginTop: 10,\n\t\tmarginBottom: 10,\n\t},\n\tsubTitleIcon: {\n\t\tmarginRight: 8,\n\t\tpaddingTop: 5,\n    },\n    textField: {\n        marginTop: 16,\n        paddingRight: 15,\n        width: \"100%\",\n    },\n    btn: {\n        marginLeft: 5,\n        marginRight: 5,\n        marginTop: 3,\n    },\n});\n\nexport default withStyles (styles) (Astreintes)","import React, {Component} from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport FormControl from '@material-ui/core/FormControl';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Chip from '@material-ui/core/Chip';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Paper from '@material-ui/core/Paper';\n\nimport SendIcon from '@material-ui/icons/Send';\nimport { ajaxGet, ajaxPost, ajaxDelete } from '../../../utils/Ajax';\n\n\nclass CalendarManagement extends Component{\n \n    \n    constructor(props) {\n        super(props)\n        this.state = {\n            loading: true,\n            perms: [],\n            newPerm: {\n                nom: '',\n                nom_resp: '',\n                mail_resp: '',\n                nom_resp_2: '',\n                mail_resp_2: '',\n                asso: false,\n                asso_login: '',\n            },\n            calendar : [],\n            current_semester: {},\n            open_mail: false,\n            selected_perms: [],\n            unselected_perms: [],\n            autocomplete_users_1: [],\n            autocomplete_users_2 : [],\n            assos : []\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleCheckboxChange = this.handleCheckboxChange.bind(this);\n        this.handlePlanningChange = this.handlePlanningChange.bind(this);\n        this.handleDeleteCreneau = this.handleDeleteCreneau.bind(this);\n        this.savePerm = this.savePerm.bind(this);\n        this.deletePerm = this.deletePerm.bind(this);\n        this.formateCalendarDate = this.formateCalendarDate.bind(this);\n        this.handleChangeOnMail = this.handleChangeOnMail.bind(this);\n        this.sendPermsMail = this.sendPermsMail.bind(this);\n    }\n\n\n    componentDidMount(){\n        this.loadAssos();\n    }\n\n\n    loadAssos(){\n        ajaxGet('perms/assos').then(res =>{\n            let assos = res.data.assos;\n            assos = assos.sort(function(a,b){\n                if (a.shortname > b.shortname) {\n                    return 1\n                }\n                return -1\n            })\n            this.setState({assos: assos});\n            this.loadCurrentSemester();\n        })\n    }\n\n    loadCurrentSemester(){\n        ajaxGet('current/semester').then(res => {\n            this.setState({current_semester: res.data})\n            this.loadPerms();\n        })\n        .catch(error => {\n            console.log(error)\n        })\n    }\n\n\n    loadPerms(){\n        ajaxGet('perms').then(res => {\n            let perms = res.data;\n            perms = perms.sort(function(a,b){\n                if (a.nom.toLowerCase() > b.nom.toLowerCase()) {\n                    return 1\n                }\n                return -1\n            })\n\n            let creneaux = [];\n            this.setState({perms: perms})\n            for (let index = 0; index < perms.length; index++) {\n\n                for (let index_creneau = 0; index_creneau < perms[index].creneaux.length; index_creneau++) {\n                    // Créneau au format AAAA-MM-dd:Creneau:id\n                    const creneau_array = perms[index].creneaux[index_creneau].split(':');\n                    let creneau = {\n                        id: creneau_array[2],\n                        date: new Date(creneau_array[0]),\n                        creneau: creneau_array[1],\n                        perm_id: perms[index].id,\n                        perm_nom: perms[index].nom,\n                    }\n                    switch (creneau_array[1]) {\n                        case 'M':\n                            creneau.creneau_detail = \"Matin\"\n                            break;\n                        case 'D':\n                            creneau.creneau_detail = \"Midi\"\n                            break;\n                        case 'S':\n                            creneau.creneau_detail = \"Soir\"\n                            break;            \n                        default:\n                            break;\n                    }\n                    creneaux.push(creneau);\n                }\n            }\n            this.createCalender(creneaux)          \n        })\n        .catch(error => {\n            console.log(error)\n        })\n    }\n\n    compareDates(d1, d2){\n        if (d1.getDate() === d2.getDate() && d1.getMonth() === d2.getMonth() && d1.getFullYear() === d2.getFullYear()) {\n            return true;\n        }\n        return false;\n    }\n\n\n    createCalender(existing_creneaux){\n        let startDate = new Date(this.state.current_semester.start_date);\n        let stopDate = new Date(this.state.current_semester.end_date);\n        let week_number = 0;\n        // L'objet calendrier correspond à un tableau comprenant des tableaux de semaine\n        // calendar[0] correspond à la semaine 0 du semestre\n        // calendar[0][2] correspond au 3ème jour de la semaine 0\n        // On anticipe la création de la première semaine dans calendar d'où [[]]\n        let calendar = [[]];\n        for (let dt = new Date(startDate); dt <= stopDate; dt.setDate(dt.getDate() + 1)) {\n            // Création de la date et ajout des créneaux\n            const date = new Date(dt);\n            let creneaux = this.createCreneaux(date, existing_creneaux);\n            const new_date = {\n                date: date,\n                creneaux: creneaux\n            }\n\n            const day = date.getDay();\n            if (day === 1 && !this.compareDates(startDate, date)) {\n                // Création d'une nouvelle semaine car correspond au lundi\n                // En conséquence création d'un nouveau tableau dans le calendrier\n                week_number += 1;\n                calendar.push([])\n            }\n            if (day !== 0) {\n                // On ne prend pas les dimanches dans le planning\n                calendar[week_number].push(new_date);\n            }\n        }\n\n        // Pour la semaine 0 on ajoute manuellement les jours entre lundi et le premier jour donné\n        const week_size = calendar[0].length;\n        if (week_size < 6) {\n            const missing_day = 6 - week_size;\n            for (let index = 1; index <= missing_day; index++) {\n\n                const date = new Date(startDate.getTime() - 86400000 * index);\n                let creneaux = this.createCreneaux(date, existing_creneaux);\n                const new_date = {\n                    date: date,\n                    creneaux: creneaux\n                }\n                calendar[0].splice(0,0, new_date);   \n            }\n        }\n        this.setState({loading: false, calendar: calendar})\n    }\n\n\n    createCreneaux(date, existing_creneaux){\n        let creneaux = {};\n\n        const creneau_matin_index = existing_creneaux.findIndex(c => (this.compareDates(c.date, date) && c.creneau === 'M'))\n        if (creneau_matin_index >= 0) {\n            creneaux.matin = existing_creneaux[creneau_matin_index]\n        } else {\n            creneaux.matin = {date: this.formatCreneauDate(date), creneau: 'M', creneau_detail: 'Matin', perm_id: \"\"}\n        }\n        \n        const creneau_midi_index = existing_creneaux.findIndex(c => (this.compareDates(c.date, date) && c.creneau === 'D'))\n        if (creneau_midi_index >= 0) {\n            creneaux.midi = existing_creneaux[creneau_midi_index]\n        } else {\n            creneaux.midi = {date: this.formatCreneauDate(date), creneau: 'D', creneau_detail: 'Midi', perm_id: \"\"}\n        }\n        \n        const creneau_soir_index = existing_creneaux.findIndex(c => (this.compareDates(c.date, date) && c.creneau === 'S'))\n        if (creneau_soir_index >= 0) {\n            creneaux.soir = existing_creneaux[creneau_soir_index]\n        } else {\n            creneaux.soir = {date: this.formatCreneauDate(date), creneau: 'S', creneau_detail: 'Soir', perm_id: \"\"}\n        }\n\n        return creneaux;\n    }\n\n\n    formateCalendarDate(date){\n        const months_list = [\n            \"Janvier\", \"Février\", \"Mars\", \"Avril\", \"Mai\", \"Juin\",\n            \"Juillet\", \"Août\", \"Septembre\", \"Octobre\", \"Novembre\", \"Décembre\"\n        ]\n        const day = date.getDate();\n        const month = months_list[date.getMonth()];\n        return day + \" \" + month;\n    }\n\n\n    formatCreneauDate(date){\n        const day = (\"0\" + (date.getDate())).slice(-2);\n        // const month_number = date.getMonth() +1;\n        const month_number = (\"0\" + (date.getMonth() + 1)).slice(-2)\n        const year = date.getFullYear();\n        return year + \"-\" + month_number + \"-\" + day;\n    }\n\n\n    isDatePast(date){\n        if(date < new Date()){return true;}\n        return false;\n    }   \n\n\n    handleChange(event){\n        this.setState({\n            newPerm: {\n                ...this.state.newPerm,\n                [event.target.name]: event.target.value\n            }\n        })\n    }\n\n    handleCheckboxChange(event){\n        const asso = this.state.newPerm.asso;\n        this.setState(\n            {newPerm:{\n                ...this.state.newPerm,\n                [event.target.name]: !asso,\n                nom: ''\n            }\n        })\n    }\n\n\n    handlePlanningChange(event, week_index, day_index, creneau_type){\n\n        if (!event.target.value) {\n            return\n        }\n        let calendar = [...this.state.calendar];\n        let perms = [...this.state.perms];\n        const perm_id = event.target.value;\n        let perm_index = perms.findIndex(p => p.id.toString() === perm_id);\n        \n        calendar[week_index][day_index].creneaux[creneau_type].perm_nom = perms[perm_index].nom;\n        calendar[week_index][day_index].creneaux[creneau_type].perm_id = perm_id;\n        ajaxPost('creneau/', calendar[week_index][day_index].creneaux[creneau_type]).then(res => {\n            const creneau_date = calendar[week_index][day_index].creneaux[creneau_type].date;\n            const creneau_period = calendar[week_index][day_index].creneaux[creneau_type].creneau;\n            calendar[week_index][day_index].creneaux[creneau_type].id = res.data.id;\n            perms[perm_index].creneaux.push(creneau_date + \":\" + creneau_period + \":\" + res.data.id);\n            this.setState({\n                calendar: calendar,\n                perms: perms,\n            })\n        })\n        .catch(error => {\n            console.log(error);\n        }) \n    }\n\n\n    handleDeleteCreneau(event, week_index, day_index, creneau_type, perm_id){\n        let calendar = [...this.state.calendar];\n        let perms = [...this.state.perms];\n        let perm_index = perms.findIndex(p => p.id.toString() === perm_id.toString());\n\n        \n        const creneau = calendar[week_index][day_index].creneaux[creneau_type]\n        \n        ajaxDelete('creneau/' + creneau.id).then(res => {\n            // Suppression du créneau dans le calendrier\n            calendar[week_index][day_index].creneaux[creneau_type].perm_nom = \"\";\n            calendar[week_index][day_index].creneaux[creneau_type].perm_id = \"\";\n            // Suppression du créneau dans les perms\n            perms[perm_index].creneaux = perms[perm_index].creneaux.filter(c => c !== creneau.date + \":\" + creneau.creneau + \":\" + creneau.id)\n            this.setState({\n                calendar: calendar,\n                perms: perms,\n            })\n        })\n        .catch(error => {\n            console.log(error);\n        })\n        \n    }\n\n\n    handleAssoChange(event){\n        const assos = this.state.assos;\n        const results = assos.filter(a => a.login === event.target.value);\n        if (results.length > 0) {\n            this.setState({\n                newPerm: {\n                    ...this.state.newPerm,\n                    [event.target.name] : event.target.value\n                }\n            })\n        }\n    }\n\n\n    handleRespChange(user, nom_resp_type, mail_resp_type){\n        const data = user.split('-')\n        const nom_resp = data[0].split('(')[0]\n        const mail_resp = data[1]\n        this.setState({\n            newPerm: {\n                ...this.state.newPerm,\n                [nom_resp_type]: nom_resp,\n                [mail_resp_type]: mail_resp\n            },\n            autocomplete_users_1: [],\n            autocomplete_users_2: []\n        })\n    }\n\n\n    autoCompleteQuery(query, autocomplete_type){\n        ajaxGet('payutc/user/autocomplete/' + query).then(res => {\n            this.setState({[autocomplete_type]: res.data.users});\n        })\n        .catch(error => {\n\n        })\n    }\n\n\n    handleAutocompleteChange(event, autocomplete_type){\n        this.setState({\n            newPerm: {\n                ...this.state.newPerm,\n                [event.target.name]: event.target.value\n            }\n        })\n        if (event.target.value){\n            this.autoCompleteQuery(event.target.value, autocomplete_type)\n        } else {\n            this.setState({[autocomplete_type]: []})\n        }\n    }\n\n\n    savePerm(){\n        let mail_asso = \"\"\n        if (this.state.newPerm.asso) {\n            mail_asso = this.state.newPerm.asso_login + \"@assos.utc.fr\";\n        }\n        const perm = {\n            nom: this.state.newPerm.nom,\n            asso: this.state.newPerm.asso,\n            nom_resp: this.state.newPerm.nom_resp,\n            mail_resp: this.state.newPerm.mail_resp,\n            nom_resp_2: this.state.newPerm.nom_resp_2,\n            mail_resp_2: this.state.newPerm.mail_resp_2,\n            mail_asso: mail_asso,\n        }\n        ajaxPost('perms/', perm).then(res => {\n            let perms = this.state.perms;\n            perms.push(res.data);\n            this.setState({\n                perms: perms,\n                newPerm : { nom: '', nom_resp: '', mail_resp: '', asso: false, asso_login: '', nom_resp_2: '', mail_resp_2: '' }\n            })\n        })\n        .catch(error => {\n            console.log(error);\n        })\n    }\n\n\n    deletePerm(event, perm){\n        ajaxDelete('perms/' + perm.id).then(res => {\n            let perms = this.state.perms;\n            perms = perms.filter(p => p.id.toString() !== perm.id.toString());\n            this.setState({perms: perms});\n        })\n        .catch(error => {\n            console.log(error);\n        })\n    }\n\n    handleChangeOnMail(){\n        const open_mail = this.state.open_mail;\n        this.setState({open_mail: !open_mail});\n        ajaxGet('perms').then(res => {\n            this.setState({selected_perms: res.data});\n        })\n        .catch(error => {\n            console.log(error)\n        })\n    }\n\n\n    selectPerm(event, perm){\n        let selected_perms = [...this.state.selected_perms];\n        let unselected_perms = [...this.state.unselected_perms];\n        selected_perms = selected_perms.filter(p => p.id !== perm.id);\n        unselected_perms.push(perm);\n        this.setState({selected_perms: selected_perms, unselected_perms: unselected_perms});\n    }\n\n\n    unselectPerm(event, perm){\n        let selected_perms = [...this.state.selected_perms];\n        let unselected_perms = [...this.state.unselected_perms];\n        unselected_perms = unselected_perms.filter(p => p.id !== perm.id);\n        selected_perms.push(perm);\n        this.setState({selected_perms: selected_perms, unselected_perms: unselected_perms});\n    }\n\n\n    sendPermsMail(){\n        ajaxPost('perms/mail', this.state.selected_perms).then(res => {\n            \n        })\n        .catch(error => {\n            console.log(error)\n        })\n    }\n\n\n    render(){\n        \n        const { classes } = this.props;\n\n        const { perms, newPerm, calendar, loading, open_mail, selected_perms, unselected_perms, assos, autocomplete_users_1, autocomplete_users_2 } = this.state \n\n        if(loading){\n            return (\n                <Grid \n                    container \n                    className={classes.loader}\n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                >\n                    <Grid item>\n                        <CircularProgress className={classes.progress} />\n                    </Grid>\n                </Grid>\n            )\n        }\n\n        return (\n            <div className=\"admin_container\">\n                <Grid container direction=\"row\">\n                    <Typography variant=\"h6\" className={classes.subTitle}>\n                        <ChevronRightIcon className={classes.titleIcon}/>\n                        Ajouter une perm\n                    </Typography>\n                </Grid>\n                <Paper className={classes.paper_box}>\n                    <Grid container>\n                        <Grid item xs={12} sm={6} lg={3} className={classes.textFieldContainer}>\n                            <FormControlLabel\n                                className={classes.checkBox}\n                                name=\"asso\"\n                                value={newPerm.asso}\n                                onChange={this.handleCheckboxChange}\n                                control={<Checkbox color=\"primary\" checked={newPerm.asso} />}\n                                label=\"Association ?\"\n                                labelPlacement=\"start\"\n                            />                            \n                        </Grid>\n                        {newPerm.asso && (\n                            <Grid item xs={12} sm={5} lg={3} className={classes.textFieldContainer}>\n                                <TextField\n                                    select\n                                    label=\"Association\"\n                                    value={newPerm.asso_login}\n                                    onChange={(event) => this.handleAssoChange(event)}\n                                    variant=\"outlined\"\n                                    name=\"asso_login\"\n                                    className={classes.textField}\n                                    size=\"small\"\n                                    margin=\"dense\"\n                                    fullWidth\n                                >\n                                    {assos.map(asso => (\n                                        <MenuItem key={asso.login} value={asso.login}>\n                                            {asso.shortname}\n                                        </MenuItem>\n                                    ))}\n                                </TextField>\n                            </Grid>\n                        )}\n                        \n                        <Grid item xs={12} sm={6} lg={3} className={classes.textFieldContainer}>    \n                            <TextField\n                                label=\"Nom\"\n                                className={classes.textField}\n                                name=\"nom\"\n                                value={newPerm.nom}\n                                onChange={this.handleChange}\n                                autoComplete=\"off\"\n                                margin=\"dense\"\n                                fullWidth\n                                variant=\"outlined\"\n                                size=\"small\"\n                                InputProps={{ style: { fontSize: 12 } }}\n                            />                            \n                        </Grid>\n                        <Grid item xs={12} sm={6} lg={3} className={classes.textFieldContainer}>\n                            <TextField\n                                variant=\"outlined\" \n                                size=\"small\"\n                                margin=\"dense\"\n                                fullWidth\n                                className={classes.textField}\n                                name=\"nom_resp\"\n                                label=\"Responsable 1\"\n                                value={newPerm.nom_resp}\n                                onChange={(event) => this.handleAutocompleteChange(event, \"autocomplete_users_1\")}\n                                autoComplete=\"off\"\n                            />\n                            { autocomplete_users_1.length > 0 && (\n                                <Paper className={classes.suggestions}>\n                                    {autocomplete_users_1.map((suggestion, index)=> (\n                                        <MenuItem\n                                            className={classes.suggestionItem}\n                                            key={index}\n                                            component=\"div\"\n                                            onClick={()=>this.handleRespChange(suggestion.name, \"nom_resp\", \"mail_resp\")}\n                                        >\n                                            {suggestion.name.split('-')[0]}\n                                        </MenuItem>\n                                    ))}      \n                                </Paper>\n                            )}\n                        </Grid>\n                        <Grid item xs={12} sm={6} lg={3} className={classes.textFieldContainer}>\n                            <TextField\n                                variant=\"outlined\" \n                                size=\"small\"\n                                margin=\"dense\"\n                                fullWidth\n                                name=\"nom_resp_2\"\n                                className={classes.textField}\n                                label=\"Responsable 2\"\n                                value={newPerm.nom_resp_2}\n                                onChange={(event) => this.handleAutocompleteChange(event, \"autocomplete_users_2\")}\n                                autoComplete=\"off\"\n                            />\n                            { autocomplete_users_2.length > 0 && (\n                                <Paper className={classes.suggestions}>\n                                    {autocomplete_users_2.map((suggestion, index)=> (\n                                        <MenuItem\n                                            className={classes.suggestionItem}\n                                            key={index}\n                                            component=\"div\"\n                                            onClick={()=>this.handleRespChange(suggestion.name, \"nom_resp_2\", \"mail_resp_2\")}\n                                        >\n                                            {suggestion.name.split('-')[0]}\n                                        </MenuItem>\n                                    ))}      \n                                </Paper>\n                            )}\n                        </Grid>\n                    </Grid>\n                    <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                        <Button \n                            variant=\"contained\" \n                            size=\"small\" \n                            color=\"primary\" \n                            onClick={this.savePerm}\n                            className={classes.btnAddPerm}\n                        >\n                            Ajouter\n                        </Button>\n                    </Grid> \n                </Paper>\n                <Grid container direction=\"row\">\n                    <Typography variant=\"h6\" className={classes.subTitle}>\n                        <ChevronRightIcon className={classes.titleIcon}/>\n                        Liste des perms\n                        <Button \n                            variant=\"contained\" \n                            size=\"small\" \n                            color=\"primary\" \n                            onClick={this.handleChangeOnMail}\n                            className={classes.btnMail}\n                        >\n                            Mail <SendIcon className=\"left5\"/>\n                        </Button>\n                    </Typography>\n                    <Paper className={classes.paper_box}> \n                        <List className={classes.listPerms}>\n                            {perms.map((perm, index)=> {\n                                const M_creneaux = perm.creneaux.filter(c => c.split(':')[1] === 'M').length\n                                const D_creneaux = perm.creneaux.filter(c => c.split(':')[1] === 'D').length\n                                const S_creneaux = perm.creneaux.filter(c => c.split(':')[1] === 'S').length\n                                const canDelete = (M_creneaux + D_creneaux + S_creneaux) === 0;\n                                return (\n                                    <React.Fragment key={index}>\n                                        <ListItem\n                                            className={classes.suggestionItem}\n                                            component=\"div\"\n                                        >\n                                            <ListItemText\n                                                // Déterminer dynamiquement le nombre de créneaux\n                                                primary={\n                                                    perm.nom + \" (\" +\n                                                    M_creneaux + '/' +\n                                                    D_creneaux + '/' +\n                                                    S_creneaux + ')'                                                  \n                                                }\n                                                secondary={perm.nom_resp + (perm.asso?(\" - Association\"):(\"\")) }\n                                            />\n                                            {canDelete && \n                                                <ListItemSecondaryAction>\n                                                    <IconButton \n                                                        edge=\"end\" \n                                                        aria-label=\"delete\" \n                                                        color=\"secondary\"\n                                                        onClick={(e) => this.deletePerm(e, perm)}\n                                                    >\n                                                        <DeleteOutlineIcon />\n                                                    </IconButton>\n                                                </ListItemSecondaryAction>\n                                            }\n                                        </ListItem>\n                                        <Divider/>\n                                    </React.Fragment>\n                                )\n                            })}\n                        </List>\n                    </Paper>\n                    </Grid>\n                    <Grid container direction=\"row\">\n                        <Typography variant=\"h6\" className={classes.subTitle}>\n                            <ChevronRightIcon className={classes.titleIcon}/>\n                            Calendrier\n                        </Typography>\n                        <Paper className={classes.paper_box}>\n                        <Table size=\"small\">\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell className=\"center side_padding8\">Lundi</TableCell>\n                                    <TableCell className=\"center side_padding8\">Mardi</TableCell>\n                                    <TableCell className=\"center side_padding8\">Mercredi</TableCell>\n                                    <TableCell className=\"center side_padding8\">Jeudi</TableCell>\n                                    <TableCell className=\"center side_padding8\">Vendredi</TableCell>\n                                    <TableCell className=\"center side_padding8\">Samedi</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {calendar.map((week, index) => (\n                                    <TableRow key={index}>\n                                        {week.map((day, index_day) => (\n                                            <TableCell className=\"side_padding8\" key={index_day} align=\"center\">\n                                                <Typography variant=\"caption\" display=\"block\" gutterBottom className={classes.day} noWrap>\n                                                    <strong>{this.formateCalendarDate(day.date)}</strong>\n                                                </Typography>\n                                                <div className={classes.creneau_card}>\n                                                    {/* <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" style={{height:30, width: 'fit-content'}}> */}\n                                                        {day.creneaux.matin.perm_id? (\n                                                            <Chip \n                                                                size=\"small\" \n                                                                label={day.creneaux.matin.perm_nom} \n                                                                color=\"primary\" \n                                                                className={classes.perm_chip}\n                                                                onDelete={this.isDatePast(day.date) ? null : (e) => this.handleDeleteCreneau(e, index, index_day, 'matin', day.creneaux.matin.perm_id)}\n                                                            />\n                                                        ) : (\n                                                            <FormControl>\n                                                                <select \n                                                                    className={classes.perm_select}\n                                                                    disabled={this.isDatePast(day.date)}\n                                                                    onChange={(e) => this.handlePlanningChange(e, index, index_day, 'matin')}\n                                                                >\n                                                                    <option value=\"\" defaultValue/>\n                                                                    {perms.map((perm, index) => (\n                                                                        <option value={perm.id} key={index}>\n                                                                            {perm.nom}\n                                                                        </option>\n                                                                    ))}\n                                                                </select>\n                                                            </FormControl>\n                                                        )}\n                                                    {/* </Grid> */}\n                                                </div>\n                                                <div className={classes.creneau_card}>\n                                                    {day.creneaux.midi.perm_id?(\n                                                        <Chip \n                                                            size=\"small\" \n                                                            label={day.creneaux.midi.perm_nom} \n                                                            color=\"primary\" \n                                                            className={classes.perm_chip} \n                                                            onDelete={this.isDatePast(day.date) ? null : (e) => this.handleDeleteCreneau(e, index, index_day, 'midi', day.creneaux.midi.perm_id)}\n                                                        />\n                                                    ):(\n                                                        <FormControl>\n                                                            <select \n                                                                className={classes.perm_select}\n                                                                disabled={this.isDatePast(day.date)}\n                                                                onChange={(e) => this.handlePlanningChange(e, index, index_day, 'midi')}\n                                                            >\n                                                                <option value=\"\" defaultValue/>\n                                                                {perms.map((perm, index) => (\n                                                                    <option value={perm.id} key={index}>\n                                                                        {perm.nom}\n                                                                    </option>\n                                                                ))}\n                                                            </select>\n                                                        </FormControl>\n                                                    )}\n                                                </div>\n                                                <div className={classes.creneau_card}>\n                                                    {day.creneaux.soir.perm_id? (\n                                                        <Chip \n                                                            size=\"small\" \n                                                            label={day.creneaux.soir.perm_nom} \n                                                            color=\"primary\"\n                                                            className={classes.perm_chip}\n                                                            onDelete={this.isDatePast(day.date) ? null : (e) => this.handleDeleteCreneau(e, index, index_day, 'soir', day.creneaux.soir.perm_id)}\n                                                        />\n                                                    ) : (\n                                                        <FormControl>                                                 \n                                                            <select \n                                                                className={classes.perm_select}\n                                                                disabled={this.isDatePast(day.date)}\n                                                                onChange={(e) => this.handlePlanningChange(e, index, index_day, 'soir')}\n                                                            >\n                                                                <option value=\"\" defaultValue/>\n                                                                {perms.map((perm, index) => (\n                                                                    <option value={perm.id} key={index}>\n                                                                        {perm.nom}\n                                                                    </option>\n                                                                ))}\n                                                            </select>\n                                                        </FormControl>\n                                                    )}\n                                                </div>\n                                            </TableCell>\n                                        ))}\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>\n                    </Paper>\n                </Grid>\n                <Dialog\n                    // fullWidth=\"lg\"\n                    maxWidth=\"lg\"\n                    open={open_mail}\n                    onClose={this.handleChangeOnMail}\n                    aria-labelledby=\"max-width-dialog-title\"\n                >\n                    <DialogTitle id=\"max-width-dialog-title\">Gestion des envois d'email</DialogTitle>\n                    <DialogContent>\n                        <Paper className={classes.paper}>\n                            <DialogContentText>\n                                Ci-dessous la liste des perms auxquelles doit être envoyées un mail de notification des plannings. \n                            </DialogContentText>\n                            {selected_perms.map((perm, index) => (\n                                <Chip\n                                    label={perm.nom}\n                                    key={index}\n                                    onDelete={(event) => this.selectPerm(event, perm)}\n                                    className={classes.chip}\n                                    color=\"primary\"\n                                />\n                            ))}\n                        </Paper>\n                        <Paper className={classes.paper}>\n                            <DialogContentText>\n                                Ci-dessous la liste des perms auxquelles <strong>ne doit pas</strong> être envoyées un mail de notification des plannings. \n                            </DialogContentText>\n                            {unselected_perms.map((perm, index) => (\n                                <Chip\n                                    label={perm.nom}\n                                    key={index}\n                                    onDelete={(event) => this.unselectPerm(event, perm)}\n                                    className={classes.chip}\n                                    color=\"primary\"\n                                />\n                            ))}\n                        </Paper>\n                    </DialogContent>\n                    <DialogActions>\n                    <Button \n                        onClick={this.handleChangeOnMail} \n                        color=\"secondary\"\n                        variant=\"contained\" \n                        size=\"small\" \n                    >\n                        Annuler\n                    </Button>\n                    <Button \n                        onClick={this.sendPermsMail} \n                        color=\"primary\"\n                        variant=\"contained\" \n                        size=\"small\" \n                    >\n                        Envoyer\n                    </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    };\n\n}\n\nconst styles = theme => ({\n    loader: {\n        marginTop: 200,\n    },\n    container: {\n        margin: 30,\n        marginTop: 100,\n    },\n    paper_box : {\n        width: '100%',\n        overflowX: 'auto',\n        marginBottom: 20,\n    },\n    titleIcon: {\n        marginRight: 8,\n        paddingTop: 5,\n    },\n    subTitle:{\n        marginBottom: 5\n    },\n    textFieldContainer : {\n        paddingLeft: 10,\n        paddingRight: 10,\n    },\n    textField: {\n        width: '100%',\n        fontSize: 12,\n    },\n    checkBox: {\n        paddingTop: 10,\n    },\n    btnAddPerm: {\n        marginTop: 10,\n        marginBottom: 20,\n    },\n    btnMail : {\n        marginLeft: 10,\n    },\n    listPerms: {\n        width: \"100%\",\n        height: 300,\n        overflowY: \"scroll\",\n    },\n    day: {\n        fontSize: 12,\n    },\n    input: {\n        fontSize: 12,\n    },\n    perm_chip : {\n        fontSize: 11,\n        height: 24,\n        marginTop:0,\n        marginBottom: 6,\n        padding: 5,\n    },\n    creneau_card : {\n        height: 30,\n    },\n    perm_select : {\n        paddingLeft: '5%',\n        paddingRight: '5%',\n        width: 100\n    },\n    chip: {\n        margin: 5,\n    },\n    paper : {\n        margin:20,\n        padding: 20,\n    },\n    suggestions: {\n        zIndex: 100,\n        maxHeight: 200,\n        overflowY: 'scroll',\n        marginBottom: 30\n    },\n    suggestionItem: {\n        paddingLeft: 15,\n        paddingBottom: 0,\n        paddingTop: 0,\n        fontSize: 14,\n        minHeight: 30,\n    },\n});\n\nexport default withStyles (styles) (CalendarManagement)\n","import React, {Component} from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport { ajaxGet, ajaxPost } from '../../../utils/Ajax';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { asset_url } from '../../../utils/Config';\nimport { formateFromDjangoDate } from '../../../utils/Date';\n\nclass CurrentPerm extends Component{\n \n    \n    constructor(props) {\n        super(props)\n        this.state = {\n            current_creneau : {},\n            loading: true,\n            new_article: {\n                nom: '',\n                tva: 0,\n                stock: '',\n                prix: '',\n                creneau: '',\n            },\n            invoice_checked: false,\n        }\n\n        this.addArticleToPayutc = this.addArticleToPayutc.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleCheckChange = this.handleCheckChange.bind(this);\n        this.saveArticle = this.saveArticle.bind(this);\n    }\n\n    componentDidMount(){\n        this.loadCurrentPerm();\n    }\n\n    loadCurrentPerm(){\n        ajaxGet('perms/current/creneau').then(res => {\n            if (res.data.article_set){\n                for (let index = 0; index < res.data.article_set.length; index++) {\n                    const date = new Date(res.data.article_set[index].ventes_last_update);\n                    res.data.article_set[index].ventes_last_formatted_update = this.formateDate(date);\n                }\n                let new_article = this.state.new_article;\n                new_article.creneau = res.data.id;\n                if (!res.data.perm.asso) {\n                    new_article.tva = 5.5;\n                }\n                this.setState({current_creneau: res.data, new_article: new_article})\n                this.loadCreneauSignature(res.data.id);\n                setInterval(() => this.loadCreneauSignature(res.data.id), 30*1000);\n            }      \n            this.setState({loading: false})\n        })\n        .catch(error => {\n            console.log(error)\n        })\n    }\n\n    loadCreneauSignature(id){\n        ajaxGet('perms/signature/' + id).then(res => {\n            this.setState({\n                current_creneau : {\n                    ...this.state.current_creneau,\n                    signature: res.data.signature_count\n                }\n            })\n        }).catch(error => {\n            console.log(error)\n        })\n    }\n\n\n    formateDate(date){\n        const month = date.getMonth() + 1;\n        const day = date.getDate();\n        const year = date.getFullYear();\n        const hours = (\"0\" + (date.getHours())).slice(-2);\n        const minutes = (\"0\" + (date.getMinutes())).slice(-2);\n        (\"0\" + (date.getDate())).slice(-2)\n        const formatted_date = day + '/' + month + '/' + year + ' à ' + hours + ':' + minutes;\n        return formatted_date;\n    }\n\n\n    handleChange(event){\n        this.setState({\n            new_article: {\n                ...this.state.new_article,\n                [event.target.name]: event.target.value\n            }\n        })\n    }\n\n\n    handleCheckChange(event){\n        const checked = this.state.invoice_checked;\n        this.setState({invoice_checked: !checked})\n    }\n\n\n    redirectToMenu(event, article){\n        window.open(asset_url(\"/menu?selected_article=\" + article.id));\n    }\n\n\n    saveArticle(){\n        let new_article = this.state.new_article;\n        ajaxPost('perm/articles/', new_article).then(res => {\n            let current_creneau = this.state.current_creneau;\n            current_creneau.article_set.push(res.data);\n            new_article.nom = '';\n            new_article.stock = '';\n            new_article.prix = '';\n            this.setState({current_creneau: current_creneau, new_article: new_article, invoice_checked: false})\n        })\n        .catch(error => {\n            console.log(error);\n        })\n    }\n\n\n    addArticleToPayutc(article, index){\n        ajaxGet('perms/payutc/article/' + article.id).then(res => {\n            article.id_payutc = res.data;\n            let current_creneau  = this.state.current_creneau;\n            current_creneau.article_set[index] = article;\n            this.setState({current_creneau: current_creneau});\n        })\n        .catch(error => {\n            console.log(error);\n        })\n    }\n\n    updateArticleSales(article, index){\n        ajaxGet('perms/sales/article/' + article.id).then(res => {\n            article.ventes = res.data.sales;\n            article.ventes_last_update = new Date();\n            article.ventes_last_formatted_update = this.formateDate(article.ventes_last_update);\n            let current_creneau = this.state.current_creneau;\n            current_creneau.article_set[index] = article;\n            this.setState({current_creneau: current_creneau});\n        })\n        .catch(error => {\n            console.log(error);\n        })\n    }\n\n    render(){\n\n        const { current_creneau, loading, new_article, invoice_checked } = this.state;\n        const date = current_creneau.date\n        \n        const { classes } = this.props;\n\n        let signature_message = \"Chargement des signatures...\"\n        if (current_creneau.signature !== null) {\n            if (current_creneau.signature > 0) {\n                signature_message = current_creneau.signature + \" signature(s) de la charte\"\n            } else {\n                signature_message = \"Pas de signature de la charte\"\n            }\n        }\n\n\n        if(loading){\n            return (\n                <Grid \n                    container \n                    className={classes.loader}\n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                >\n                    <Grid item>\n                        <CircularProgress className={classes.progress} />\n                    </Grid>\n                </Grid>\n            )\n        }\n\n        return (\n            <div className=\"admin_container\">\n                {current_creneau.id? (\n                    <div>\n                        <Typography variant=\"h6\" gutterBottom className={classes.title}>\n                            {current_creneau.perm.nom}\n                        </Typography>\n                        <Grid container>\n                            <Grid item>\n                                <Typography variant=\"body1\" gutterBottom>\n                                    Responsable: {current_creneau.perm.nom_resp} ({current_creneau.perm.mail_resp})<br/>\n                                    Date : {formateFromDjangoDate(date)}<br/>\n                                    {signature_message}\n                                </Typography> \n                            </Grid>\n                        </Grid>\n                        <Typography variant=\"h6\" className={classes.subTitle}>\n                            <ChevronRightIcon className={classes.subTitleIcon}/>\n                            Articles\n                        </Typography>\n                        <div className=\"responsive_table\">\n                            <Table>\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell className={classes.cell}>\n                                            Nom\n                                        </TableCell>\n                                        <TableCell className={classes.cell}>\n                                            Prix TTC\n                                        </TableCell>\n                                        <TableCell className={classes.cell}>\n                                            TVA\n                                        </TableCell>\n                                        <TableCell className={classes.cell}>\n                                            Ventes\n                                        </TableCell>\n                                        <TableCell className={classes.cell}>\n                                            Dernière mise à jour\n                                        </TableCell>\n                                        <TableCell className={classes.cell}>\n                                            PayUTC\n                                        </TableCell>\n                                        <TableCell className={classes.cell}>\n                                            Actions\n                                        </TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {current_creneau.article_set.map((article, index) => (\n                                        <TableRow hover key={index} className={classes.row}>\n                                            <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\n                                                {article.nom}\n                                            </TableCell>\n                                            <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\n                                                {article.prix.toFixed(2)}€\n                                            </TableCell>\n                                            <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\n                                                {article.tva}%\n                                            </TableCell>\n                                            <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\n                                                {article.ventes}/{article.stock}\n                                            </TableCell>\n                                            <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\n                                                { article.id_payutc ? (\n                                                    <div>\n                                                        Le {article.ventes_last_formatted_update}\n                                                        <Button \n                                                            variant=\"contained\"\n                                                            size=\"small\"\n                                                            color=\"primary\"\n                                                            className={classes.btn} \n                                                            onClick={(e) => this.updateArticleSales(article, index)}\n                                                        >\n                                                            Mettre à jour\n                                                        </Button> \n                                                    </div>\n                                                ) : (\n                                                    <div>\n                                                        Pas synchronisé à PayUTC !\n                                                    </div>\n                                                )}\n                                            </TableCell>\n                                            <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\n                                                {article.id_payutc? (\n                                                    <div>\n                                                        Ajouté !\n                                                    </div>\n                                                ):(\n                                                    <Button \n                                                        variant=\"contained\"\n                                                        size=\"small\"\n                                                        color=\"primary\"\n                                                        className={classes.btn} \n                                                        onClick={(e) => this.addArticleToPayutc(article, index)}\n                                                    >\n                                                        Ajouter à PayUTC\n                                                    </Button> \n                                                )}\n                                            </TableCell>\n                                            <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\n                                                {article.menu.length > 0 &&\n                                                    <Button \n                                                        variant=\"contained\" \n                                                        size=\"small\" \n                                                        color=\"secondary\"\n                                                        className={classes.btn} \n                                                        onClick={(e) => this.redirectToMenu(e, article)}\n                                                    >\n                                                        Consulter\n                                                    </Button>\n                                                }\n                                            </TableCell>\n                                        </TableRow>\n                                    ))}\n                                </TableBody>\n                            </Table>\n                        </div>\n                        <Typography variant=\"h6\" className={classes.subTitle}>\n                            <ChevronRightIcon className={classes.subTitleIcon}/>\n                            Ajouter un article\n                        </Typography>\n                        <Grid container>\n                            <Grid item xs={12} sm={4} md={2}>\n                                <TextField\n                                    label=\"Nom\"\n                                    className={classes.textField}\n                                    name=\"nom\"\n                                    value={new_article.nom}\n                                    onChange={this.handleChange}\n                                    autoComplete=\"off\"\n                                    margin=\"dense\"\n                                    variant=\"outlined\"\n                                    InputProps={{ style: { fontSize: 12 } }}\n                                />\n                            </Grid>\n                            <Grid item xs={4} sm={3} md={2}>\n                                <TextField\n                                    label=\"Prix TTC\"\n                                    className={classes.textField}\n                                    name=\"prix\"\n                                    type=\"number\"\n                                    value={new_article.prix}\n                                    onChange={this.handleChange}\n                                    autoComplete=\"off\"\n                                    margin=\"dense\"\n                                    variant=\"outlined\"\n                                    InputProps={{ style: { fontSize: 12 } }}\n                                />\n                            </Grid>\n                            <Grid item xs={4} sm={2} md={2}>\n                                <TextField\n                                    label=\"TVA\"\n                                    disabled\n                                    className={classes.textField}\n                                    value={new_article.tva}\n                                    type=\"number\"\n                                    margin=\"dense\"\n                                    variant=\"outlined\"\n                                    InputProps={{ style: { fontSize: 12 } }}\n                                />\n                            </Grid>\n                            <Grid item xs={4} sm={3} md={2}>\n                                <TextField\n                                    label=\"Stock\"\n                                    className={classes.textField}\n                                    name=\"stock\"\n                                    value={new_article.stock}\n                                    onChange={this.handleChange}\n                                    autoComplete=\"off\"\n                                    type=\"number\"\n                                    margin=\"dense\"\n                                    variant=\"outlined\"\n                                    InputProps={{ style: { fontSize: 12 } }}\n                                />\n                            </Grid>\n                            {!current_creneau.perm.asso &&\n                                <Grid item xs={8} sm={4} md={3} lg={2}>\n                                    <FormControlLabel\n                                        control={\n                                            <Checkbox\n                                                checked={invoice_checked}\n                                                onChange={this.handleCheckChange}\n                                                color=\"primary\"\n                                            />\n                                        }\n                                        labelPlacement=\"start\"\n                                        label=\"Facture demandée ?\"\n                                    />\n                                </Grid>\n                            }\n                            <Grid item xs={4} sm={2}>\n                                <Button \n                                    variant=\"contained\"\n                                    size=\"small\"\n                                    disabled={(!invoice_checked && !current_creneau.perm.asso) && true}\n                                    color=\"primary\"\n                                    className={classes.saving_btn} \n                                    onClick={this.saveArticle}\n                                >\n                                    Ajouter\n                                </Button>\n                            </Grid>\n                        </Grid>\n                    </div>\n                ): (\n                    <Typography variant=\"h6\" gutterBottom className={classes.title}>\n                        Pas de perm en cours ...\n                    </Typography>\n                )}\n            </div>\n        );\n    };\n\n}\n\nconst styles = theme => ({\n    loader: {\n        marginTop: 200,\n    },\n    title: {\n        textAlign: 'center',\n    },\n    subTitle: {\n        marginTop: 10,\n        marginBottom: 10,\n    },\n    subTitleIcon: {\n        marginRight: 8,\n        paddingTop: 5,\n    },\n    btn: {\n        marginLeft: 5,\n        marginRight: 5,\n        marginTop: 3,\n        textTransform: 'None',\n        fontSize: 10,\n    },\n    saving_btn: {\n        margin: 10,\n    },\n    textField: {\n        maring: 10,\n        width: '100%',\n        fontSize: 12,\n        paddingRight: 5,\n        paddingLeft: 5,\n    },\n    cell: {\n        paddingTop: 10,\n        paddingBottom: 10,\n        paddingRight: 10,\n        paddingLeft: 10,\n    },\n});\n\nexport default withStyles (styles) (CurrentPerm)","import React, {Component} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { ajaxGet } from '../../../utils/Ajax';\n\nfunction afficheNote(creneau, notation){\n\n    let note;\n    switch (creneau.creneau) {\n        case \"M\":\n            note = notation.mean_m;\n            break;\n        case \"S\":\n            note = notation.mean_s;\n            break;\n        case \"D\":\n            note = notation.mean_d;\n            break;\n        default:\n            break;\n    }\n\n    if (note === null || note === 0)\n        return \"grey\";\n    if (note < 2 )\n        return \"red\";\n    if (note < 3)\n        return \"orange\";\n    if (note < 4){\n        return \"lgreen\";       \n    }\n\n    return \"green\";\n}\n\nclass PermDetails extends Component{\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            notation : [],\n            creneau : [],\n            loading: true\n        }\n    }\n\n    componentDidMount(){\n        const query = new URLSearchParams(this.props.location.search);\n        const id = query.get('id');\n        ajaxGet('perms/notation/'+id).then(res => {\n            this.setState({notation: res.data, creneau: res.data.creneau, loading: false})\n        })\n        .catch(error => {\n            console.log(error)\n        })\n    }\n\n    \n\n    render(){\n\n        const { classes } = this.props;\n        const { notation, creneau, loading } = this.state;\n\n        if(loading){\n            return (\n                <Grid \n                    container \n                    className=\"admin_loader\"\n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                >\n                    <Grid item>\n                        <CircularProgress className={classes.progress} />\n                    </Grid>\n                </Grid>\n            )\n        }\n\n        return(\n            <div className={classes.container}>\n                <Typography variant=\"h5\" noWrap className={classes.subTitle}>\n                    <ChevronRightIcon className={classes.subTitleIcon}/>\n                    Notation perm {notation.nom}\n                </Typography>\n\n               <Paper className={classes.rootTable}>\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell className={classes.cell}>\n                                    Organisation\n                                </TableCell>\n                                <TableCell className={classes.cell}>\n                                    Décoration\n                                </TableCell>\n                                <TableCell className={classes.cell}>\n                                    Menu\n                                </TableCell>\n                                <TableCell className={classes.cell}>\n                                    Ambiance\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                                <TableRow>\n                                    <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\n                                        {notation.note_orga === 0 && <span className={classes.dot}></span>}\n                                        {notation.note_orga < 2 && notation.note_orga > 0 &&<span className={classes.dot_red}></span>}\n                                        {notation.note_orga < 3 && notation.note_orga >= 2 &&<span className={classes.dot_orange}></span>}\n                                        {notation.note_orga < 4 && notation.note_orga >= 3 &&<span className={classes.dot_lgreen}></span>}\n                                        {notation.note_orga >= 4 && <span className={classes.dot_green}></span>}\n                                    </TableCell>\n                                    <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\n                                        {notation.note_deco === 0 && <span className={classes.dot}></span>}\n                                        {notation.note_deco < 2 && notation.note_deco > 0 &&<span className={classes.dot_red}></span>}\n                                        {notation.note_deco < 3 && notation.note_deco >= 2 &&<span className={classes.dot_orange}></span>}\n                                        {notation.note_deco < 4 && notation.note_deco >= 3 &&<span className={classes.dot_lgreen}></span>}\n                                        {notation.note_deco >= 4 && <span className={classes.dot_green}></span>}\n                                    </TableCell>\n                                    <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\n                                        {notation.note_menu === 0 && <span className={classes.dot}></span>}\n                                        {notation.note_menu < 2 && notation.note_menu > 0 &&<span className={classes.dot_red}></span>}\n                                        {notation.note_menu < 3 && notation.note_menu >= 2 &&<span className={classes.dot_orange}></span>}\n                                        {notation.note_menu < 4 && notation.note_menu >= 3 &&<span className={classes.dot_lgreen}></span>}\n                                        {notation.note_menu >= 4 && <span className={classes.dot_green}></span>}\n                                    </TableCell>\n                                    <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\n                                        {notation.note_anim === 0 && <span className={classes.dot}></span>}\n                                        {notation.note_anim < 2 && notation.note_anim > 0 &&<span className={classes.dot_red}></span>}\n                                        {notation.note_anim < 3 && notation.note_anim >= 2 &&<span className={classes.dot_orange}></span>}\n                                        {notation.note_anim < 4 && notation.note_anim >= 3 &&<span className={classes.dot_lgreen}></span>}\n                                        {notation.note_anim >= 4 && <span className={classes.dot_green}></span>}\n                                    </TableCell>\n                                </TableRow>\n                        </TableBody>\n                    </Table>\n                </Paper>\n\n\n\n                <Paper className={classes.rootTable}>\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell className={classes.cellLeft}>\n                                    Créneau\n                                </TableCell>\n                                <TableCell className={classes.cell}>\n                                    Avis général\n                                </TableCell>\n                                <TableCell className={classes.cellLeft}>\n                                    Commentaire\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {creneau.map((cren, index) => (\n                                <TableRow>\n                                    <TableCell component=\"th\" scope=\"row\" className={classes.cellLeft}>\n                                        {cren.creneau === \"D\" && <span>Midi</span>}\n                                        {cren.creneau === \"S\" && <span>Soir</span>}\n                                        {cren.creneau === \"M\" && <span>Matin</span>}\n                                    </TableCell>\n                                    <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\n                                        {(() => {\n                                            switch(afficheNote(cren, notation)) {\n                                                case \"grey\" :\n                                                    return <span className={classes.dot}></span>\n                                                case \"red\" :\n                                                    return <span className={classes.dot_red}></span>\n                                                case \"orange\" :\n                                                    return <span className={classes.dot_orange}></span>\n                                                case \"lgreen\" :\n                                                    return <span className={classes.dot_lgreen}></span>\n                                                case \"green\" :\n                                                    return <span className={classes.dot_green}></span>\n                                                default:\n                                                    return <span></span>\n                                            }\n                                        })()}\n                                    </TableCell>\n                                    <TableCell>\n                                    {cren.notation.map((row, index) => (\n                                        <div>\n                                            {row.commentaire}\n                                        </div>\n                                    ))}\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </Paper>\n\n\n\n            </div>          \n        );\n        \n        \n    };\n\n}\n\nconst styles = theme => ({\n    rootTable : {\n        width: '100%',\n        overflowX: 'auto',\n        marginBottom: 20,\n    },\n    cell : {\n        textAlign : 'center'\n    },\n    cellLeft : {\n        textAlign : 'left'\n    },\n    container: {\n        padding: 20,\n        margin: 30,\n        marginTop: 100,\n        border: \"1.5px solid #B22132\",\n    },\n    subTitle: {\n        marginBottom: 40,\n    },\n    subTitleIcon: {\n        marginRight: 8,\n        paddingTop: 5,\n    },\n\n    dot : {\n      height: \"25px\",\n      width: \"25px\",\n      backgroundColor: \"#bbb\",\n      borderRadius: \"50%\",\n      display: \"inline-block\"\n    },\n    dot_red : {\n      height: \"25px\",\n      width: \"25px\",\n      backgroundColor: \"#E34242\",\n      borderRadius: \"50%\",\n      display: \"inline-block\"\n    },\n    dot_orange : {\n      height: \"25px\",\n      width: \"25px\",\n      backgroundColor: \"#F4B528\",\n      borderRadius: \"50%\",\n      display: \"inline-block\"\n    },\n    dot_lgreen : {\n      height: \"25px\",\n      width: \"25px\",\n      backgroundColor: \"#56BA2A\",\n      borderRadius: \"50%\",\n      display: \"inline-block\"\n    },\n    dot_green : {\n      height: \"25px\",\n      width: \"25px\",\n      backgroundColor: \"#285507\",\n      borderRadius: \"50%\",\n      display: \"inline-block\"\n    }\n});\n\nexport default withStyles (styles) (PermDetails)","import React, {Component} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { ChevronRight } from '@material-ui/icons';\nimport { TextField, MenuItem } from '@material-ui/core';\nimport { ajaxGet } from '../../../utils/Ajax';\nimport { asset_url } from '../../../utils/Config';\nimport { compareDjangoDate, getCurrentDate } from '../../../utils/Date';\n\nclass PermsIndex extends Component{\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            notations : [],\n            semesters: [],\n            current_semester : '',\n            loading: true\n        }\n        this.consultNotation = this.consultNotation.bind(this)\n\n    }\n\n    componentDidMount(){\n        this.loadSemester();\n        ajaxGet('perms/notation/all').then(res => {\n            let notations = res.data.perms\n            notations = notations.sort(function(a,b){\n                if (a.mean_note < b.mean_note) {\n                    return 1\n                }\n                return -1\n            })\n            this.setState({notations: notations, loading: false})\n        })\n        .catch(error => {\n            console.log(error)\n        })\n    }\n\n    loadSemester(){\n        ajaxGet('semesters').then(res => {\n            this.setState({semesters:res.data}) \n        })\n        ajaxGet('current/semester').then(res => {\n            this.setState({current_semester:res.data.id}) \n        })\n \n    }\n\n    loadOtherSemester(event){\n        const semestre_id = event.target.value;\n        this.setState({loading: true, current_semester: semestre_id})\n        ajaxGet('perms/notation/all?semestre=' + semestre_id).then(res => {\n            let notations = res.data.perms\n            notations = notations.sort(function(a,b){\n                if (a.mean_note < b.mean_note) {\n                    return 1\n                }\n                return -1\n            })\n            this.setState({notations: notations, loading: false})\n        })\n        .catch(error => {\n            console.log(error)\n        })\n\n    }\n\n    consultNotation(notation_id){\n        window.open(asset_url('/admin/perm/details?id=' + notation_id));\n    }\n\n    render(){\n\n\n        \n        const { classes } = this.props;\n\n        const { notations, loading, current_semester, semesters } = this.state;\n        const current_date = getCurrentDate()\n        let perm_soir = false;\n\n        if(loading){\n            return (\n                <Grid \n                    container \n                    className=\"admin_loader\"\n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                >\n                    <Grid item>\n                        <CircularProgress className={classes.progress} />\n                    </Grid>\n                </Grid>\n            )\n        }\n\n\n        return (\n            <div className={classes.container}>\n                <Grid container style={{marginBottom: 30}}>\n                    <Grid item xs={12}>\n                        <Typography variant=\"h6\">\n                            <ChevronRight className={classes.subTitleIcon}/>\n                            Charger un autre semestre\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={8} sm={6}>\n                        <TextField\n                            select\n                            className={classes.textField}\n                            value={current_semester || ''}\n                            autoComplete=\"off\"\n                            margin=\"dense\"\n                            fullWidth\n                            variant=\"outlined\"\n                            onChange={(event) => this.loadOtherSemester(event)}\n                        >\n                            {semesters.map(semesters => (\n                                <MenuItem key={semesters.id} value={semesters.id}>\n                                    {semesters.periode+semesters.annee}\n                                </MenuItem>\n                            ))}\n                        </TextField>\n                    </Grid> \n                </Grid>\n                <Typography variant=\"h5\" noWrap className={classes.subTitle}>\n                    <ChevronRightIcon className={classes.subTitleIcon}/>\n                    Notation des perms\n                </Typography>\n                <Paper className={classes.rootTable}>\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell className={classes.cellLeft}>\n                                    Perm\n                                </TableCell>\n                                <TableCell className={classes.cell}>\n                                    Perm du soir\n                                </TableCell>\n                                <TableCell className={classes.cell}>\n                                    Organisation\n                                </TableCell>\n                                <TableCell className={classes.cell}>\n                                    Décoration\n                                </TableCell>\n                                <TableCell className={classes.cell}>\n                                    Menu\n                                </TableCell>\n                                <TableCell className={classes.cell}>\n                                    Ambiance\n                                </TableCell>\n                                <TableCell className={classes.cell}>\n                                    Notation\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {notations.map((row, index) => (\n                                <TableRow hover key={index} className={classes.row} onClick={(event) => this.consultNotation(row.id)}>\n                                    <TableCell component=\"th\" scope=\"row\" className={classes.cellLeft}>\n                                        {row.nom} - {row.nom_resp} \n                                    </TableCell>\n                                    <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\n                                        { perm_soir = false }\n                                        {row.creneau.map((cren, index) => (\n                                            <div key={index}>\n                                                {cren.creneau===\"S\" && perm_soir === false && compareDjangoDate(current_date, cren.date) && <span>✓</span>}\n                                                {cren.creneau===\"S\" && perm_soir === false && compareDjangoDate(current_date, cren.date) ? perm_soir = true : null}\n                                            </div>\n                                        ))}\n                                    </TableCell>\n                                    <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\n                                        {row.note_orga === 0 && <span className={classes.dot}></span>}\n                                        {row.note_orga < 2 && row.note_orga > 0 &&<span className={classes.dot_red}></span>}\n                                        {row.note_orga < 3 && row.note_orga >= 2 &&<span className={classes.dot_orange}></span>}\n                                        {row.note_orga < 4 && row.note_orga >= 3 &&<span className={classes.dot_lgreen}></span>}\n                                        {row.note_orga >= 4 && <span className={classes.dot_green}></span>}\n                                    </TableCell>\n                                    <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\n                                        {row.note_deco === 0 && <span className={classes.dot}></span>}\n                                        {row.note_deco < 2 && row.note_deco > 0 &&<span className={classes.dot_red}></span>}\n                                        {row.note_deco < 3 && row.note_deco >= 2 &&<span className={classes.dot_orange}></span>}\n                                        {row.note_deco < 4 && row.note_deco >= 3 &&<span className={classes.dot_lgreen}></span>}\n                                        {row.note_deco >= 4 && <span className={classes.dot_green}></span>}\n                                    </TableCell>\n                                    <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\n                                        {row.note_menu === 0 && <span className={classes.dot}></span>}\n                                        {row.note_menu < 2 && row.note_menu > 0 &&<span className={classes.dot_red}></span>}\n                                        {row.note_menu < 3 && row.note_menu >= 2 &&<span className={classes.dot_orange}></span>}\n                                        {row.note_menu < 4 && row.note_menu >= 3 &&<span className={classes.dot_lgreen}></span>}\n                                        {row.note_menu >= 4 && <span className={classes.dot_green}></span>}\n                                    </TableCell>\n                                    <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\n                                        {row.note_anim === 0 && <span className={classes.dot}></span>}\n                                        {row.note_anim < 2 && row.note_anim > 0 &&<span className={classes.dot_red}></span>}\n                                        {row.note_anim < 3 && row.note_anim >= 2 &&<span className={classes.dot_orange}></span>}\n                                        {row.note_anim < 4 && row.note_anim >= 3 &&<span className={classes.dot_lgreen}></span>}\n                                        {row.note_anim >= 4 && <span className={classes.dot_green}></span>}\n                                    </TableCell>\n                                    <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\n                                        {row.nb_note_orga}/{row.nb_astreintes}\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </Paper>\n            </div>\n        );\n    };\n\n}\n\nconst styles = theme => ({\n    rootTable : {\n        width: '100%',\n        overflowX: 'auto'\n    },\n    cell : {\n        textAlign : 'center'\n    },\n    cellLeft : {\n        textAlign : 'left'\n    },\n    container: {\n        padding: 20,\n        margin: 30,\n        marginTop: 100,\n        border: \"1.5px solid #B22132\",\n    },\n    subTitle: {\n        marginBottom: 40,\n    },\n    subTitleIcon: {\n        marginRight: 8,\n        paddingTop: 5,\n    },\n\n    dot : {\n      height: \"25px\",\n      width: \"25px\",\n      backgroundColor: \"#bbb\",\n      borderRadius: \"50%\",\n      display: \"inline-block\"\n    },\n    dot_red : {\n      height: \"25px\",\n      width: \"25px\",\n      backgroundColor: \"#E34242\",\n      borderRadius: \"50%\",\n      display: \"inline-block\"\n    },\n    dot_orange : {\n      height: \"25px\",\n      width: \"25px\",\n      backgroundColor: \"#F4B528\",\n      borderRadius: \"50%\",\n      display: \"inline-block\"\n    },\n    dot_lgreen : {\n      height: \"25px\",\n      width: \"25px\",\n      backgroundColor: \"#56BA2A\",\n      borderRadius: \"50%\",\n      display: \"inline-block\"\n    },\n    dot_green : {\n      height: \"25px\",\n      width: \"25px\",\n      backgroundColor: \"#285507\",\n      borderRadius: \"50%\",\n      display: \"inline-block\"\n    }\n});\n\nexport default withStyles (styles) (PermsIndex)","import React, {Component} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { ajaxGet, ajaxPost, ajaxPatch } from '../../../utils/Ajax';\nimport { config } from '../../../utils/Config';\n\nclass RequestedPerms extends Component{\n\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            requested_perms : [],\n            loading: true,\n            perm_may_be_requested: false\n        }\n\n    }\n\n    componentDidMount(){\n        this.loadPermMayBeRequest();\n    }\n\n\n    loadPermMayBeRequest(){\n        ajaxGet('perms/public/may/request').then(res => {\n            this.setState({perm_may_be_requested: res.data.perm_may_be_requested})\n\t\t\tthis.loadRequestedPerms();\n\t\t}).catch(error => {\n            console.log(error)\n\t\t})\n    }\n\n\n    loadRequestedPerms(){\n        ajaxGet('request/perm/').then(res => {\n            this.setState({requested_perms: res.data.requested_perms, loading: false})\n        })\n        .catch(error => {\n            console.log(error)\n        })\n    }\n\n    handleSliderChange(){\n        const perm_may_be_requested = !this.state.perm_may_be_requested;\n        ajaxPost('perms/update/may/request', {'perm_may_be_requested': perm_may_be_requested}).then(res => {\n            this.setState({perm_may_be_requested: perm_may_be_requested})\n        })\n        .catch(error => {\n            console.log(error);\n        })\n    }\n\n\n    getRequestedPermsPDF(){\n        window.open(config.urls.API_URL + 'perms/requested/pdf')\n    }\n\n\n    addPerm(requested_perm_index){\n\n        let requested_perms = this.state.requested_perms;\n        requested_perms[requested_perm_index].loading = true;\n        this.setState({requested_perms: requested_perms})\n\n        const requested_perm = this.state.requested_perms[requested_perm_index];\n        const perm = {\n            nom : requested_perm.nom,\n            asso : requested_perm.asso,\n            nom_resp: requested_perm.nom_resp,\n            mail_resp : requested_perm.mail_resp,\n            nom_resp_2: requested_perm.nom_resp_2,\n            mail_resp_2 : requested_perm.mail_resp_2,\n            mail_asso: requested_perm.mail_asso\n        }\n\n        ajaxPost('perms/', perm).then(res => {\n            ajaxPatch('request/perm/' + requested_perm.id + '/', {}).then(res => {\n                requested_perms[requested_perm_index].added = true;\n                requested_perms[requested_perm_index].loading = false;\n                this.setState({requested_perms: requested_perms})\n            })\n            .catch(error => {\n                requested_perms[requested_perm_index].loading = false;\n                this.setState({requested_perms: requested_perms})\n            })\n        })\n        .catch(error => {\n            requested_perms[requested_perm_index].loading = false;\n            this.setState({requested_perms: requested_perms})\n        })\n    }\n\n\n\n    render(){\n\n        const { classes } = this.props;\n\n        const {requested_perms, loading, perm_may_be_requested} = this.state;\n\n\n        if (loading) {\n            return (\n                <Grid\n                    container\n                    className=\"admin_loader\"\n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                >\n                    <Grid item>\n                        <CircularProgress/>\n                    </Grid>\n                </Grid>\n            )\n        }\n\n        return (\n            <div className=\"admin_container\">\n                <Grid container direction=\"row\">\n                    <Typography variant=\"h6\" className={classes.subTitle}>\n                        <ChevronRightIcon className={classes.subTitleIcon}/>\n                        Configuration\n                    </Typography>\n                </Grid>\n                <Grid container direction=\"row\">\n                    <FormControlLabel\n                        control={\n                            <Switch\n                                color=\"primary\"\n                                checked={perm_may_be_requested}\n                                value=\"perm_may_be_requested\"\n                                onChange={() => this.handleSliderChange()}\n                            />\n                        }\n                        label=\"Demande de perm activée\"\n                        labelPlacement=\"start\"\n                    />\n                </Grid>\n                <Grid container direction=\"row\">\n                    <Typography variant=\"h6\" className={classes.subTitle}>\n                        <ChevronRightIcon className={classes.subTitleIcon}/>\n                        Liste des demandes\n                    </Typography>\n                </Grid>\n\n                <Grid container direction=\"row\">\n                    <Button\n                        color=\"primary\"\n                        variant=\"contained\"\n                        margin=\"dense\"\n                        size=\"small\"\n                        className={classes.btn}\n                        onClick={(e) => this.getRequestedPermsPDF()}\n                    >\n                        Télécharger les demandes\n                    </Button>\n                </Grid>\n\n                <Paper className={classes.rootTable}>\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell className={classes.cell}>\n                                    Perm\n                                </TableCell>\n                                <TableCell className={classes.cell}>\n                                    Asso ?\n                                </TableCell>\n                                <TableCell className={classes.cell}>\n                                    Responsable\n                                </TableCell>\n                                <TableCell className={classes.cell}>\n                                    #\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {requested_perms.map((row, index) => (\n                                <TableRow hover key={index} className={classes.row}>\n                                    <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\n                                        {row.nom}\n                                    </TableCell>\n                                    <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\n                                        {row.asso? (\n                                            <CheckIcon/>\n                                        ):(\n                                            <CloseIcon/>\n                                        )}\n                                    </TableCell>\n                                    <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\n                                        {row.nom_resp}\n                                    </TableCell>\n                                    <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\n                                        <Button\n                                            color=\"primary\"\n                                            variant=\"contained\"\n                                            margin=\"dense\"\n                                            size=\"small\"\n                                            disabled={row.added || row.loading}\n                                            className={classes.btn}\n                                            onClick={(e) => this.addPerm(index)}\n                                        >\n                                            {row.added ? (<span>Ajouté</span>) : (<span>Ajouter</span>)}\n                                        </Button>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </Paper>\n            </div>\n        );\n    };\n\n}\n\nconst styles = theme => ({\n    rootTable : {\n        width: '100%',\n        overflowX: 'auto'\n    },\n    container: {\n        padding: 20,\n        margin: 30,\n        marginTop: 100,\n        border: \"1.5px solid #B22132\",\n    },\n    subTitle: {\n        marginBottom: 10,\n        marginTop: 20\n    },\n    subTitleIcon: {\n        marginRight: 8,\n        paddingTop: 5,\n    },\n    add_item : {\n        marginLeft: 10,\n    },\n    btn : {\n        margin: 10,\n    },\n});\n\nexport default withStyles (styles) (RequestedPerms)\n","import React, {Component} from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport {MuiPickersUtilsProvider, KeyboardDatePicker} from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\n\nimport { ajaxGet, ajaxPost, ajaxDelete, ajaxPut } from '../../../utils/Ajax';\n\nclass GoodiesManagement extends Component{\n \n    \n    constructor(props) {\n        super(props)\n        this.state = {\n            winners: [],\n            loading: true,\n            start_date: new Date(),\n            end_date: new Date(),\n        }\n\n        this.generateGoodiesWinners = this.generateGoodiesWinners.bind(this);\n        this.deleteGoodiesWinners = this.deleteGoodiesWinners.bind(this);\n        this.updateGoodieWinner = this.updateGoodieWinner.bind(this)\n        this.handleStartDateChange = this.handleStartDateChange.bind(this)\n        this.handleEndDateChange = this.handleEndDateChange.bind(this)\n    }\n\n\n    componentDidMount(){\n        this.loadGoodiesWinners()\n    }\n\n    loadGoodiesWinners(){\n        ajaxGet('payutc/goodies').then(res => {\n            this.setState({winners: res.data.winners, loading: false});\n        })\n        .catch(error => {\n            console.log(error)\n            this.setState({loading: false})\n        })\n    }\n\n\n    handleStartDateChange(date){\n        this.setState({start_date: date})\n    }\n\n    handleEndDateChange(date){\n        this.setState({end_date: date})\n    }\n\n    formateDate(date){\n        const day = (\"0\" + (date.getDate() + 1)).slice(-2);\n        const month_number = (\"0\" + (date.getMonth() + 1)).slice(-2)\n        const year = date.getFullYear();\n        return year + \"-\" + month_number + \"-\" + day;\n    }\n\n    generateGoodiesWinners(){\n        this.setState({loading: true})\n        const start_date = this.formateDate(this.state.start_date);\n        const end_date = this.formateDate(this.state.end_date)\n        ajaxPost('payutc/goodies/', {start_date: start_date, end_date: end_date}).then(res => {\n            this.setState({winners: res.data.winners, loading: false})\n        })\n        .catch(error => {\n            console.log(error);\n            this.setState({loading: false})\n        })\n    }\n\n    deleteGoodiesWinners(){\n        this.setState({loading: true})\n        ajaxDelete('payutc/goodies/').then(res => {\n            this.setState({winners: res.data.winners, loading: false})\n        })\n        .catch(error => {\n            console.log(error)\n            this.setState({loading: false})\n        })\n    }\n\n    updateGoodieWinner(event, id){\n        ajaxPut('payutc/goodies/' + id + '/').then(res => {\n            let winners = [...this.state.winners]\n            const index = winners.findIndex(w => w.id === id);\n            if (index >= 0) {\n                winners[index].picked_up = !winners[index].picked_up\n            }\n            this.setState({winners: winners})\n        })\n        .catch(error => {\n            console.log(error)\n        })\n    }\n\n    render(){\n        \n        const { classes } = this.props;\n        const { winners, loading, start_date, end_date } = this.state;\n\n        if (loading) {\n            return (\n                <Grid \n                    container \n                    className={classes.loader}\n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                >\n                    <Grid item>\n                        <CircularProgress className={classes.progress} />\n                    </Grid>\n                </Grid>\n            )\n        }\n\n        return (\n            <div className=\"admin_container\">\n\n                                \n                {winners.length === 0 ? (\n                    <Grid container>\n                        <Typography variant=\"h6\" className={classes.subTitle}>\n                            Pas de vainqueur pour le moment. \n                        </Typography>\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                            <Grid container justify=\"space-around\">\n                                <KeyboardDatePicker\n                                    disableToolbar\n                                    variant=\"inline\"\n                                    format=\"MM/dd/yyyy\"\n                                    margin=\"normal\"\n                                    label=\"Date de départ\"\n                                    name=\"start_date\"\n                                    value={start_date}\n                                    onChange={this.handleStartDateChange}\n                                    KeyboardButtonProps={{\n                                        'aria-label': 'change date',\n                                    }}\n                                />\n                                <KeyboardDatePicker\n                                    disableToolbar\n                                    variant=\"inline\"\n                                    format=\"MM/dd/yyyy\"\n                                    margin=\"normal\"\n                                    label=\"Date de fin\"\n                                    name=\"end_date\"\n                                    value={end_date}\n                                    onChange={this.handleEndDateChange}\n                                    KeyboardButtonProps={{\n                                        'aria-label': 'change date',\n                                    }}\n                                />\n                            </Grid>\n                            <Grid container\n                            direction=\"row\"\n                            justify=\"center\"\n                            alignItems=\"center\">\n                                <Button \n                                    variant=\"contained\" \n                                    size=\"small\" \n                                    color=\"primary\"\n                                    className={classes.generate_btn}\n                                    onClick={this.generateGoodiesWinners}\n                                >\n                                    Générer\n                                </Button>\n                            </Grid>\n                        </MuiPickersUtilsProvider>\n                    </Grid>\n                ):(\n                    <div>\n                        <Typography variant=\"h6\" className={classes.subTitle}>\n                            <ChevronRightIcon className={classes.subTitleIcon}/>\n                            Liste des vainqueurs\n                            <Button \n                                variant=\"contained\" \n                                size=\"small\" \n                                className={classes.title_btn} \n                                color=\"secondary\"\n                                onClick={this.deleteGoodiesWinners}\n                            >\n                                Supprimer\n                            </Button>\n                        </Typography>\n                        <Grid container>\n                            <Grid item xs={12} sm={6}>\n                                <div className=\"responsive_table\">\n                                    <Table size=\"small\">\n                                        <TableBody>\n                                            {winners.slice(0,Math.ceil(winners.length/2))\n                                            .map((row, index) => (\n                                                <TableRow hover key={index} className={classes.row}>\n                                                    <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\n                                                        {row.winner}\n                                                    </TableCell>\n                                                    <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\n                                                        {row.picked_up?(\n                                                            <Button \n                                                                variant=\"contained\" \n                                                                size=\"small\" \n                                                                className={classes.btn} \n                                                                color=\"secondary\"\n                                                                onClick={(e) => this.updateGoodieWinner(e, row.id)}\n                                                            >\n                                                                Annuler\n                                                            </Button>\n                                                        ):(\n                                                            <Button \n                                                                variant=\"contained\" \n                                                                size=\"small\" \n                                                                className={classes.btn} \n                                                                color=\"primary\"\n                                                                onClick={(e) => this.updateGoodieWinner(e, row.id)}\n                                                            >\n                                                                Reçu\n                                                            </Button>\n                                                        )\n                                                    }\n                                                    </TableCell>\n                                                </TableRow>\n                                            ))}\n                                        </TableBody>\n                                    </Table>\n                                </div>\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <div className=\"responsive_table\">\n                                    <Table size=\"small\">\n                                        <TableBody>\n                                            {winners.slice(Math.ceil(winners.length/2), winners.length)\n                                            .map((row, index) => (\n                                                <TableRow hover key={index} className={classes.row}>\n                                                    <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\n                                                        {row.winner}\n                                                    </TableCell>\n                                                    <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\n                                                        {row.picked_up?(\n                                                            <Button \n                                                                variant=\"contained\" \n                                                                size=\"small\" \n                                                                className={classes.btn} \n                                                                color=\"secondary\"\n                                                                onClick={(e) => this.updateGoodieWinner(e, row.id)}\n                                                            >\n                                                                Annuler\n                                                            </Button>\n                                                        ):(\n                                                            <Button \n                                                                variant=\"contained\" \n                                                                size=\"small\" \n                                                                className={classes.btn} \n                                                                color=\"primary\"\n                                                                onClick={(e) => this.updateGoodieWinner(e, row.id)}\n                                                            >\n                                                                Reçu\n                                                            </Button>\n                                                        )\n                                                    }\n                                                    </TableCell>\n                                                </TableRow>\n                                            ))}\n                                        </TableBody>\n                                    </Table>\n                                </div>\n                            </Grid>\n                        </Grid>\n                    </div>\n                )}\n\n            </div>\n        );\n    };\n\n}\n\nconst styles = theme => ({\n    loader: {\n        marginTop: 200,\n    },\n    container: {\n        padding: 20,\n        margin: 30,\n        marginTop: 100,\n        border: \"2px solid #B22132\",\n    },\n    subTitle:{\n        marginBottom: 40,\n    },\n    title_btn: {\n        marginLeft: 20,\n    },\n    subTitleIcon: {\n        marginRight: 8,\n        paddingTop: 5,\n    },\n    generate_btn: {\n        margin: 20,\n        marginTop: 30,\n    },\n});\n\nexport default withStyles (styles) (GoodiesManagement)","import React, {Component} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport {ajaxDelete, ajaxGet, ajaxPost, ajaxPut} from \"../../../utils/Ajax\";\nimport {Accordion, AccordionDetails, AccordionSummary, ListItem, ListItemText, Paper} from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Button from \"@material-ui/core/Button\";\nimport Switch from \"@material-ui/core/Switch\";\nimport LinkIcon from '@material-ui/icons/Link';\nimport EmailIcon from '@material-ui/icons/Email';\n\nclass PollsManagement extends Component{\n\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            activeShotgun : [],\n            unActiveShotgun: [],\n            listPeople: [],\n            newShotgun:{\n                text: '',\n                dateShotgun: this.formatDate(new Date()),\n                nb: 10,\n                dateStart: null,\n                dateEnd: null,\n                personAdd:''\n            }\n        }\n        this.loadShotgun = this.loadShotgun.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n        this.saveShotgun = this.saveShotgun.bind(this)\n        this.handleSwitch = this.handleSwitch.bind(this)\n        this.loadPeople = this.loadPeople.bind(this)\n    }\n\n    saveShotgun(){\n        let temp = this.state.newShotgun\n        ajaxPost('shotgun/creneau/',{shotgunDate:temp.dateShotgun,max_people:temp.nb,start:temp.dateStart, end: temp.dateEnd,text:temp.text,actif:true}).then(res =>{\n            this.loadShotgun()\n            this.setState({\n                newShotgun:{\n                    text: '',\n                    dateShotgun: this.formatDate(new Date()),\n                    nb: 10,\n                    dateStart: null,\n                    dateEnd: null,\n                },\n                listPeople:{}\n            })\n        })\n    }\n\n    formatDate(date){\n        const year = date.getFullYear()\n        const month = (\"0\" + (date.getMonth() + 1)).slice(-2)\n        const day = (\"0\" + (date.getDate())).slice(-2)\n        const hour = date.getHours()\n        const min = date.getMinutes()\n        return year+'-'+month+'-'+day+'T'+hour+':'+min\n    }\n\n    handleSwitch(e){\n        let temp = e\n        temp.actif = !e.actif\n        ajaxPut('shotgun/creneau/' + e.id+'/',temp).then(r  => this.loadAllComponent())\n    }\n\n    handleDelete(e){\n        ajaxDelete('shotgun/creneau/' + e.id+'/').then(r => this.loadAllComponent())\n    }\n\n    handleDeletePerson(e){\n        ajaxDelete('shotgun/persons/' + e.id+'/').then(r => this.loadAllComponent())\n    }\n\n    addPerson(idCreneau){\n        ajaxPost('shotgun/persons/',{id_creneau:idCreneau, login:this.state.newShotgun.personAdd}).then(r => this.loadAllComponent())\n    }\n\n    sendEmails(){\n        alert(\"coucou\")\n    }\n\n    loadAllComponent(){\n        this.loadShotgun()\n        this.loadPeople()\n    }\n\n\n    componentDidMount(){\n        this.loadAllComponent()\n    }\n\n    loadPeople(){\n        ajaxGet('shotgun/persons/').then(res=>{\n            let temp = {}\n            for(let people in res.data){\n                if (!temp[''+ res.data[people]['id_creneau']]) {\n                    temp[''+ res.data[people]['id_creneau']] = [];\n                }\n                temp[''+ res.data[people]['id_creneau']].push(res.data[people])\n            }\n            this.setState({listPeople:temp})\n        })\n    }\n\n    loadShotgun(){\n        ajaxGet('shotgun/creneau/').then(res=>{\n            let actif = []\n            let inactif = []\n            for (let shotgun in res.data){\n                if (res.data[shotgun]['actif']){\n                    actif.push(res.data[shotgun])\n                }else{\n                    inactif.push(res.data[shotgun])\n                }\n            }\n            this.setState({activeShotgun: actif, unActiveShotgun: inactif})\n        })\n    }\n\n    handleChange(event){\n        this.setState({\n            newShotgun: {\n                ...this.state.newShotgun,\n                [event.target.name]: event.target.value\n            }\n        })\n    }\n\n    displayPerson(classes, person){\n        return(\n            <Grid container\n                  justifyContent=\"space-between\"\n                  direction=\"row\">\n                <Typography item xs={12} sm={6}>{person.login} - {person.email}</Typography>\n                <Button\n                    item xs={12} sm={6}\n                    variant=\"contained\"\n                    size=\"small\"\n                    className={classes.btnAddNews}\n                    color=\"secondary\"\n                    onClick={() => this.handleDeletePerson(person)}\n                >\n                    Supprimer\n                </Button>\n            </Grid>\n        )\n    }\n\n    displaySotgun(element, index,classes){\n        let nbPeople = 0\n        let liste = []\n        if (this.state.listPeople[''+element.id]){\n            liste = this.state.listPeople[''+element.id]\n            nbPeople = this.state.listPeople[''+element.id].length\n        }\n        return(\n            <React.Fragment key = {index}>\n                    <ListItem\n                        className={classes.suggestionItem}\n                        component=\"div\"\n                    >\n                        <ListItemText\n                            primary={\n                                element.text\n                            }\n                            secondary={\n                                'Début du shotgun :' +element.shotgunDate\n                            }\n                        />\n\n                        <EmailIcon\n                            onClick={() => this.sendEmails()}\n                        />\n                        {element.actif &&\n                        <LinkIcon\n                            onClick={() => alert(\"url: picasso-utc.fr/shotgun?id=\"+element.id)}\n                        />\n                        }\n\n                            <Switch\n                                checked={element.actif}\n                                onChange={() => this.handleSwitch(element)}\n                                inputProps={{ 'aria-label': 'controlled' }}\n                            />\n\n\n                        <Button\n                            variant=\"contained\"\n                            size=\"small\"\n                            className={classes.btnAddNews}\n                            color=\"secondary\"\n                            onClick={() => this.handleDelete(element)}\n                        >\n                            Supprimer\n                        </Button>\n                    </ListItem>\n                <Accordion>\n                    <AccordionSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel1a-content\"\n                        id=\"panel1a-header\"\n                    >\n                        <Typography>Membres du shotgun {nbPeople} / {element.max_people}</Typography>\n                    </AccordionSummary>\n                    <AccordionDetails>\n                        <div>\n                            <Grid container\n                                  justifyContent=\"space-between\"\n                                  direction=\"row\">\n                                <TextField\n                                    item xs={12} sm={6}\n                                    label=\"Ajouter une personne en avance\"\n                                    className={classes.textField}\n                                    name=\"personAdd\"\n                                    value={this.state.personAdd}\n                                    onChange={this.handleChange}\n                                    autoComplete=\"off\"\n                                    margin=\"dense\"\n                                    fullWidth\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    InputProps={{ style: { fontSize: 12 } }}\n                                />\n                                <Button\n                                    item xs={12} sm={6} onClick={() => this.addPerson(element.id)}>Ajouter</Button>\n                            </Grid>\n                            {liste.map((element,index) => {\n                                return this.displayPerson(classes,element)\n                            })}\n                        </div>\n                    </AccordionDetails>\n                </Accordion>\n            </React.Fragment>\n        )\n\n    }\n\n    render() {\n        const {classes} = this.props;\n        const {activeShotgun, unActiveShotgun, newShotgun, personAdd} = this.state\n\n        return (\n            <>\n                <div className=\"admin_container\">\n                    <Grid container direction=\"row\">\n                        <Typography variant=\"h6\" className={classes.subTitle}>\n                            <ChevronRightIcon className={classes.titleIcon}/>\n                            Ajouter un shotgun\n                        </Typography>\n                        <Paper className={classes.paper_box}>\n                            <Grid container direction='row' className={classes.container_createShotgun}>\n                                <Grid item xs={12} sm={6} lg={6} className={classes.textFieldContainer}>\n                                    <TextField\n                                        label=\"Description du shotgun\"\n                                        className={classes.textField}\n                                        name=\"text\"\n                                        value={newShotgun.text}\n                                        onChange={this.handleChange}\n                                        autoComplete=\"off\"\n                                        margin=\"dense\"\n                                        fullWidth\n                                        variant=\"outlined\"\n                                        size=\"small\"\n                                        InputProps={{ style: { fontSize: 12 } }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6} lg={3} className={classes.textFieldContainer}>\n                                    <TextField\n                                        id=\"datetime-local\"\n                                        label=\"Date du shotgun\"\n                                        type=\"datetime-local\"\n                                        name=\"dateShotgun\"\n                                        value={newShotgun.dateShotgun}\n                                        className={classes.textField}\n                                        onChange={this.handleChange}\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6} lg={3} className={classes.textFieldContainer}>\n                                    <TextField\n                                        id=\"outlined-number\"\n                                        label=\"Max personnes\"\n                                        type=\"number\"\n                                        name=\"nb\"\n                                        value={newShotgun.nb}\n                                        onChange={this.handleChange}\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} className={classes.textFieldContainer}>\n                                <Accordion>\n                                    <AccordionSummary\n                                        expandIcon={<ExpandMoreIcon />}\n                                        aria-controls=\"panel1a-content\"\n                                        id=\"panel1a-header\"\n                                    >\n                                        <Typography>Informations supplémentaires (non obligatoire)</Typography>\n                                    </AccordionSummary>\n                                    <AccordionDetails>\n                                        <Grid item xs={12} sm={6} lg={3} className={classes.textFieldContainer}>\n                                            <TextField\n                                                id=\"datetime-local\"\n                                                label=\"Date début évènement\"\n                                                type=\"datetime-local\"\n                                                name=\"dateStart\"\n                                                value={newShotgun.dateStart}\n                                                className={classes.textField}\n                                                onChange={this.handleChange}\n                                                InputLabelProps={{\n                                                    shrink: true,\n                                                }}\n                                            />\n                                        </Grid>\n                                        <Grid item xs={12} sm={6} lg={3} className={classes.textFieldContainer}>\n                                            <TextField\n                                                id=\"datetime-local\"\n                                                label=\"Date fin évènement\"\n                                                type=\"datetime-local\"\n                                                name=\"dateEnd\"\n                                                value={newShotgun.dateEnd}\n                                                className={classes.textField}\n                                                onChange={this.handleChange}\n                                                InputLabelProps={{\n                                                    shrink: true,\n                                                }}\n                                            />\n                                        </Grid>\n                                    </AccordionDetails>\n                                </Accordion>\n                                </Grid>\n                                <Button\n                                    variant=\"contained\"\n                                    size=\"small\"\n                                    color=\"primary\"\n                                    onClick={this.saveShotgun}\n                                    className={classes.btnAddShotgun}\n                                >\n                                    Ajouter\n                                </Button>\n                            </Grid>\n                        </Paper>\n                    </Grid>\n                </div>\n                <div className=\"admin_container\">\n                    <Typography variant=\"h6\" className={classes.subTitle}>\n                        <ChevronRightIcon className={classes.subTitleIcon}/>\n                        Shotgun en cours\n                    </Typography>\n                        {activeShotgun.map((element,index) =>{\n                            // let shotgunDate = format(date, \"MMMM do, yyyy H:mma\")\n                            return this.displaySotgun(element,index,classes)\n                        })}\n                </div>\n                <div className=\"admin_container\">\n                    <Typography variant=\"h6\" className={classes.subTitle}>\n                        <ChevronRightIcon className={classes.subTitleIcon}/>\n                        Shotgun terminé\n                    </Typography>\n                    {unActiveShotgun.map((element,index) =>{\n                        // let shotgunDate = format(date, \"MMMM do, yyyy H:mma\")\n                        return this.displaySotgun(element,index,classes)\n                    })}\n                </div>\n\n            </>\n\n        )\n    }\n}\n\nconst styles = theme => ({\n    subTitle: {\n        marginTop: 10,\n        marginBottom: 10,\n    },\n    subTitleIcon: {\n        marginRight: 8,\n        paddingTop: 5,\n    },\n    suggestionItem: {\n        paddingLeft: 15,\n        paddingBottom: 0,\n        paddingTop: 0,\n        fontSize: 14,\n        minHeight: 30,\n    },\n    paper_box : {\n        width: '100%',\n        overflowX: 'auto',\n        marginBottom: 20,\n    },\n    textField: {\n        width: '100%',\n        fontSize: 12,\n    },\n    textFieldContainer : {\n        paddingLeft: 10,\n        paddingRight: 10,\n    },\n    container_createShotgun:{\n        justifyContent: 'space-around',\n    },\n    btnAddShotgun: {\n        marginTop: 10,\n        marginBottom: 20,\n        marginRight:5,\n        marginLeft:5,\n    },\n});\n\nexport default withStyles (styles) (PollsManagement)\n","import React, {Component} from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport TextField from '@material-ui/core/TextField';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Paper from '@material-ui/core/Paper';\nimport TableHead from '@material-ui/core/TableHead';\nimport { ajaxGet, ajaxPost, ajaxDelete, ajaxPut, ajaxPatch } from '../../../utils/Ajax';\nimport {config} from '../../../utils/Config';\nimport SnackbarComponent from '../../../utils/SnackbarComponent';\n\nclass PollsManagement extends Component{\n\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            surveys: [],\n            loading: true,\n            open_modal: false,\n            survey : {\n                title: '',\n                description: '',\n                image: null,\n                visible: false,\n                multi_choice: false,\n                surveyitem_set: [],\n            },\n            surveys_history : [],\n            mode: 'create',\n            confirm_modal: false,\n            snackbar: {\n\t\t\t\topen: false,\n\t\t\t\tvariant: 'success',\n\t\t\t\tmessage: '',\n\t\t\t},\n        }\n\n        this.handleModalClickClose = this.handleModalClickClose.bind(this);\n        this.selectSurvey = this.selectSurvey.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSurveyItemChange = this.handleSurveyItemChange.bind(this);\n        this.addSurveyItem = this.addSurveyItem.bind(this);\n    }\n\n\n    componentDidMount(){\n        this.loadHistory();\n        this.loadSurveys()\n    }\n\n\n    loadHistory(){\n        ajaxGet('surveys/history').then(res => {\n            let surveys_history = res.data.surveys;\n            surveys_history = surveys_history.sort(function(a,b){\n                if (a.id > b.id) {\n                    return -1\n                }\n                return 1\n            })\n            for (let index = 0; index < surveys_history.length; index++) {\n                surveys_history[index].surveyitem_set = surveys_history[index].surveyitem_set.sort(function(a,b){\n                    if (a.votes > b.votes) {\n                        return -1\n                    }\n                    return 1\n                })\n            }\n            this.setState({surveys_history: surveys_history});\n        })\n        .catch(error => {\n            this.setState({loading: false})\n        })\n    }\n\n    loadSurveys(){\n        ajaxGet('surveys').then(res => {\n            let surveys = res.data;\n            // Count total vote for each surveys\n            for (let index = 0; index < surveys.length; index++) {\n                let total_votes = 0;\n                for (let j = 0; j < surveys[index].surveyitem_set.length; j++) {\n                    total_votes += surveys[index].surveyitem_set[j].surveyitemvote_set.length;\n                }\n                surveys[index].total_votes = total_votes;\n            }\n            for (let index = 0; index < surveys.length; index++) {\n                surveys[index].surveyitem_set = surveys[index].surveyitem_set.sort(function(a,b){\n                    if (a.surveyitemvote_set.length > b.surveyitemvote_set.length) {\n                        return -1\n                    }\n                    return 1\n                })\n            }\n            this.setState({surveys: surveys, loading: false});\n        })\n        .catch(error => {\n            this.setState({loading: false})\n        })\n    }\n\n\n    reloadNewSurvey = () => {\n        this.setState({survey: {\n            title: '',\n            description: '',\n            image: '',\n            surveyitem_set: [],\n            multi_choice: false,\n            visible: false\n        }, mode: 'create'})\n    }\n\n\n    handleSurveyItemChange(event, index){\n\n        if (event.target.name === \"name\" && event.target.value > 20) {\n            return;\n        }\n\n        const { name, value } = event.target;\n        let surveyitem_set = [...this.state.survey.surveyitem_set];\n        surveyitem_set[index][name] = value;\n        this.setState({survey:{...this.state.survey, surveyitem_set}});\n    }\n\n\n    handleChange(event){\n        if (event.target.name === \"title\" && event.target.value.length > 20) {\n            return;\n        }\n\n        this.setState({\n            survey: {\n                ...this.state.survey,\n                [event.target.name]: event.target.value\n            }\n        })\n    }\n\n\n    handleFileChange(e) {\n        const file = e.target.files[0];\n        const reader = new FileReader();\n        let image = null;\n\n        reader.readAsDataURL(file);\n        reader.onloadend = () => {\n            image = reader.result;\n            this.setState({\n                survey: {\n                    ...this.state.survey,\n                    image: image\n                }\n            })\n        }\n    }\n\n\n    handleItemFileChange(e, index) {\n        const file = e.target.files[0];\n        const reader = new FileReader();\n        let image = null;\n\n        reader.readAsDataURL(file);\n        reader.onloadend = () => {\n            image = reader.result;\n            let surveyitem_set = [...this.state.survey.surveyitem_set];\n            surveyitem_set[index].image = image;\n            this.setState({survey:{...this.state.survey, surveyitem_set}});\n        }\n    }\n\n\n    handleModalClickClose = () => {\n        this.setState({open_modal: false, confirm_modal: false, loading: true})\n        this.loadSurveys();\n        this.reloadNewSurvey();\n    };\n\n\n    handleConfirmModalOpen(survey){\n        this.setState({confirm_modal: true, survey: survey})\n    }\n\n\n    handleModalClickOpen = () => {\n        this.setState({open_modal: true})\n    }\n\n\n    handleCheckChange(event){\n        const multi_choice = this.state.survey.multi_choice;\n        this.setState({\n            survey: {\n                ...this.state.survey,\n                multi_choice: !multi_choice\n            }\n        })\n    }\n\n\n    handleSnackbarClose(){\n\t\tthis.setState({\n\t\t\tsnackbar: {\n                ...this.state.snackbar,\n            \topen: false\n\t\t\t}\n\t\t})\n\t}\n\n\tchangeSnackbarState(open, variant, message){\n\t\tthis.setState({\n\t\t\tsnackbar: {\n\t\t\t\topen: open,\n\t\t\t\tvariant: variant,\n\t\t\t\tmessage: message\n\t\t\t}\n\t\t})\n\t}\n\n    selectSurvey = (survey) => {\n        var request = new XMLHttpRequest();\n        const that = this\n        request.open('GET', config.urls.URL + '/media/' + survey.image, true);\n        request.responseType = 'blob';\n        request.onload = function() {\n            var reader = new FileReader();\n            reader.readAsDataURL(request.response);\n            reader.onload =  function(e){\n                survey.image = reader.result;\n                for (let index = 0; index < survey.surveyitem_set.length; index++) {\n                    survey.surveyitem_set[index].image = config.urls.URL + '/media/' + survey.surveyitem_set[index].image;\n                }\n                that.setState({survey: survey, mode: 'edit'})\n                that.handleModalClickOpen();\n            };\n        };\n        request.send();\n    }\n\n\n    addSurveyItem(){\n        const new_survey_item = {\n            name: '',\n            description: '',\n            image: null,\n            survey: this.state.survey.id\n        }\n        let surveyitem_set = [...this.state.survey.surveyitem_set];\n        surveyitem_set.push(new_survey_item);\n        this.setState({survey:{...this.state.survey, surveyitem_set}});\n    }\n\n\n    changeSurveyVisibility(index){\n        let surveys = [...this.state.surveys];\n        surveys[index].visible = !surveys[index].visible;\n        ajaxPatch('surveys/' + surveys[index].id + '/', {visible: surveys[index].visible}).then((res) => {\n            this.setState({surveys: surveys})\n        })\n    }\n\n\n    saveSurvey(){\n        if(this.state.mode === \"create\"){\n            ajaxPost('surveys/', this.state.survey).then((res) => {\n                this.setState({\n                    survey: {\n                        ...this.state.survey,\n                        id: res.data.id\n                    }\n                })\n                this.changeSnackbarState(true, \"success\", \"Le sondage a été ajouté avec succès.\")\n            })\n            .catch((error) => {\n                if (error.response.status === \"400\") {\n                    this.changeSnackbarState(true, \"error\", \"Tous les champs requis n'ont pas été remplis.\")\n                } else {\n                    this.changeSnackbarState(true, \"error\", \"Une erreur s'est produite.\")\n                }\n            })\n        } else if (this.state.mode === \"edit\"){\n            ajaxPut('surveys/' + this.state.survey.id + '/', this.state.survey).then((res) => {\n                this.setState({\n                    survey: {\n                        ...this.state.survey,\n                        id: res.data.id\n                    }\n                })\n                this.changeSnackbarState(true, \"success\", \"Le sondage a été mis à jour avec succès.\")\n            })\n            .catch((error) => {\n                if (error.response.status === \"400\") {\n                    this.changeSnackbarState(true, \"error\", \"Tous les champs requis n'ont pas été remplis.\")\n                } else {\n                    this.changeSnackbarState(true, \"error\", \"Une erreur s'est produite.\")\n                }\n            })\n        }\n    }\n\n    saveSurveyItem(index){\n        let surveyitem_set = [...this.state.survey.surveyitem_set];\n        if (surveyitem_set[index].id) {\n            // Check si l'image commence par http\n            if (surveyitem_set[index].image.startsWith('http')) {\n                let request = new XMLHttpRequest();\n                request.open('GET', surveyitem_set[index].image, true);\n                request.responseType = 'blob';\n                request.onload = function() {\n                    var reader = new FileReader();\n                    reader.readAsDataURL(request.response);\n                    reader.onload =  function(e){\n                        surveyitem_set[index].image = reader.result;\n                        // Update de l'item\n                        ajaxPut('survey/items/' + surveyitem_set[index].id + '/', surveyitem_set[index]).then((res) => {\n                            this.changeSnackbarState(true, \"success\", \"L'item a été mis à jour avec succès.\")\n                        })\n                        .catch((error) => {\n                            if (error.response.status === \"400\") {\n                                this.changeSnackbarState(true, \"error\", \"Tous les champs requis n'ont pas été remplis.\")\n                            } else {\n                                this.changeSnackbarState(true, \"error\", \"Une erreur s'est produite.\")\n                            }\n                        })\n                    };\n                };\n                request.send();\n            }\n\n        } else {\n            //Création de l'item\n            ajaxPost('survey/items/', surveyitem_set[index]).then((res) => {\n                surveyitem_set[index].id = res.data.id;\n                this.setState({survey:{...this.state.survey, surveyitem_set}, mode:\"edit\"});\n                this.changeSnackbarState(true, \"success\", \"L'item a été ajouté avec succès.\")\n            })\n            .catch((error) => {\n                if (error.response.status === \"400\") {\n                    this.changeSnackbarState(true, \"error\", \"Tous les champs requis n'ont pas été remplis.\")\n                } else {\n                    this.changeSnackbarState(true, \"error\", \"Une erreur s'est produite.\")\n                }\n            })\n        }\n    }\n\n    deleteSurveyItem(index){\n        let surveyitem_set = [...this.state.survey.surveyitem_set];\n        const survey_item_id = surveyitem_set[index].id\n        ajaxDelete('survey/items/' + survey_item_id + '/').then(() => {\n            surveyitem_set = surveyitem_set.filter(s => s.id !== survey_item_id)\n            this.setState({survey:{...this.state.survey, surveyitem_set}});\n            this.changeSnackbarState(true, \"success\", \"L'item a été supprimé avec succès.\")\n        })\n        .catch((error) => {\n            this.changeSnackbarState(true, \"error\", \"Une erreur s'est produite.\")\n        })\n    }\n\n\n    deleteSurvey(survey_id){\n        ajaxGet('surveys/delete/' + survey_id).then(() => {\n            let surveys = this.state.surveys;\n            surveys = surveys.filter(s => s.id !== survey_id)\n            this.setState({surveys: surveys, confirm_modal: false})\n            this.loadHistory();\n            this.changeSnackbarState(true, \"success\", \"Le sondage a été supprimé avec succès.\")\n        })\n        .catch((error) => {\n            this.changeSnackbarState(true, \"error\", \"Une erreur s'est produite.\")\n        })\n        this.reloadNewSurvey();\n    }\n\n    render(){\n\n        const { classes } = this.props;\n        const { surveys, loading, open_modal, survey, mode, confirm_modal, surveys_history, snackbar } = this.state;\n\n        if (loading) {\n            return (\n                <Grid\n                    container\n                    className=\"admin_loader\"\n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                >\n                    <Grid item>\n                        <CircularProgress className={classes.progress} />\n                    </Grid>\n                </Grid>\n            )\n        }\n\n        return (\n            <div className=\"admin_container\">\n\n                {surveys.length === 0 ? (\n                    <React.Fragment>\n                        <Grid\n                            container\n                            direction=\"row\"\n                            justify=\"center\"\n                            alignItems=\"center\"\n                        >\n                            <Typography variant=\"h6\">\n                                Pas de sondages pour le moment.\n                            </Typography>\n                            <br/>\n                        </Grid>\n                        <Grid\n                            container\n                            direction=\"row\"\n                            justify=\"center\"\n                            alignItems=\"center\"\n                        >\n                            <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                className={classes.btn}\n                                color=\"primary\"\n                                onClick={(e) => this.handleModalClickOpen()}\n                            >\n                                Nouveau sondage\n                            </Button>\n                        </Grid>\n                    </React.Fragment>\n                ):(\n                    <div>\n                        <Typography variant=\"h6\" className={classes.subTitle}>\n                            <ChevronRightIcon className={classes.subTitleIcon}/>\n                            Liste des sondages\n                            <Fab\n                                size=\"small\"\n                                color=\"primary\"\n                                className={classes.add_item}\n                                onClick={(e) => this.handleModalClickOpen()}\n                            >\n                                <AddIcon />\n                            </Fab>\n                        </Typography>\n                        <Grid container direction=\"row\">\n                            <Paper className={classes.rootTable}>\n                                <Table size=\"small\">\n                                    <TableBody>\n                                        {surveys.map((survey, survey_index) => (\n                                            <TableRow hover key={survey_index} className={classes.row}>\n                                                <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\n                                                    {survey.title}\n                                                </TableCell>\n                                                <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\n                                                  <Button\n                                                        size=\"small\"\n                                                        variant=\"contained\"\n                                                        margin=\"dense\"\n                                                        className={classes.btn}\n                                                        color=\"primary\"\n                                                        onClick={(e) => this.selectSurvey(survey)}\n                                                    >\n                                                        Consulter\n                                                    </Button>\n                                                    <Button\n                                                        variant=\"contained\"\n                                                        margin=\"dense\"\n                                                        size=\"small\"\n                                                        className={classes.btn}\n                                                        color={survey.visible ? \"secondary\" : \"primary\"}\n                                                        onClick={(e) => this.changeSurveyVisibility(survey_index)}\n                                                    >\n                                                        {survey.visible ? (<span>Désactiver</span>):(<span>Activer</span>)}\n                                                    </Button>\n                                                    <Button\n                                                        size=\"small\"\n                                                        color=\"secondary\"\n                                                        variant=\"contained\"\n                                                        margin=\"dense\"\n                                                        className={classes.btn}\n                                                        onClick={() => this.handleConfirmModalOpen(survey)}\n                                                    >\n                                                        Supprimer\n                                                    </Button>\n                                                </TableCell>\n                                            </TableRow>\n                                        ))}\n                                    </TableBody>\n                                </Table>\n                            </Paper>\n                        </Grid>\n                    </div>\n                )}\n                <Grid container direction=\"row\">\n                    <Typography variant=\"h6\" className={classes.subTitle}>\n                        <ChevronRightIcon className={classes.subTitleIcon}/>\n                        Sondages en cours\n                    </Typography>\n                </Grid>\n                <Paper className={classes.rootTable}>\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell className={classes.cell}>\n                                    Nom\n                                </TableCell>\n                                <TableCell className={classes.cell}>\n                                    Résultats\n                                </TableCell>\n                                <TableCell className={classes.cell}>\n                                    Nombre de votes\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {surveys.map((row, index) => (\n                                <TableRow hover key={index} className={classes.row}>\n                                    <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\n                                        {row.description}\n                                    </TableCell>\n                                    <TableCell component=\"th\" scope=\"row\" className={classes.cell} style={{minWidth: 300}}>\n                                        <ul>\n                                            {row.surveyitem_set.map((item_row, item_index) => (\n                                                <li key={item_index}><strong>{item_row.name}:</strong> {((item_row.surveyitemvote_set.length/row.total_votes)*100).toFixed(1)}%</li>\n                                            ))}\n                                        </ul>\n                                    </TableCell>\n                                    <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\n                                        {row.total_votes}\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </Paper>\n                <Grid container direction=\"row\">\n                    <Typography variant=\"h6\" className={classes.subTitle}>\n                        <ChevronRightIcon className={classes.subTitleIcon}/>\n                        Historique\n                    </Typography>\n                </Grid>\n                <Paper className={classes.rootTable}>\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell className={classes.cell}>\n                                    Nom\n                                </TableCell>\n                                <TableCell className={classes.cell}>\n                                    Résultats\n                                </TableCell>\n                                <TableCell className={classes.cell}>\n                                    Nombre de votes\n                                </TableCell>\n                                <TableCell className={classes.cell}>\n                                    Action\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {surveys_history.map((row, index) => (\n                                <TableRow hover key={index} className={classes.row}>\n                                    <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\n                                        {row.description}\n                                    </TableCell>\n                                    <TableCell component=\"th\" scope=\"row\" className={classes.cell} style={{minWidth: 300}}>\n                                        <ul>\n                                            {row.surveyitem_set.map((item_row, item_index) => (\n                                                <li key={item_index}><strong>{item_row.name}:</strong> {((item_row.votes/row.total_votes)*100).toFixed(1)}%</li>\n                                            ))}\n                                        </ul>\n                                    </TableCell>\n                                    <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\n                                        {row.total_votes}\n                                    </TableCell>\n                                        <TableCell className={classes.cell}>\n                                            <Button\n                                                size=\"small\"\n                                                color=\"secondary\"\n                                                variant=\"contained\"\n                                                margin=\"dense\"\n                                                className={classes.btn}\n                                                onClick={() => this.handleConfirmModalOpen(row)}\n                                            >\n                                                Supprimer\n                                            </Button>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </Paper>\n                <Dialog\n                    onClose={this.handleModalClickClose}\n                    open={open_modal}\n                    maxWidth=\"lg\"\n                    width=\"lg\"\n                    scroll=\"body\"\n                >\n                    <DialogTitle onClose={this.handleModalClickClose}>\n                        {mode === \"edit\"? (\n                            <span>Sondage : {survey.title}</span>\n                        ):\n                        (\n                            <span>Ajouter un nouveau sondage</span>\n                        )}\n                    </DialogTitle>\n                    <DialogContent>\n                        <CardMedia\n                            className={classes.media}\n                            image={survey.image ? survey.image : '/images/default_image.png'}\n                        />\n                        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                            <input\n                                accept=\"image/*\"\n                                className={classes.input_file}\n                                id=\"contained-button-file\"\n                                type=\"file\"\n                                onChange={(event) => this.handleFileChange(event)}\n                                name=\"image\"\n                            />\n                            <label htmlFor=\"contained-button-file\">\n                                <Button\n                                    variant=\"contained\"\n                                    component=\"span\"\n                                    className={classes.upload_button}\n                                    name=\"image\"\n                                >\n                                    Image\n                                </Button>\n                            </label>\n                        </Grid>\n                        <Grid container direction=\"row\">\n                            <TextField\n                                label=\"Titre\"\n                                className={classes.textField}\n                                value={survey.title}\n                                onChange={this.handleChange}\n                                name=\"title\"\n                                fullWidth\n                                margin=\"dense\"\n                                variant=\"outlined\"\n                            />\n                            <TextField\n                                label=\"Description\"\n                                className={classes.textField}\n                                value={survey.description}\n                                onChange={this.handleChange}\n                                name=\"description\"\n                                fullWidth\n                                margin=\"dense\"\n                                variant=\"outlined\"\n                                multiline\n                                rows=\"3\"\n                            />\n                        </Grid>\n                        <Grid container direction=\"row\">\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        checked={survey.multi_choice}\n                                        onChange={() => this.handleCheckChange()}\n                                        color=\"primary\"\n                                    />\n                                }\n                                label=\"Choix multiple ?\"\n                            />\n                        </Grid>\n                        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                            <Button\n                                onClick={() => this.saveSurvey()}\n                                variant=\"contained\"\n                                color=\"primary\"\n                                margin=\"dense\"\n                                size=\"small\"\n                            >\n                                Enregistrer\n                            </Button>\n                        </Grid>\n                        {survey.id &&\n                            <React.Fragment>\n                                <Typography component=\"h3\" className={classes.modal_title}>\n                                    Items\n                                    <Button\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        margin=\"dense\"\n                                        size=\"small\"\n                                        className={classes.add_item}\n                                        onClick={this.addSurveyItem}\n                                    >\n                                        Nouveau\n                                    </Button>\n                                </Typography>\n                                <div className={classes.root_items}>\n                                    <GridList className={classes.gridList} cols={2.5}>\n                                        {survey.surveyitem_set.map((item, item_index) => (\n                                            <GridListTile key={item_index} style={{height: '100%', minWidth: 250}}>\n                                                <Card className={classes.card}>\n                                                    <CardActionArea>\n                                                        <CardMedia\n                                                            className={classes.media}\n                                                            image={item.image ? item.image : '/images/default_image.png'}\n                                                        />\n                                                        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                                                            <input\n                                                                accept=\"image/*\"\n                                                                className={classes.input_file}\n                                                                id={item_index}\n                                                                type=\"file\"\n                                                                onChange={(event) => this.handleItemFileChange(event, item_index)}\n                                                                name=\"image\"\n                                                            />\n                                                            <label htmlFor={item_index}>\n                                                                <Button\n                                                                    variant=\"contained\"\n                                                                    component=\"span\"\n                                                                    className={classes.upload_button}\n                                                                    onChange={(event) => this.handleItemFileChange(event, item)}\n                                                                >\n                                                                    Image\n                                                                </Button>\n                                                            </label>\n                                                        </Grid>\n                                                        <Grid container direction=\"row\">\n                                                            <TextField\n                                                                label=\"Titre\"\n                                                                className={classes.textField}\n                                                                value={item.name}\n                                                                onChange={(event) => this.handleSurveyItemChange(event, item_index)}\n                                                                name=\"name\"\n                                                                fullWidth\n                                                                margin=\"dense\"\n                                                                variant=\"outlined\"\n                                                            />\n                                                            <TextField\n                                                                label=\"Description (optionnelle)\"\n                                                                className={classes.textField}\n                                                                value={item.description}\n                                                                onChange={(event) => this.handleSurveyItemChange(event, item_index)}\n                                                                name=\"description\"\n                                                                fullWidth\n                                                                margin=\"dense\"\n                                                                variant=\"outlined\"\n                                                                multiline\n                                                                rows=\"3\"\n                                                            />\n                                                        </Grid>\n                                                        { survey.total_votes > 0 && item.surveyitemvote_set &&\n                                                            <Grid container direction=\"row\">\n                                                                <Typography variant=\"body1\" className={classes.vote_typo}>\n                                                                    Vote : {item.surveyitemvote_set.length}/{survey.total_votes} ({((item.surveyitemvote_set.length/survey.total_votes)*100).toFixed(2)}%)\n                                                                </Typography>\n                                                            </Grid>\n                                                        }\n                                                    </CardActionArea>\n                                                    <CardActions>\n                                                        {item.id &&\n                                                            <Button\n                                                                onClick={() => this.deleteSurveyItem(item_index)}\n                                                                color=\"secondary\"\n                                                                variant=\"contained\"\n                                                                margin=\"dense\"\n                                                                size=\"small\"\n                                                            >\n                                                                Supprimer\n                                                            </Button>\n                                                        }\n                                                        <Button\n                                                            onClick={() => this.saveSurveyItem(item_index)}\n                                                            color=\"primary\"\n                                                            variant=\"contained\"\n                                                            margin=\"dense\"\n                                                            size=\"small\"\n                                                        >\n                                                            Enregistrer\n                                                        </Button>\n                                                    </CardActions>\n                                                </Card>\n                                            </GridListTile>\n                                        ))}\n                                    </GridList>\n                                </div>\n                            </React.Fragment>\n                        }\n                    </DialogContent>\n                </Dialog>\n                <Dialog\n                    open={confirm_modal}\n                    onClose={() => this.handleModalClickClose()}\n                >\n                    <DialogTitle>{\"Suppresion: \" + survey.title}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            Veux-tu vraiment supprimer ce sondage ?\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button\n                            color=\"secondary\"\n                            variant=\"contained\"\n                            margin=\"dense\"\n                            size=\"small\"\n                            className={classes.btn}\n                            onClick={(e) => this.deleteSurvey(survey.id)}\n                        >\n                            Supprimer\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <SnackbarComponent\n                    open={snackbar.open}\n                    variant={snackbar.variant}\n                    message={snackbar.message}\n                    closeSnackbar={\n                        ()=>{\n                            this.setState({\n                                snackbar: {\n                                    ...this.state.snackbar,\n                                    open: false,\n                                }\n                            })\n                        }\n                    }\n                />\n            </div>\n        );\n    };\n\n}\n\nconst styles = theme => ({\n    loader: {\n        marginTop: 200,\n    },\n    container: {\n        padding: 20,\n        margin: 30,\n        marginTop: 100,\n        border: \"1.5px solid #B22132\",\n    },\n    rootTable : {\n        width: '100%',\n        overflowX: 'auto'\n    },\n    btn : {\n        margin: 5,\n    },\n    subTitle: {\n\t\tmarginTop: 30,\n\t\tmarginBottom: 10,\n\t},\n    title_btn: {\n        marginLeft: 20,\n    },\n    subTitleIcon: {\n        marginRight: 8,\n        paddingTop: 5,\n    },\n    generate_btn: {\n        margin: 20,\n        marginTop: 30,\n    },\n    input_file:{\n        display: 'None',\n    },\n    upload_button : {\n        marginTop: 15\n    },\n    card: {\n        maxWidth: 345,\n    },\n    media: {\n        height: 150,\n        backgroundSize: 'contain',\n    },\n    add_item : {\n        marginLeft: 10,\n    },\n    root_items: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        overflow: 'hidden',\n        backgroundColor: theme.palette.background.paper,\n    },\n    gridList: {\n        flexWrap: 'nowrap',\n        transform: 'translateZ(0)',\n    },\n    title: {\n        color: theme.palette.primary.light,\n    },\n    titleBar: {\n        background:\n            'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n    },\n    modal:{\n        overflowY: 'scroll'\n    },\n    modal_title: {\n        margin: 15\n    },\n    vote_typo : {\n        marginTop: 10,\n        marginBottom: 10,\n    }\n});\n\nexport default withStyles (styles) (PollsManagement)\n","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { ajaxDelete, ajaxGet, ajaxPost, ajaxPatch } from '../../../utils/Ajax';\nimport { ListItem, ListItemText, Paper } from '@material-ui/core';\nimport List from '@material-ui/core/List';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { format } from 'date-fns';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport Table from '@material-ui/core/Table';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport CardMedia from '@material-ui/core/CardMedia';\n\nclass Newsletter extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            newsletter: [],\n            loading: true,\n            edit: false,\n            newNews: {\n                title: '',\n                datePublication: '',\n                content: '',\n                image: null,\n            },\n            editContent: {\n                title: '',\n                author: '',\n                dateCreation: new Date(),\n                datePub: this.formatDate(new Date()),\n                id: 0,\n                content: '',\n                image: null,\n            },\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.saveNews = this.saveNews.bind(this);\n        this.deleteNews = this.deleteNews.bind(this);\n        this.editNews = this.editNews.bind(this);\n        this.handleChangeEdit = this.handleChangeEdit.bind(this);\n        this.updateNews = this.updateNews.bind(this);\n        this.handleFileChangeNew = this.handleFileChangeNew.bind(this);\n        this.handleFileChangeEdit = this.handleFileChangeEdit.bind(this);\n        this.fileUpload = this.fileUpload.bind(this);\n    }\n\n    componentDidMount() {\n        this.loadNewsletter();\n    }\n\n    deleteNews(id) {\n        ajaxDelete('newsletter/?id=' + id).then((res) => {\n            this.loadNewsletter();\n        });\n    }\n\n    loadNewsletter() {\n        ajaxGet('newsletter').then((res) => {\n            let news = res.data;\n            for (let i = 0; i < news.length; i++) {\n                news[i].publication_date = new Date(news[i].publication_date);\n                news[i].creation_date = new Date(news[i].creation_date);\n            }\n            news = news.sort(function (a, b) {\n                if (a.publication_date < b.publication_date) {\n                    return 1;\n                }\n                return -1;\n            });\n            this.setState({ newsletter: news });\n            this.setState({ loading: false });\n        });\n    }\n\n    saveNews() {\n        ajaxPost('newsletter/', {\n            title: this.state.newNews.title,\n            publication_date: new Date(this.state.newNews.datePublication),\n            content: this.state.newNews.content,\n            author_id: localStorage.getItem('login'),\n            image: null,\n        }).then((res) => {\n            this.fileUpload(this.state.newNews.new_image, res.data.id);\n            this.setState({\n                newNews: {\n                    title: '',\n                    datePublication: '',\n                    content: '',\n                    image: null,\n                    new_image: null,\n                },\n            });\n\n            this.loadNewsletter();\n        });\n    }\n\n    handleChange(event) {\n        this.setState({\n            newNews: {\n                ...this.state.newNews,\n                [event.target.name]: event.target.value,\n            },\n        });\n    }\n\n    handleFileChangeNew(e) {\n        const file = e.target.files[0];\n        const reader = new FileReader();\n        let media = null;\n        reader.readAsDataURL(file);\n        reader.onloadend = () => {\n            media = reader.result;\n            this.setState({\n                newNews: {\n                    ...this.state.newNews,\n                    image: media,\n                    new_image: file,\n                },\n            });\n        };\n    }\n\n    handleFileChangeEdit(e) {\n        const file = e.target.files[0];\n        const reader = new FileReader();\n        let media = null;\n        reader.readAsDataURL(file);\n        reader.onloadend = () => {\n            media = reader.result;\n            this.setState({\n                editContent: {\n                    ...this.state.editContent,\n                    image: media,\n                    new_image: file,\n                },\n            });\n        };\n    }\n\n    async fileUpload(file, id) {\n        const fd = new FormData();\n        fd.append('image', file);\n        ajaxPatch('newsletter/' + id + '/', fd)\n            .then(() => {\n                this.handleModalClickClose();\n            })\n            .catch((errors) => {});\n    }\n\n    handleChangeEdit(event) {\n        this.setState({\n            editContent: {\n                ...this.state.editContent,\n                [event.target.name]: event.target.value,\n            },\n        });\n    }\n\n    formatDate(date) {\n        const year = date.getFullYear();\n        const month = ('0' + (date.getMonth() + 1)).slice(-2);\n        const day = ('0' + date.getDate()).slice(-2);\n        const hour = date.getHours();\n        const min = date.getMinutes();\n        return year + '-' + month + '-' + day + 'T' + hour + ':' + min;\n    }\n\n    editNews(index) {\n        this.loadNewsletter();\n        this.setState({ edit: true });\n        let tempPub = new Date(this.state.newsletter[index].publication_date);\n        let tempCrea = new Date(this.state.newsletter[index].creation_date);\n        this.setState({\n            editContent: {\n                title: this.state.newsletter[index].title,\n                author: this.state.newsletter[index].author_id,\n                dateCreation: this.formatDate(tempCrea),\n                datePub: this.formatDate(tempPub),\n                id: this.state.newsletter[index].id,\n                content: this.state.newsletter[index].content,\n                image: this.state.newsletter[index].image,\n                new_image: this.state.newsletter[index].image,\n            },\n        });\n    }\n\n    updateNews(id) {\n        ajaxPost('newsletter/?id=' + id, {\n            title: this.state.editContent.title,\n            publication_date: new Date(this.state.editContent.datePub),\n            content: this.state.editContent.content,\n        }).then(() => {\n            this.fileUpload(this.state.editContent.new_image, id);\n            this.handleModalClickClose();\n            this.loadNewsletter();\n        });\n    }\n\n    handleModalClickClose() {\n        this.setState({ edit: false });\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        const { newsletter, loading, newNews, edit, editContent } = this.state;\n\n        if (loading) {\n            return (\n                <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                    <Grid item>\n                        <CircularProgress className={classes.progress} />\n                    </Grid>\n                </Grid>\n            );\n        }\n\n        return (\n            <div className=\"admin_container\">\n                <Grid container direction=\"row\">\n                    <Typography variant=\"h6\">\n                        <ChevronRightIcon />\n                        Ajouter une newsletter\n                    </Typography>\n                    <Paper className={classes.paper_box}>\n                        <Table>\n                            <TableRow>\n                                <TableCell className={classes.cell}>\n                                    <TextField\n                                        label=\"Titre\"\n                                        className={classes.textField}\n                                        name=\"title\"\n                                        value={newNews.title}\n                                        onChange={this.handleChange}\n                                        autoComplete=\"off\"\n                                        margin=\"dense\"\n                                        fullWidth\n                                        variant=\"outlined\"\n                                        size=\"small\"\n                                        InputProps={{ style: { fontSize: 12 } }}\n                                    />\n                                </TableCell>\n                                <TableCell className={classes.cell}>\n                                    <TextField\n                                        id=\"datetime-local\"\n                                        label=\"Date de publication\"\n                                        type=\"datetime-local\"\n                                        name=\"datePublication\"\n                                        value={newNews.datePublication}\n                                        className={classes.textField}\n                                        onChange={this.handleChange}\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                    />\n                                </TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell className={classes.cell}>\n                                    <TextField\n                                        label=\"Content\"\n                                        multiline\n                                        className={classes.textField}\n                                        name=\"content\"\n                                        value={newNews.content}\n                                        onChange={this.handleChange}\n                                        autoComplete=\"off\"\n                                        margin=\"dense\"\n                                        fullWidth\n                                        variant=\"outlined\"\n                                        size=\"small\"\n                                        InputProps={{ style: { fontSize: 12 } }}\n                                    />\n                                </TableCell>\n                                {this.state.newNews.image !== null ? (\n                                    <TableCell className={classes.cell}>\n                                        <img\n                                            src={this.state.newNews.image}\n                                            style={{ maxWidth: '100%', maxHeight: '100%' }}\n                                        />\n                                    </TableCell>\n                                ) : (\n                                    <></>\n                                )}\n                                <TableCell className={classes.cell}>\n                                    <input\n                                        accept=\"image/*;\"\n                                        style={{ display: 'none' }}\n                                        id=\"contained-button-file-new\"\n                                        type=\"file\"\n                                        name=\"newImage\"\n                                        onChange={this.handleFileChangeNew}\n                                    />\n                                    <label htmlFor=\"contained-button-file-new\">\n                                        <Button\n                                            variant=\"contained\"\n                                            component=\"span\"\n                                            className={styles.upload_button}\n                                            name=\"media\"\n                                            color=\"secondary\"\n                                        >\n                                            Photo\n                                        </Button>\n                                    </label>\n                                </TableCell>\n                            </TableRow>\n                        </Table>\n                        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                            <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                color=\"primary\"\n                                onClick={this.saveNews}\n                                className={classes.btnAddNews}\n                            >\n                                Ajouter\n                            </Button>\n                        </Grid>\n                    </Paper>\n                </Grid>\n                <Grid container direction=\"row\">\n                    <Typography variant=\"h6\" className={classes.subTitle}>\n                        <ChevronRightIcon className={classes.titleIcon} />\n                        Liste des newsletter\n                    </Typography>\n                    <Paper className={classes.paper_box}>\n                        <List className={classes.listPerms}>\n                            {newsletter.map((element, index) => {\n                                let pub = format(element.publication_date, 'MMMM do, yyyy H:mma');\n                                return (\n                                    <React.Fragment key={index}>\n                                        <ListItem\n                                            className={classes.suggestionItem}\n                                            component=\"div\"\n                                        >\n                                            <ListItemText\n                                                primary={\n                                                    element.title +\n                                                    ' - écrit par ' +\n                                                    element.author_id\n                                                }\n                                                secondary={'Publication : ' + pub + ' '}\n                                            />\n                                            <Button\n                                                variant=\"contained\"\n                                                size=\"small\"\n                                                color=\"primary\"\n                                                onClick={() => this.editNews(index)}\n                                                className={classes.btnAddNews}\n                                            >\n                                                Editer\n                                            </Button>\n                                            <Button\n                                                variant=\"contained\"\n                                                size=\"small\"\n                                                className={classes.btnAddNews}\n                                                color=\"secondary\"\n                                                onClick={() => this.deleteNews(element.id)}\n                                            >\n                                                Supprimer\n                                            </Button>\n                                        </ListItem>\n                                    </React.Fragment>\n                                );\n                            })}\n                        </List>\n                    </Paper>\n                </Grid>\n                <Dialog open={edit} onClose={() => this.handleModalClickClose()}>\n                    <DialogTitle>\n                        {'Crée le: ' + editContent.dateCreation + ' par ' + editContent.author}\n                    </DialogTitle>\n                    <DialogContent>\n                        <Table>\n                            <TableRow>\n                                <TableCell className={classes.cell}>\n                                    <TextField\n                                        label=\"Titre\"\n                                        className={classes.textField}\n                                        value={editContent.title}\n                                        onChange={this.handleChangeEdit}\n                                        name=\"title\"\n                                        fullWidth\n                                        margin=\"dense\"\n                                        variant=\"outlined\"\n                                    />\n                                </TableCell>\n                                <TableCell className={classes.cell}>\n                                    <TextField\n                                        id=\"datetime-local\"\n                                        label=\"Date de publication\"\n                                        type=\"datetime-local\"\n                                        name=\"datePub\"\n                                        value={editContent.datePub}\n                                        className={classes.textField}\n                                        onChange={this.handleChangeEdit}\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                    />\n                                </TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell className={classes.cell}>\n                                    <TextField\n                                        label=\"Content\"\n                                        multiline\n                                        className={classes.textField}\n                                        value={editContent.content}\n                                        onChange={this.handleChangeEdit}\n                                        name=\"content\"\n                                        fullWidth\n                                        margin=\"dense\"\n                                        variant=\"outlined\"\n                                    />\n                                </TableCell>\n                                {this.state.editContent.image !== null ? (\n                                    <TableCell className={classes.cell}>\n                                        <CardMedia\n                                            className={classes.media}\n                                            image={\n                                                editContent.image\n                                                    ? 'kraken.picasso-utc.fr' + editContent.image\n                                                    : ''\n                                            }\n                                            style={{ width: '100%' }}\n                                        />\n                                    </TableCell>\n                                ) : (\n                                    <></>\n                                )}\n                                <TableCell className={classes.cell}>\n                                    <input\n                                        accept=\"image/*\"\n                                        style={{ display: 'none' }}\n                                        id=\"contained-button-file-edit\"\n                                        type=\"file\"\n                                        name=\"editImage\"\n                                        onChange={this.handleFileChangeEdit}\n                                    />\n                                    <label htmlFor=\"contained-button-file-edit\">\n                                        <Button\n                                            variant=\"contained\"\n                                            component=\"span\"\n                                            className={styles.upload_button}\n                                            name=\"media\"\n                                            color=\"secondary\"\n                                        >\n                                            Photo\n                                        </Button>\n                                    </label>\n                                </TableCell>\n                            </TableRow>\n                        </Table>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button\n                            color=\"secondary\"\n                            variant=\"contained\"\n                            margin=\"dense\"\n                            size=\"small\"\n                            className={classes.btn}\n                            onClick={(e) => this.updateNews(editContent.id)}\n                        >\n                            Sauvegarder\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nconst styles = (theme) => ({\n    container: {\n        padding: 20,\n        margin: 30,\n        marginTop: 100,\n        border: '1.5px solid #B22132',\n    },\n    paper_box: {\n        width: '100%',\n        overflowX: 'auto',\n        marginBottom: 20,\n    },\n    listPerms: {\n        width: '100%',\n        height: 300,\n        overflowY: 'scroll',\n    },\n    suggestionItem: {\n        paddingLeft: 15,\n        paddingBottom: 0,\n        paddingTop: 0,\n        fontSize: 14,\n        minHeight: 30,\n    },\n    textField: {\n        width: '100%',\n        fontSize: 12,\n    },\n    textFieldContainer: {\n        paddingLeft: 10,\n        paddingRight: 10,\n    },\n    container_createNews: {\n        justifyContent: 'space-around',\n    },\n    btnAddNews: {\n        marginTop: 10,\n        marginBottom: 20,\n        marginRight: 5,\n        marginLeft: 5,\n    },\n    markdownEdit: {\n        marginTop: 10,\n        width: '100%',\n    },\n    cell: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    media: {\n        height: 150,\n        backgroundSize: 'contain',\n    },\n});\n\nexport default withStyles(styles)(Newsletter);\n","import React, { useEffect, useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { ajaxGet, ajaxPost, ajaxPatch } from '../../../utils/Ajax';\nimport { Paper } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst BeerInfo = () => {\n    const [beerInfo, setBeerInfo] = useState([]);\n    const [beerNames, setBeerNames] = useState({});\n    const [edit, setEdit] = useState(false);\n    const [infoToEdit, setInfoToEdit] = useState({});\n    const [create, setCreate] = useState(false);\n    const [reload, setReload] = useState(false);\n    const [listOfBeersToCreate, setListOfBeersToCreate] = useState([]);\n\n    useEffect(() => {\n        ajaxGet('beer_info').then((res) => {\n            const info = res.data;\n            info.sort((a, b) => (a.weez_id > b.weez_id ? 1 : -1));\n            ajaxGet('payutc/public/articles').then((res) => {\n                let products = res.data;\n                let names = {};\n                products.map((category, index) => {\n                    if (category.name === 'Pressions' || category.name === 'Bouteilles') {\n                        category.products.map((beer, index) => {\n                            names[beer.id] = beer.name;\n                        });\n                    }\n                });\n                setBeerNames(names);\n                let infoAfficher = [];\n                for (let i = 0; i < info.length; i++) {\n                    if (names[info[i].weez_id] !== undefined) {\n                        infoAfficher.push({ ...info[i], name: names[info[i].weez_id] });\n                    }\n                }\n                setBeerInfo(infoAfficher);\n            });\n        });\n    }, [reload]);\n\n    const handleOpenCreate = () => {\n        var tempDict = { ...beerNames };\n        let listOfBeers = [];\n        beerInfo.map((beer) => delete tempDict[beer.weez_id]);\n        {\n            Object.entries(tempDict).forEach(([key, value]) => {\n                listOfBeers.push({ weez_id: key, name: value });\n            });\n        }\n        if (listOfBeers.length != 0) {\n            setListOfBeersToCreate(listOfBeers);\n            setCreate(!create);\n        } else {\n            alert(\"Y'a plus de bières qui n'ont pas de description\");\n        }\n    };\n\n    const handleChangeString = (event) => {\n        let editedInfo = infoToEdit;\n        editedInfo[event.target.id] = event.target.value;\n        setInfoToEdit(editedInfo);\n    };\n\n    const handleChangeBeer = (event) => {\n        setInfoToEdit({\n            ...infoToEdit,\n            weez_id: parseInt(event.target.value, 10),\n        });\n    };\n    const handleChangeInt = (event) => {\n        let editedInfo = infoToEdit;\n        if (event.target.value <= 5 && event.target.value >= 0) {\n            editedInfo[event.target.id] = parseInt(event.target.value, 10);\n        } else {\n            event.target.value = 0;\n        }\n        setInfoToEdit(editedInfo);\n    };\n\n    const handleFileChange = (event) => {\n        const file = event.target.files[0];\n        const reader = new FileReader();\n        let media = null;\n        reader.readAsDataURL(file);\n        reader.onloadend = () => {\n            media = reader.result;\n            setInfoToEdit({\n                ...infoToEdit,\n                logo: media,\n                new_logo: file,\n            });\n        };\n    };\n\n    const saveInfo = (info) => {\n        const ajax_info = {\n            weez_id: info.weez_id,\n            amertume: info.amertume,\n            fruite: info.fruite,\n            acidite: info.acidite,\n            sucre: info.sucre,\n            description: info.description,\n        };\n        if (create) {\n            ajax_info.logo = null;\n            ajaxPost('beer_info/', ajax_info)\n                .then((res) => {\n                    setInfoToEdit({ ...infoToEdit, id: res.data.id });\n                    setEdit(!edit);\n                    fileUpload(info.new_logo, res.data.id);\n                })\n                .catch((error) => {\n                    console.log(error);\n                });\n        } else if (edit) {\n            ajaxPatch('beer_info/' + info.id + '/', ajax_info)\n                .then((res) => {\n                    if (info.new_logo) {\n                        fileUpload(info.new_logo, info.id);\n                    } else {\n                        handleModalClickClose();\n                    }\n                })\n                .catch((error) => {\n                    console.log(error);\n                });\n        }\n    };\n\n    const fileUpload = async (file, id) => {\n        const fd = new FormData();\n        fd.append('logo', file);\n        ajaxPatch('beer_info/' + id + '/', fd)\n            .then(() => {\n                handleModalClickClose();\n            })\n            .catch((errors) => {});\n    };\n\n    const handleModalClickClose = () => {\n        setEdit(false);\n        setCreate(false);\n        setReload(!reload);\n        setInfoToEdit({});\n    };\n\n    return (\n        <div className=\"admin_container\">\n            <Grid container direction=\"column\">\n                <Grid container direction=\"row\" style={{ marginBottom: 10 }}>\n                    <Grid item xs={10}>\n                        <Typography variant=\"h6\">\n                            <ChevronRightIcon />\n                            Ajouter des Infos sur des Bières\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={2}>\n                        <Button\n                            variant=\"contained\"\n                            size=\"small\"\n                            color=\"primary\"\n                            className={styles.btnAddNews}\n                            onClick={() => {\n                                handleOpenCreate();\n                            }}\n                        >\n                            Ajouter Une Bière\n                        </Button>\n                    </Grid>\n                </Grid>\n                <Paper className={styles.paper_box}>\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell className={styles.cellLeft}>Nom de la bière</TableCell>\n                                <TableCell className={styles.cell}>Amertume</TableCell>\n                                <TableCell className={styles.cell}>Fruité</TableCell>\n                                <TableCell className={styles.cell}>Acidité</TableCell>\n                                <TableCell className={styles.cell}>Sucré</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {beerInfo.map((beer, index) => (\n                                <TableRow key={index}>\n                                    <TableCell className={styles.cellLeft}>{beer.name}</TableCell>\n                                    <TableCell className={styles.cell}>{beer.amertume}</TableCell>\n                                    <TableCell className={styles.cell}>{beer.fruite}</TableCell>\n                                    <TableCell className={styles.cell}>{beer.acidite}</TableCell>\n                                    <TableCell className={styles.cell}>{beer.sucre}</TableCell>\n                                    <TableCell>\n                                        <Button\n                                            variant=\"contained\"\n                                            size=\"small\"\n                                            color=\"primary\"\n                                            className={styles.btnAddNews}\n                                            onClick={() => {\n                                                setEdit(!edit);\n                                                setInfoToEdit({\n                                                    id: beer.id,\n                                                    name: beer.name,\n                                                    weez_id: beer.weez_id,\n                                                    amertume: beer.amertume,\n                                                    fruite: beer.fruite,\n                                                    acidite: beer.acidite,\n                                                    sucre: beer.sucre,\n                                                    description: beer.description,\n                                                    logo: beer.logo,\n                                                });\n                                            }}\n                                        >\n                                            Editer\n                                        </Button>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </Paper>\n            </Grid>\n\n            <Dialog open={edit} onClose={() => setEdit(!edit)}>\n                <DialogTitle>{'Modification des Infos sur la ' + infoToEdit.name}</DialogTitle>\n                <DialogContent>\n                    <Table>\n                        <TableRow>\n                            <TableCell>Amertume:</TableCell>\n                            <TableCell>\n                                <TextField\n                                    type=\"number\"\n                                    InputProps={{\n                                        inputProps: {\n                                            max: 5,\n                                            min: 0,\n                                        },\n                                    }}\n                                    id=\"amertume\"\n                                    fullWidth\n                                    defaultValue={infoToEdit.amertume}\n                                    variant=\"outlined\"\n                                    onChange={handleChangeInt}\n                                />\n                            </TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell>Fruité:</TableCell>\n                            <TableCell>\n                                <TextField\n                                    type=\"number\"\n                                    InputProps={{\n                                        inputProps: {\n                                            max: 5,\n                                            min: 0,\n                                        },\n                                    }}\n                                    id=\"fruite\"\n                                    fullWidth\n                                    defaultValue={infoToEdit.fruite}\n                                    variant=\"outlined\"\n                                    onChange={handleChangeInt}\n                                />\n                            </TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell>Acidité:</TableCell>\n                            <TableCell>\n                                <TextField\n                                    type=\"number\"\n                                    InputProps={{\n                                        inputProps: {\n                                            max: 5,\n                                            min: 0,\n                                        },\n                                    }}\n                                    id=\"acidite\"\n                                    fullWidth\n                                    defaultValue={infoToEdit.acidite}\n                                    variant=\"outlined\"\n                                    onChange={handleChangeInt}\n                                />\n                            </TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell>Sucré:</TableCell>\n                            <TableCell>\n                                <TextField\n                                    type=\"number\"\n                                    InputProps={{\n                                        inputProps: {\n                                            max: 5,\n                                            min: 0,\n                                        },\n                                    }}\n                                    id=\"sucre\"\n                                    fullWidth\n                                    defaultValue={infoToEdit.sucre}\n                                    variant=\"outlined\"\n                                    onChange={handleChangeInt}\n                                />\n                            </TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell>Description:</TableCell>\n                            <TableCell>\n                                <TextField\n                                    id=\"description\"\n                                    fullWidth\n                                    variant=\"outlined\"\n                                    multiline\n                                    defaultValue={infoToEdit.description}\n                                    onChange={handleChangeString}\n                                />\n                            </TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell>Logo:</TableCell>\n                            <TableCell>\n                                <img\n                                    src={infoToEdit.logo}\n                                    style={{ maxWidth: '100%', maxHeight: '100%' }}\n                                />\n                            </TableCell>\n                            <TableCell>\n                                <input\n                                    accept=\"image/*;video/*\"\n                                    style={{ display: 'none' }}\n                                    id=\"contained-button-file\"\n                                    type=\"file\"\n                                    onChange={handleFileChange}\n                                    name=\"media\"\n                                />\n                                <label htmlFor=\"contained-button-file\">\n                                    <Button\n                                        variant=\"contained\"\n                                        component=\"span\"\n                                        className={styles.upload_button}\n                                        name=\"media\"\n                                    >\n                                        Média\n                                    </Button>\n                                </label>\n                            </TableCell>\n                        </TableRow>\n                    </Table>\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        color=\"secondary\"\n                        variant=\"contained\"\n                        margin=\"dense\"\n                        size=\"small\"\n                        className={styles.btnAddNews}\n                        onClick={() => saveInfo(infoToEdit)}\n                    >\n                        Sauvegarder\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            <Dialog open={create} onClose={() => setCreate(!create)}>\n                <DialogTitle>Creation d'Info sur les bières</DialogTitle>\n                <DialogContent>\n                    <Table>\n                        <TableRow>\n                            <TableCell>Chosisez une bière</TableCell>\n                            <TableCell>\n                                <TextField\n                                    select\n                                    fullWidth\n                                    autoComplete=\"off\"\n                                    variant=\"outlined\"\n                                    onChange={handleChangeBeer}\n                                >\n                                    {listOfBeersToCreate.map((beer) => (\n                                        <MenuItem key={beer.weez_id} value={beer.weez_id}>\n                                            {beer.name}\n                                        </MenuItem>\n                                    ))}\n                                </TextField>\n                            </TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell>Amertume:</TableCell>\n                            <TableCell>\n                                <TextField\n                                    type=\"number\"\n                                    InputProps={{\n                                        inputProps: {\n                                            max: 5,\n                                            min: 0,\n                                        },\n                                    }}\n                                    id=\"amertume\"\n                                    fullWidth\n                                    variant=\"outlined\"\n                                    onChange={handleChangeInt}\n                                />\n                            </TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell>Fruité:</TableCell>\n                            <TableCell>\n                                <TextField\n                                    type=\"number\"\n                                    InputProps={{\n                                        inputProps: {\n                                            max: 5,\n                                            min: 0,\n                                        },\n                                    }}\n                                    id=\"fruite\"\n                                    fullWidth\n                                    variant=\"outlined\"\n                                    onChange={handleChangeInt}\n                                />\n                            </TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell>Acidité:</TableCell>\n                            <TableCell>\n                                <TextField\n                                    type=\"number\"\n                                    InputProps={{\n                                        inputProps: {\n                                            max: 5,\n                                            min: 0,\n                                        },\n                                    }}\n                                    id=\"acidite\"\n                                    fullWidth\n                                    variant=\"outlined\"\n                                    onChange={handleChangeInt}\n                                />\n                            </TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell>Sucré:</TableCell>\n                            <TableCell>\n                                <TextField\n                                    type=\"number\"\n                                    InputProps={{\n                                        inputProps: {\n                                            max: 5,\n                                            min: 0,\n                                        },\n                                    }}\n                                    id=\"sucre\"\n                                    fullWidth\n                                    variant=\"outlined\"\n                                    onChange={handleChangeInt}\n                                />\n                            </TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell>Description:</TableCell>\n                            <TableCell>\n                                <TextField\n                                    id=\"description\"\n                                    fullWidth\n                                    variant=\"outlined\"\n                                    multiline\n                                    onChange={handleChangeString}\n                                />\n                            </TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell>Logo:</TableCell>\n                            <TableCell>\n                                <img\n                                    src={infoToEdit.logo}\n                                    style={{ maxWidth: '100%', maxHeight: '100%' }}\n                                />\n                            </TableCell>\n                            <TableCell>\n                                <input\n                                    accept=\"image/*;video/*\"\n                                    style={{ display: 'none' }}\n                                    id=\"contained-button-file\"\n                                    type=\"file\"\n                                    onChange={handleFileChange}\n                                    name=\"media\"\n                                />\n                                <label htmlFor=\"contained-button-file\">\n                                    <Button\n                                        variant=\"contained\"\n                                        component=\"span\"\n                                        className={styles.upload_button}\n                                        name=\"media\"\n                                    >\n                                        Média\n                                    </Button>\n                                </label>\n                            </TableCell>\n                        </TableRow>\n                    </Table>\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        color=\"secondary\"\n                        variant=\"contained\"\n                        margin=\"dense\"\n                        size=\"small\"\n                        className={styles.btnAddNews}\n                        onClick={() => saveInfo(infoToEdit)}\n                    >\n                        Sauvegarder\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n};\n\nconst styles = (theme) => ({\n    container: {\n        padding: 20,\n        margin: 30,\n        marginTop: 100,\n        border: '1.5px solid #B22132',\n    },\n    paper_box: {\n        width: '100%',\n        overflowX: 'auto',\n        marginTop: 100,\n    },\n    btnAddNews: {\n        marginTop: 10,\n        marginBottom: 20,\n        marginRight: 5,\n        marginLeft: 5,\n    },\n    upload_button: {\n        marginTop: 15,\n    },\n    cell: {\n        textAlign: 'center',\n    },\n    cellLeft: {\n        textAlign: 'left',\n    },\n});\n\nexport default withStyles(styles)(BeerInfo);\n","import React, { useState, useEffect } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { ajaxGet, ajaxPost, ajaxPatch } from '../../../utils/Ajax';\nimport Grid from '@material-ui/core/Grid';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport Typography from '@material-ui/core/Typography';\nimport { Paper } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst TrendingProduct = () => {\n    const [reload, setReload] = useState(false);\n    const [products, setProducts] = useState([]);\n    const [newTrendingProduct, setNewTrendingProduct] = useState({});\n    const [categoryNames, setCategoryNames] = useState({});\n\n    useEffect(() => {\n        ajaxGet('payutc/public/articles').then((res) => {\n            let productNames = [];\n            let categoryNames = {};\n            res.data.map((category) => {\n                category.products.map((product) => {\n                    productNames.push(product.name);\n                    categoryNames[product.name] = category.name;\n                });\n            });\n            productNames.sort((a, b) => (a > b ? 1 : -1));\n            setProducts(productNames);\n            setCategoryNames(categoryNames);\n        });\n    }, [reload]);\n\n    const handleChangeProduct = (event) => {\n        setNewTrendingProduct({\n            ...newTrendingProduct,\n            nom_produit: event.target.value,\n            nom_categorie: categoryNames[event.target.value],\n        });\n    };\n\n    const handleChangeDescription = (event) => {\n        setNewTrendingProduct({\n            ...newTrendingProduct,\n            description: event.target.value,\n        });\n    };\n\n    const saveTrendingProduct = () => {\n        ajaxPost('trending_product/', newTrendingProduct).then((res) => {\n            setReload(!reload);\n        });\n    };\n\n    return (\n        <div className=\"admin_container\">\n            <Grid container direction=\"column\">\n                <Grid container direction=\"row\" style={{ marginBottom: 10 }}>\n                    <Grid item xs={10}>\n                        <Typography variant=\"h6\">\n                            <ChevronRightIcon />\n                            Selectionner le Produit du moment\n                        </Typography>\n                    </Grid>\n                </Grid>\n                <Paper className={styles.paper_box}>\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>Nom du Produit:</TableCell>\n                                <TableCell>Description:</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            <TableRow>\n                                <TableCell>\n                                    <TextField\n                                        select\n                                        fullWidth\n                                        autoComplete=\"off\"\n                                        variant=\"outlined\"\n                                        onChange={handleChangeProduct}\n                                    >\n                                        {products.map((product, index) => (\n                                            <MenuItem key={index} value={product.toString()}>\n                                                {product}\n                                            </MenuItem>\n                                        ))}\n                                    </TextField>\n                                </TableCell>\n                                <TableCell>\n                                    <TextField\n                                        id=\"description\"\n                                        fullWidth\n                                        variant=\"outlined\"\n                                        multiline\n                                        onChange={handleChangeDescription}\n                                    />\n                                </TableCell>\n                                <TableCell>\n                                    <Button\n                                        color=\"secondary\"\n                                        variant=\"contained\"\n                                        margin=\"dense\"\n                                        size=\"small\"\n                                        className={styles.btnAddNews}\n                                        onClick={saveTrendingProduct}\n                                    >\n                                        modifier\n                                    </Button>\n                                </TableCell>\n                            </TableRow>\n                        </TableBody>\n                    </Table>\n                </Paper>\n            </Grid>\n        </div>\n    );\n};\n\nconst styles = (theme) => ({\n    container: {\n        padding: 20,\n        margin: 30,\n        marginTop: 100,\n        border: '1.5px solid #B22132',\n    },\n    paper_box: {\n        width: '100%',\n        overflowX: 'auto',\n        marginTop: 100,\n    },\n    btnAddNews: {\n        marginTop: 10,\n        marginBottom: 20,\n        marginRight: 5,\n        marginLeft: 5,\n    },\n    cell: {\n        textAlign: 'center',\n    },\n    cellLeft: {\n        textAlign: 'left',\n    },\n});\n\nexport default withStyles(styles)(TrendingProduct);\n","import React, { useState, useEffect } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport { ajaxGet, ajaxPost, ajaxPatch, ajaxDelete } from '../../../utils/Ajax';\nimport { Paper } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst Evenements = () => {\n    const [events, setEvents] = useState([]);\n    const [currentSemester, setCurrentSemster] = useState(0);\n    const [eventToAdd, setEventToAdd] = useState({});\n    const [reload, setReload] = useState(false);\n\n    useEffect(() => {\n        ajaxGet('events').then((res) => {\n            const evenements = res.data;\n            evenements.sort((a, b) => (a.date > b.date ? 1 : -1));\n            setEvents(evenements);\n        });\n        ajaxGet('current/semester').then((res) => {\n            setEventToAdd({ ...eventToAdd, semestre: res.data.id });\n        });\n    }, [reload]);\n\n    const handleChangeName = (event) => {\n        setEventToAdd({\n            ...eventToAdd,\n            name: event.target.value,\n        });\n    };\n\n    const handleChangeDate = (event) => {\n        setEventToAdd({\n            ...eventToAdd,\n            date: event.target.value,\n        });\n    };\n\n    const saveEvent = () => {\n        ajaxPost('events/', eventToAdd).then((response) => {\n            setReload(!reload);\n        });\n    };\n\n    const deleteEvent = (id) => {\n        ajaxDelete('events/' + id).then((res) => {\n            setReload(!reload);\n        });\n    };\n\n    return (\n        <div className=\"admin_container\">\n            <Grid container direction=\"column\">\n                <Grid container direction=\"row\" style={{ marginBottom: 10 }}>\n                    <Grid item xs={12}>\n                        <Typography variant=\"h6\">\n                            <ChevronRightIcon />\n                            Ajouter Un Évenement\n                        </Typography>\n                    </Grid>\n                </Grid>\n                <Paper className={styles.paper_box}>\n                    <Table>\n                        <TableHead>\n                            <TableCell className={styles.cell}>Nom de l'évenement</TableCell>\n                            <TableCell className={styles.cell}>Date de l'évenement</TableCell>\n                        </TableHead>\n                        <TableBody>\n                            <TableRow>\n                                <TableCell>\n                                    <TextField\n                                        id=\"nom\"\n                                        fullWidth\n                                        variant=\"outlined\"\n                                        onChange={handleChangeName}\n                                    />\n                                </TableCell>\n                                <TableCell>\n                                    <TextField\n                                        id=\"date\"\n                                        fullWidth\n                                        type=\"date\"\n                                        onChange={handleChangeDate}\n                                    />\n                                </TableCell>\n                                <TableCell>\n                                    <Button\n                                        color=\"primary\"\n                                        variant=\"contained\"\n                                        margin=\"dense\"\n                                        size=\"small\"\n                                        className={styles.btnAddNews}\n                                        onClick={saveEvent}\n                                    >\n                                        Créer\n                                    </Button>\n                                </TableCell>\n                            </TableRow>\n                        </TableBody>\n                    </Table>\n                </Paper>\n                <Grid container direction=\"row\" style={{ marginBottom: 10, marginTop: 20 }}>\n                    <Grid item xs={12}>\n                        <Typography variant=\"h6\">\n                            <ChevronRightIcon />\n                            List des Évenements\n                        </Typography>\n                    </Grid>\n                </Grid>\n                <Paper className={styles.paper_box}>\n                    <Table>\n                        <TableHead>\n                            <TableCell className={styles.cell}>Nom de l'évenement</TableCell>\n                            <TableCell className={styles.cell}>Date de l'évenement</TableCell>\n                        </TableHead>\n                        <TableBody>\n                            {events.map((event, index) => (\n                                <TableRow key={index}>\n                                    <TableCell>{event.name}</TableCell>\n                                    <TableCell>{event.date}</TableCell>\n                                    <TableCell>\n                                        <Button\n                                            color=\"secondary\"\n                                            variant=\"contained\"\n                                            margin=\"dense\"\n                                            size=\"small\"\n                                            className={styles.btnAddNews}\n                                            onClick={() => deleteEvent(event.id)}\n                                        >\n                                            Supprimer\n                                        </Button>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </Paper>\n            </Grid>\n        </div>\n    );\n};\n\nconst styles = (theme) => ({\n    paper_box: {\n        width: '100%',\n        overflowX: 'auto',\n        marginTop: 100,\n    },\n    btnAddNews: {\n        marginTop: 10,\n        marginBottom: 20,\n        marginRight: 5,\n        marginLeft: 5,\n    },\n    cell: {\n        textAlign: 'center',\n    },\n});\n\nexport default withStyles(styles)(Evenements);\n","import React, {Component} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport {config} from '../../../utils/Config';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport { ajaxGet, ajaxPost, ajaxPatch, ajaxDelete } from '../../../utils/Ajax';\n\nclass Media extends Component{\n\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            medias : [],\n            media : {\n                name: '',\n                media_type: 'I',\n                media: '',\n                activate: false,\n                times: 1,\n            },\n            users : [],\n            new_user : {\n                login: '',\n                right: 'M'\n            },\n            mode : 'create',\n            file_loading: false,\n            open_modal : false,\n            confirm_modal: false,\n            loading: true,\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    componentDidMount(){\n        this.loadMedias();\n    }\n\n\n    loadMedias(){\n        ajaxGet('tv/media/').then(res => {\n            this.setState({medias: res.data, loading: false})\n        })\n        .catch(error => {\n            console.log(error)\n        })\n    }\n\n    reloadNewMedia = () => {\n        this.setState({media: {\n            name: '',\n            media_type: 'I',\n            media: '',\n            activate: false,\n            times: 1,\n        }, mode: 'create'})\n    }\n\n\n    selectMedia = (event, media) => {\n        if(media.media){\n            media.media = config.urls.URL + '/media/' + media.media;\n        }\n        this.setState({media: media, mode: 'edit'})\n        this.handleModalClickOpen();\n    }\n\n\n    handleChange(event){\n        this.setState({\n            media: {\n                ...this.state.media,\n                [event.target.name]: event.target.value\n            }\n        })\n    };\n\n\n    handleFileChange(e) {\n        this.setState({file_loading: true})\n        const file = e.target.files[0];\n        let media_type = \"\"\n        if (file.type.includes('video')) {\n            media_type = \"V\";\n        } else if (file.type.includes('image')){\n            media_type = \"I\";\n        } else {\n            // Only accept video and image files\n            return;\n        }\n        const reader = new FileReader();\n        let media = null;\n        reader.readAsDataURL(file);\n        reader.onloadend = () => {\n            media = reader.result;\n            this.setState({\n                media: {\n                    ...this.state.media,\n                    media: media,\n                    media_type: media_type,\n                    new_media: file,\n                },\n                file_loading: false\n            })\n        }\n    }\n\n\n    handleModalClickOpen = () => {\n        this.setState({open_modal: true})\n    }\n\n    handleConfirmModalOpen(media){\n        this.setState({media: media, confirm_modal: true})\n    }\n\n    handleModalClickClose = () => {\n        this.setState({open_modal: false, confirm_modal: false})\n        this.loadMedias();\n        this.reloadNewMedia();\n    };\n\n\n    changeMediaActivation(event, media_index){\n        let medias = this.state.medias;\n        medias[media_index].activate = !medias[media_index].activate;\n        ajaxPatch('tv/media/' + medias[media_index].id + '/', {activate: medias[media_index].activate}).then((res) => {\n            this.setState({medias: medias})\n        })\n    }\n\n\n\n    saveMedia(media){\n        const ajax_media = {\n            name: media.name,\n            times: media.times,\n            media_type: media.media_type\n        }\n        if(this.state.mode === \"create\"){\n            ajax_media.media = null;\n            ajaxPost('tv/media/', ajax_media).then((res) => {\n                this.setState({\n                    media: {\n                        ...this.state.media,\n                        id: res.data.id\n                    },\n                    mode: \"edit\",\n                })\n                this.fileUpload(media.new_media, res.data.id)\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n        } else if (this.state.mode === \"edit\"){\n            ajaxPatch('tv/media/' + media.id + '/', ajax_media).then((res) => {\n                if (media.new_media) {\n                    this.fileUpload(media.new_media, res.data.id)\n                } else {\n                    this.handleModalClickClose();\n                }\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n        }\n    }\n\n    fileUpload = async (file, id) => {\n        const fd = new FormData();\n        fd.append('media', file);\n        ajaxPatch('tv/media/' + id + '/', fd).then(() => {\n            this.handleModalClickClose();\n        })\n        .catch(errors => {\n        });\n    };\n\n\n    deleteMedia(media_id){\n        ajaxDelete('tv/media/' + media_id + '/').then(() => {\n            let medias = this.state.medias;\n            medias = medias.filter(m => m.id !== media_id)\n            this.setState({medias: medias, confirm_modal: false})\n        })\n        .catch((error) => {\n\n        })\n    }\n\n\n\n    render(){\n\n        const { classes } = this.props;\n\n        const {medias, open_modal, media, mode, file_loading, confirm_modal, loading} = this.state;\n\n\n        if (loading) {\n            return (\n                <Grid\n                    container\n                    className=\"admin_loader\"\n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                >\n                    <Grid item>\n                        <CircularProgress/>\n                    </Grid>\n                </Grid>\n            )\n        }\n\n        return (\n            <div className=\"admin_container\">\n                <Typography variant=\"h6\" className={classes.subTitle}>\n                    <ChevronRightIcon className={classes.subTitleIcon}/>\n                    Médias\n                    <Fab\n                        size=\"small\"\n                        color=\"primary\"\n                        className={classes.add_item}\n                        onClick={(e) => this.handleModalClickOpen()}\n                    >\n                        <AddIcon />\n                    </Fab>\n                </Typography>\n                <Grid container direction=\"row\">\n                    <Paper className={classes.rootTable}>\n                        <Table>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell className={classes.cell}>\n                                        Nom\n                                    </TableCell>\n                                    <TableCell className={classes.cell}>\n                                        Activé ?\n                                    </TableCell>\n                                    <TableCell className={classes.cell}>\n                                        Répétition\n                                    </TableCell>\n                                    <TableCell className={classes.cell}>\n                                        Actions\n                                    </TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {medias.map((row, index) => (\n                                    <TableRow hover key={index} className={classes.row}>\n                                        <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\n                                            {row.name}\n                                        </TableCell>\n                                        <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\n                                            {row.activate? (\n                                                <CheckIcon/>\n                                            ):(\n                                                <CloseIcon/>\n                                            )}\n                                        </TableCell>\n                                        <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\n                                            <span>\n                                                {row.times}\n                                                {row.media_type === \"I\" &&\n                                                    \"s\"\n                                                }\n                                                {row.media_type === \"V\" &&\n                                                    \" fois\"\n                                                }\n                                            </span>\n                                        </TableCell>\n                                        <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\n\n                                            <Button\n                                                color=\"primary\"\n                                                variant=\"contained\"\n                                                margin=\"dense\"\n                                                size=\"small\"\n                                                className={classes.btn}\n                                                onClick={(e) => this.selectMedia(e, row)}\n                                            >\n                                                Consulter\n                                            </Button>\n                                            {row.activate ? (\n                                                <Button\n                                                    color=\"secondary\"\n                                                    variant=\"contained\"\n                                                    margin=\"dense\"\n                                                    size=\"small\"\n                                                    className={classes.btn}\n                                                    onClick={(e) => this.changeMediaActivation(e, index)}\n                                                >\n                                                    Désactiver\n                                                </Button>\n                                            ):(\n                                                <Button\n                                                    size=\"small\"\n                                                    color=\"primary\"\n                                                    variant=\"contained\"\n                                                    margin=\"dense\"\n                                                    className={classes.btn}\n                                                    onClick={(e) => this.changeMediaActivation(e, index)}\n                                                >\n                                                    Activer\n                                                </Button>\n                                            )}\n                                            <Button\n                                                color=\"secondary\"\n                                                variant=\"contained\"\n                                                margin=\"dense\"\n                                                size=\"small\"\n                                                className={classes.btn}\n                                                onClick={() => this.handleConfirmModalOpen(row)}\n                                            >\n                                                Supprimer\n                                            </Button>\n\n                                        </TableCell>\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>\n                    </Paper>\n                </Grid>\n                <Dialog\n                    onClose={this.handleModalClickClose}\n                    open={open_modal}\n                    maxWidth=\"lg\"\n                    width=\"lg\"\n                    scroll=\"body\"\n                >\n                    <DialogTitle onClose={this.handleModalClickClose}>\n                        {mode === \"edit\"? (\n                            <span>Média : {media.name}</span>\n                        ):\n                        (\n                            <span>Ajouter un nouveau média</span>\n                        )}\n                    </DialogTitle>\n                    <DialogContent>\n                        <Grid\n                            container\n                            className={classes.loader}\n                            direction=\"row\"\n                            justify=\"center\"\n                            alignItems=\"center\"\n                        >\n                            {file_loading?(\n                                <Grid item>\n                                    <CircularProgress className={classes.progress} />\n                                </Grid>\n                            ):(\n                                <React.Fragment>\n                                    {media.media_type === \"I\" &&\n                                        <CardMedia\n                                            className={classes.media}\n                                            image={media.media ? media.media : '/images/default_image.png'}\n                                            style={{width:'100%'}}\n                                        />\n                                    }\n                                    {media.media_type === \"V\" &&\n                                        <CardMedia\n                                            component=\"video\"\n                                            className={classes.media}\n                                            src={media.media}\n                                            style={{width: 'auto'}}\n                                        />\n                                    }\n                                    <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                                        <input\n                                            accept=\"image/*;video/*\"\n                                            className={classes.input_file}\n                                            id=\"contained-button-file\"\n                                            type=\"file\"\n                                            onChange={(event) => this.handleFileChange(event)}\n                                            name=\"media\"\n                                        />\n                                        <label htmlFor=\"contained-button-file\">\n                                            <Button\n                                                variant=\"contained\"\n                                                component=\"span\"\n                                                className={classes.upload_button}\n                                                name=\"media\"\n                                            >\n                                                Média\n                                            </Button>\n                                        </label>\n                                    </Grid>\n                                </React.Fragment>\n                            )}\n                        </Grid>\n                        <Grid container direction=\"row\">\n                            <TextField\n                                label=\"Nom\"\n                                className={classes.textField}\n                                value={media.name}\n                                onChange={this.handleChange}\n                                name=\"name\"\n                                fullWidth\n                                margin=\"dense\"\n                                variant=\"outlined\"\n                            />\n                            <TextField\n                                label=\"Répétition\"\n                                className={classes.textField}\n                                value={media.times}\n                                onChange={this.handleChange}\n                                name=\"times\"\n                                type=\"number\"\n                                fullWidth\n                                margin=\"dense\"\n                                variant=\"outlined\"\n                            />\n                        </Grid>\n                        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                            <Button\n                                onClick={() => this.saveMedia(media)}\n                                variant=\"contained\"\n                                color=\"primary\"\n                                margin=\"dense\"\n                                size=\"small\"\n                            >\n                                Enregistrer\n                            </Button>\n                        </Grid>\n                    </DialogContent>\n                </Dialog>\n                <Dialog\n                    open={confirm_modal}\n                    onClose={() => this.handleModalClickClose()}\n                >\n                    <DialogTitle id=\"alert-dialog-title\">{\"Suppresion: \" + media.name}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText id=\"alert-dialog-description\">\n                            Veux-tu vraiment supprimer ce média ?\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button\n                            color=\"secondary\"\n                            variant=\"contained\"\n                            margin=\"dense\"\n                            size=\"small\"\n                            className={classes.btn}\n                            onClick={(e) => this.deleteMedia(media.id)}\n                        >\n                            Supprimer\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    };\n\n}\n\nconst styles = theme => ({\n    rootTable : {\n        width: '100%',\n        overflowX: 'auto'\n    },\n    container: {\n        padding: 20,\n        margin: 30,\n        marginTop: 100,\n        border: \"1.5px solid #B22132\",\n    },\n    media: {\n        height: 150,\n        backgroundSize: 'contain',\n    },\n    input_file:{\n        display: 'None',\n    },\n    upload_button : {\n        marginTop: 15\n    },\n    subTitle: {\n        marginBottom: 40,\n    },\n    subTitleIcon: {\n        marginRight: 8,\n        paddingTop: 5,\n    },\n    add_item : {\n        marginLeft: 10,\n    },\n    btn : {\n        margin: 5,\n    },\n});\n\nexport default withStyles (styles) (Media)\n","import React, {Component} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { ajaxGet, ajaxPost, ajaxPut, ajaxDelete } from '../../../utils/Ajax';\n\nclass Url extends Component{\n\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            links : [],\n            link : {\n                name: '',\n                url: '',\n            },\n            mode: 'create',\n            open_modal: false,\n            confirm_modal: false,\n            loading: true,\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    componentDidMount(){\n        this.loadLinks();\n    }\n\n\n    handleChange(event){\n        this.setState({\n            link: {\n                ...this.state.link,\n                [event.target.name]: event.target.value\n            }\n        })\n    }\n\n    handleModalClickOpen = () => {\n        this.setState({open_modal: true})\n    }\n\n    handleConfirmModalOpen(link){\n        this.setState({link: link, confirm_modal: true})\n    }\n\n    handleModalClickClose = () => {\n        this.setState({open_modal: false, confirm_modal: false})\n        this.loadLinks();\n        this.reloadNewLink();\n    };\n\n\n    selectLink = (event, link) => {\n        this.setState({link: link, mode: 'edit'})\n        this.handleModalClickOpen();\n    }\n\n    loadLinks(){\n        ajaxGet('tv/links/').then(res => {\n            this.setState({links: res.data, loading: false})\n        })\n        .catch(error => {\n            console.log(error)\n        })\n    }\n\n    reloadNewLink(){\n        this.setState({link: {\n            name: '',\n            url: '',\n        }, mode: 'create'})\n    }\n\n\n    saveLink(){\n        const link = this.state.link\n        if(this.state.mode === \"create\"){\n            ajaxPost('tv/links/', link).then((res) => {\n                this.handleModalClickClose();\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n        } else if (this.state.mode === \"edit\"){\n            ajaxPut('tv/links/' + link.id + '/', link).then((res) => {\n                this.handleModalClickClose();\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n        }\n    }\n\n\n    deleteLink(link_id){\n        ajaxDelete('tv/links/' + link_id + '/').then(() => {\n            let links = this.state.links;\n            links = links.filter(l => l.id !== link_id)\n            this.setState({links: links, confirm_modal: false})\n        })\n        .catch((error) => {\n\n        })\n    }\n\n\n\n    render(){\n\n        const { classes } = this.props;\n\n        const {links, link, mode, open_modal, confirm_modal, loading} = this.state;\n\n\n        if (loading) {\n            return (\n                <Grid\n                    container\n                    className=\"admin_loader\"\n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                >\n                    <Grid item>\n                        <CircularProgress/>\n                    </Grid>\n                </Grid>\n            )\n        }\n\n        return (\n            <div className=\"admin_container\">\n                <Typography variant=\"h6\" className={classes.subTitle}>\n                    <ChevronRightIcon className={classes.subTitleIcon}/>\n                    Liste des URLs\n                    <Fab\n                        size=\"small\"\n                        color=\"primary\"\n                        className={classes.add_item}\n                        onClick={(e) => this.handleModalClickOpen()}\n                    >\n                        <AddIcon />\n                    </Fab>\n                </Typography>\n                <Paper className={classes.rootTable}>\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell className={classes.cell}>\n                                    Nom\n                                </TableCell>\n                                <TableCell className={classes.cell}>\n                                    URL\n                                </TableCell>\n                                <TableCell className={classes.cell}>\n                                    Actions\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {links.map((row, index) => (\n                                <TableRow hover key={index} className={classes.row}>\n                                    <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\n                                        {row.name}\n                                    </TableCell>\n                                    <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\n                                        {row.url}\n                                    </TableCell>\n                                    <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\n                                        <Button\n                                            color=\"primary\"\n                                            variant=\"contained\"\n                                            margin=\"dense\"\n                                            size=\"small\"\n                                            className={classes.btn}\n                                            onClick={(e) => this.selectLink(e, row)}\n                                        >\n                                            Consulter\n                                        </Button>\n                                        <Button\n                                            color=\"secondary\"\n                                            variant=\"contained\"\n                                            margin=\"dense\"\n                                            size=\"small\"\n                                            className={classes.btn}\n                                            onClick={() => this.handleConfirmModalOpen(row)}\n                                        >\n                                            Supprimer\n                                        </Button>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </Paper>\n                <Dialog\n                    onClose={this.handleModalClickClose}\n                    open={open_modal}\n                    maxWidth=\"lg\"\n                    width=\"lg\"\n                    scroll=\"body\"\n                >\n                    <DialogTitle onClose={this.handleModalClickClose}>\n                        {mode === \"edit\"? (\n                            <span>Lien : {link.name}</span>\n                        ):\n                        (\n                            <span>Ajouter un nouveau lien</span>\n                        )}\n                    </DialogTitle>\n                    <DialogContent>\n                        <Grid container direction=\"row\">\n                            <TextField\n                                label=\"Nom\"\n                                className={classes.textField}\n                                value={link.name}\n                                onChange={this.handleChange}\n                                name=\"name\"\n                                fullWidth\n                                margin=\"dense\"\n                                variant=\"outlined\"\n                            />\n                            <TextField\n                                label=\"URL\"\n                                className={classes.textField}\n                                value={link.url}\n                                onChange={this.handleChange}\n                                name=\"url\"\n                                fullWidth\n                                margin=\"dense\"\n                                variant=\"outlined\"\n                            />\n                        </Grid>\n                        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                            <Button\n                                onClick={() => this.saveLink()}\n                                variant=\"contained\"\n                                color=\"primary\"\n                                margin=\"dense\"\n                                size=\"small\"\n                            >\n                                Enregistrer\n                            </Button>\n                        </Grid>\n                    </DialogContent>\n                </Dialog>\n                <Dialog\n                    open={confirm_modal}\n                    onClose={() => this.handleModalClickClose()}\n                >\n                    <DialogTitle>{\"Suppresion: \" + link.name}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            Veux-tu vraiment supprimer ce média ?\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button\n                            color=\"secondary\"\n                            variant=\"contained\"\n                            margin=\"dense\"\n                            size=\"small\"\n                            className={classes.btn}\n                            onClick={(e) => this.deleteLink(link.id)}\n                        >\n                            Supprimer\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    };\n\n}\n\nconst styles = theme => ({\n    rootTable : {\n        width: '100%',\n        overflowX: 'auto'\n    },\n    container: {\n        padding: 20,\n        margin: 30,\n        marginTop: 100,\n        border: \"1.5px solid #B22132\",\n    },\n    subTitle: {\n        marginBottom: 40,\n    },\n    subTitleIcon: {\n        marginRight: 8,\n        paddingTop: 5,\n    },\n    add_item : {\n        marginLeft: 10,\n    },\n    btn : {\n        margin: 5,\n    },\n});\n\nexport default withStyles (styles) (Url)\n","import React, {Component} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport Grid from '@material-ui/core/Grid';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Paper from '@material-ui/core/Paper';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { ajaxGet, ajaxPut } from '../../../utils/Ajax';\n\nclass Configuration extends Component{\n \n    \n    constructor(props) {\n        super(props)\n\n        this.state = {\n            tvs : [],\n            links: [],\n            loading: true\n        }\n    }\n\n    componentDidMount(){\n        this.loadTVs();\n    }\n\n    loadTVs(){\n        ajaxGet('tvs/').then(res => {\n            this.setState({tvs: res.data})\n            this.loadLinks();\n        })\n        .catch(error => {\n            console.log(error)\n        })\n    }\n\n    loadLinks(){\n        ajaxGet('tv/links/').then(res => {\n            this.setState({links: res.data, loading: false})\n        })\n        .catch(error => {\n            console.log(error)\n        })\n    }\n\n\n    handleChangeLink(event, tv_index){\n        let tvs = this.state.tvs;\n        const links = this.state.links\n        const link_index = links.findIndex(l => l.name === event.target.value);\n        if (link_index >= 0) {\n            tvs[tv_index].link = links[link_index];\n            tvs[tv_index].link_id = links[link_index].id;\n            this.setState({tvs: tvs});\n            ajaxPut('tvs/' + tvs[tv_index].id + '/', tvs[tv_index]).then(res => {\n                \n            }).catch(error => {\n                console.log(error);\n            })\n        }\n        \n    }\n        \n\n    render(){\n        \n        const { classes } = this.props;\n\n        const {links, tvs, loading} = this.state;\n\n        if (loading) {\n            return (\n                <Grid \n                    container \n                    className=\"admin_loader\"\n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                >\n                    <Grid item>\n                        <CircularProgress/>\n                    </Grid>\n                </Grid>\n            )\n        }\n\n        return (\n            <div className=\"admin_container\">\n                <Typography variant=\"h6\" className={classes.subTitle}>\n                    <ChevronRightIcon className={classes.subTitleIcon}/>\n                    Gestion des télés\n                </Typography>\n                \n                {tvs.map((row, index) => (\n                    <Paper className={classes.tv_paper} xs={6} key={index}>\n                        <Grid container direction=\"row\" key={index}>\n                            <Grid item xs={12}>\n                                <Typography variant=\"h6\" className={classes.subTitle}>\n                                    {row.name}\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    select\n                                    className={classes.textField}\n                                    name=\"link_id\"\n                                    value={row.link.name || ''}\n                                    autoComplete=\"off\"\n                                    fullWidth\n                                    onChange={(event) => this.handleChangeLink(event, index)}\n                                    margin=\"normal\"\n                                    \n                                >\n                                    {links.map(link => (\n                                        <MenuItem key={link.id} value={link.name}>\n                                            {link.name} ({link.url})\n                                        </MenuItem>\n                                    ))}\n                                </TextField>\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                ))}\n            </div>\n        );\n    };\n\n}\n\nconst styles = theme => ({\n    rootTable : {\n        width: '100%',\n        overflowX: 'auto'\n    },\n    container: {\n        padding: 20,\n        margin: 30,\n        marginTop: 100,\n        border: \"1.5px solid #B22132\",\n    },\n    tv_paper : {\n        margin: 20,\n        padding: 10,\n    }\n});\n\nexport default withStyles (styles) (Configuration)","import React, {useEffect, useState} from 'react';\nimport Grid from \"@material-ui/core/Grid\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {KeyboardDatePicker, MuiPickersUtilsProvider} from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport Button from \"@material-ui/core/Button\";\nimport {ajaxPost} from \"../../../utils/Ajax\";\nimport \"./prostate.css\";\n\nconst Prostate = () => {\n    const [loading, setLoading] = useState(false)\n    const [startDate, setStartDate] = useState(new Date())\n    const [endDate, setEndDate] = useState(new Date())\n    const [result, setResult]= useState([])\n\n    const handleForm = async () => {\n        setLoading(true)\n\n        await ajaxPost('treso/stats', {\n            \"start_date\": startDate.toISOString().split('T')[0],\n            \"end_date\": endDate.toISOString().split('T')[0]\n        }).then(\n            res => setResult(res.data)\n        ).catch(\n            setLoading(false)\n        )\n\n        setLoading(false)\n    }\n\n    if (loading) {\n        return (\n            <div className=\"admin_container\">\n                <Grid\n                    container\n                    className=\"admin_loader\"\n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                >\n                    <Grid item>\n                        <CircularProgress/>\n                    </Grid>\n                </Grid>\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"admin_container\">\n            <Grid container>\n                <Typography variant=\"h6\" className=\"prostate-sub-title\">\n                    Choisissez une période à étudier\n                </Typography>\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <Grid container justify=\"space-around\">\n                        <KeyboardDatePicker\n                            disableToolbar\n                            variant=\"inline\"\n                            format=\"MM/dd/yyyy\"\n                            margin=\"normal\"\n                            label=\"Date de départ\"\n                            name=\"start_date\"\n                            value={startDate}\n                            onChange={setStartDate}\n                            KeyboardButtonProps={{\n                                'aria-label': 'change date',\n                            }}\n                        />\n                        <KeyboardDatePicker\n                            disableToolbar\n                            variant=\"inline\"\n                            format=\"MM/dd/yyyy\"\n                            margin=\"normal\"\n                            label=\"Date de fin\"\n                            name=\"end_date\"\n                            value={endDate}\n                            onChange={setEndDate}\n\n                            KeyboardButtonProps={{\n                                'aria-label': 'change date',\n                            }}\n                        />\n                    </Grid>\n                    <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                        <Button\n                            variant=\"contained\"\n                            size=\"small\"\n                            color=\"primary\"\n                            onClick={() => handleForm()}\n                        >\n                            Voir\n                        </Button>\n                    </Grid>\n                </MuiPickersUtilsProvider>\n                <div className='prostate-result-container'>\n                    <Grid className='prostate-tab_container'>\n                        {result.map(({ categorie__nom, total_price }, index) => (\n                            <Grid className='prostate-row-container' item key={index}>\n                                <div><b>{categorie__nom}</b></div>\n                                <div><b>{new Intl.NumberFormat().format(total_price)} €</b></div>\n                            </Grid>\n                        ))}\n                        <Grid className='prostate-row-container' item>\n                            <div><b>Total</b></div>\n                            <div>\n                                <b>\n                                {new Intl.NumberFormat().format(result.reduce((partialSum, { total_price }) =>  partialSum + total_price, 0))} €\n                                </b>\n                            </div>\n                        </Grid>\n                    </Grid>\n                </div>\n            </Grid>\n        </div>\n    )\n}\n\nexport default Prostate\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport { AppBar, IconButton, Toolbar, Typography } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\nimport AdminNav from '../components/admin/AdminNav';\nimport Dashboard from '../components/admin/Dashboard';\nimport Semesters from '../components/admin/administrations/Semesters';\nimport Settings from '../components/admin/administrations/Settings';\nimport TeamManagement from '../components/admin/administrations/TeamManagement';\nimport Users from '../components/admin/administrations/Users';\nimport BlockedUsers from '../components/admin/administrations/BlockedUsers';\nimport ResourcesManagement from '../components/admin/administrations/ResourcesManagement';\nimport Astreintes from '../components/admin/perms/Astreintes';\nimport CalendarManagement from '../components/admin/perms/CalendarManagement';\nimport CurrentPerm from '../components/admin/perms/CurrentPerm';\nimport PermDetails from '../components/admin/perms/PermDetails';\nimport PermsIndex from '../components/admin/perms/PermsIndex';\nimport RequestedPerm from '../components/admin/perms/RequestedPerm';\nimport GoodiesManagement from '../components/admin/website_management/GoodiesManagement';\nimport ShotgunManagement from '../components/admin/website_management/ShotgunManagement';\nimport PollsManagement from '../components/admin/website_management/PollsManagement';\nimport Newsletter from '../components/admin/application_management/Newsletter';\nimport BeerInfo from '../components/admin/application_management/BeerInfo';\nimport TrendingProduct from '../components/admin/application_management/TrendingProduct';\nimport Evenements from '../components/admin/application_management/Evenements';\nimport Media from '../components/admin/tv/Media';\nimport Url from '../components/admin/tv/Url';\nimport Configuration from '../components/admin/tv/Configuration';\nimport { Link } from 'react-router-dom';\nimport Error404 from '../pages/Error404';\nimport ProtectedRoute from '../utils/ProtectedRoute';\nimport { asset_url } from '../utils/Config';\n\nimport Prostate from '../components/admin/prostate/Prostate';\n\nexport function IconButtonLink(props) {\n    return <IconButton component={Link} {...props} />;\n}\n\nclass Admin extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mobileOpen: false,\n        };\n    }\n\n    handleDrawerToggle = (event) =>\n        this.setState((prevState) => ({\n            mobileOpen: !prevState.mobileOpen,\n        }));\n\n    displayScreenName() {\n        switch (window.location.pathname) {\n            case asset_url('/admin'):\n                return 'Dashboard';\n            case asset_url('/admin/goodies'):\n                return 'Goodies';\n            case asset_url('/admin/polls'):\n                return 'Sondages';\n            case asset_url('/admin/current/perm'):\n                return 'Perm en cours';\n            case asset_url('/admin/calendar'):\n                return 'Planning du semestre';\n            case asset_url('/admin/astreintes'):\n                return 'Astreintes';\n            case asset_url('/admin/requested/perms'):\n                return 'Perms demandées';\n            case asset_url('/admin/perm/details'):\n                return 'Détails';\n            case asset_url('/admin/perms'):\n                return 'Index Perms';\n            case asset_url('/admin/charte'):\n                return 'Charte';\n            case asset_url('/admin/users'):\n                return 'Utilisateurs';\n            case asset_url('/admin/blocked/users'):\n                return 'Blocage';\n            case asset_url('/admin/team'):\n                return 'Team';\n            case asset_url('/admin/resources'):\n                return 'Gestion des ressources';\n            case asset_url('/admin/semesters'):\n                return 'Semestres';\n            case asset_url('/admin/settings'):\n                return 'Paramètres';\n            case asset_url('/admin/tv/media'):\n                return 'Gestion des médias TV';\n            case asset_url('/admin/prostate'):\n                return 'Prostate';\n            case asset_url('/admin/newsletter'):\n                return 'Newsletter';\n            case asset_url('/admin/beerInfo'):\n                return 'Info Bière';\n            case asset_url('/admin/trending_product'):\n                return 'Trending Product';\n            case asset_url('/admin/evenements'):\n                return 'Évenements du semestre';\n            case asset_url('/admin/shotgun'):\n                return 'ShotgunManagement';\n            default:\n                break;\n        }\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { mobileOpen } = this.state;\n\n        return (\n            <div className={classes.root}>\n                <AppBar className={classes.appBar} position=\"fixed\">\n                    <Toolbar>\n                        <IconButton\n                            className={classes.menuButton}\n                            onClick={this.handleDrawerToggle}\n                            aria-label=\"Open drawer\"\n                            color=\"inherit\"\n                            edge=\"start\"\n                        >\n                            <MenuIcon />\n                        </IconButton>\n                        <Typography variant=\"h4\" noWrap className={classes.windowTitle}>\n                            {this.displayScreenName()}\n                        </Typography>\n                        <IconButtonLink to=\"/logout\" aria-label=\"Logout\">\n                            <PowerSettingsNewIcon />\n                        </IconButtonLink>\n                    </Toolbar>\n                </AppBar>\n\n                <AdminNav mobileOpen={mobileOpen} handleDrawerToggle={this.handleDrawerToggle} />\n\n                <main className={classes.content}>\n                    <Switch>\n                        <ProtectedRoute only=\"member\" path=\"/admin/\" exact component={Dashboard} />\n                        <ProtectedRoute\n                            only=\"member\"\n                            path=\"/admin/goodies\"\n                            exact\n                            component={GoodiesManagement}\n                        />\n                        <ProtectedRoute\n                            only=\"member\"\n                            path=\"/admin/polls\"\n                            exact\n                            component={PollsManagement}\n                        />\n                        <ProtectedRoute\n                            only=\"member\"\n                            path=\"/admin/shotgun\"\n                            exact\n                            component={ShotgunManagement}\n                        />\n                        <ProtectedRoute\n                            only=\"member\"\n                            path=\"/admin/current/perm\"\n                            exact\n                            component={CurrentPerm}\n                        />\n                        <ProtectedRoute\n                            only=\"member\"\n                            path=\"/admin/calendar\"\n                            exact\n                            component={CalendarManagement}\n                        />\n                        <ProtectedRoute\n                            only=\"member\"\n                            path=\"/admin/astreintes\"\n                            exact\n                            component={Astreintes}\n                        />\n                        <ProtectedRoute\n                            only=\"member\"\n                            path=\"/admin/perms\"\n                            exact\n                            component={PermsIndex}\n                        />\n                        <ProtectedRoute\n                            only=\"member\"\n                            path=\"/admin/perm/details\"\n                            exact\n                            component={PermDetails}\n                        />\n                        <ProtectedRoute\n                            only=\"member\"\n                            path=\"/admin/requested/perms\"\n                            exact\n                            component={RequestedPerm}\n                        />\n                        <ProtectedRoute\n                            only=\"member\"\n                            path=\"/admin/tv/media\"\n                            exact\n                            component={Media}\n                        />\n                        <ProtectedRoute only=\"member\" path=\"/admin/tv/url\" exact component={Url} />\n                        <ProtectedRoute\n                            only=\"member\"\n                            path=\"/admin/tv/config\"\n                            exact\n                            component={Configuration}\n                        />\n                        <ProtectedRoute\n                            only=\"member\"\n                            path=\"/admin/prostate\"\n                            exact\n                            component={Prostate}\n                        />\n                        <ProtectedRoute\n                            only=\"member\"\n                            path=\"/admin/newsletter\"\n                            exact\n                            component={Newsletter}\n                        />\n                        <ProtectedRoute\n                            only=\"member\"\n                            path=\"/admin/evenements\"\n                            exact\n                            component={Evenements}\n                        />\n                        <ProtectedRoute\n                            only=\"member\"\n                            path=\"/admin/beerInfo\"\n                            exact\n                            component={BeerInfo}\n                        />\n                        <ProtectedRoute\n                            only=\"member\"\n                            path=\"/admin/trending_product\"\n                            exact\n                            component={TrendingProduct}\n                        />\n                        <ProtectedRoute only=\"admin\" path=\"/admin/users\" exact component={Users} />\n                        <ProtectedRoute\n                            only=\"admin\"\n                            path=\"/admin/resources\"\n                            exact\n                            component={ResourcesManagement}\n                        />\n                        <ProtectedRoute\n                            only=\"admin\"\n                            path=\"/admin/blocked/users\"\n                            exact\n                            component={BlockedUsers}\n                        />\n                        <ProtectedRoute\n                            only=\"admin\"\n                            path=\"/admin/team\"\n                            exact\n                            component={TeamManagement}\n                        />\n                        <ProtectedRoute\n                            only=\"admin\"\n                            path=\"/admin/semesters\"\n                            exact\n                            component={Semesters}\n                        />\n                        <ProtectedRoute\n                            only=\"admin\"\n                            path=\"/admin/settings\"\n                            exact\n                            component={Settings}\n                        />\n                        <Route component={Error404} />\n                    </Switch>\n                </main>\n            </div>\n        );\n    }\n}\n\nconst drawerWidth = 240;\n\nconst styles = (theme) => ({\n    root: {\n        display: 'flex',\n        flexGrow: 1,\n    },\n    appBar: {\n        marginLeft: drawerWidth,\n        [theme.breakpoints.up('md')]: {\n            width: `calc(100% - ${drawerWidth}px)`,\n        },\n        backgroundColor: 'white',\n        color: '#000223',\n    },\n    toolbar: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        minWidth: 1,\n    },\n\n    windowTitle: {\n        textDecoration: 'underline #B22132',\n        fontSize: 24,\n        flexGrow: 1,\n    },\n\n    menuButton: {\n        marginRight: theme.spacing(2),\n        [theme.breakpoints.up('md')]: {\n            display: 'none',\n        },\n    },\n});\n\nexport default withStyles(styles)(Admin);\n","export function formateToDjangoDate(date) {\n    const day = (\"0\" + (date.getDate())).slice(-2);\n    const month_number = (\"0\" + (date.getMonth() + 1)).slice(-2)\n    const year = date.getFullYear();\n    return year + \"-\" + month_number + \"-\" + day;\n}\n\nexport function addDays(date, days) {\n    var result = new Date(date);\n    result.setDate(result.getDate() + days);\n    return result;\n}\n\nexport function calendarDate(date){\n    var result = (\"0\" + (date.getDate())).slice(-2) + \"/\" + (\"0\" + (date.getMonth() + 1)).slice(-2);\n    return result;\n}\n\nexport function formateFromDjangoDate(date) {\n    const splitted_date = date.split('-')\n    const result = splitted_date[2] + \"/\" + splitted_date[1] + \"/\" + splitted_date[0];\n    return result;\n}\n\nexport function compareDjangoDate(d1, d2){\n    // Renvoie true si d1 est plus récente que d2\n    const splitted_d1 = d1.split('-');\n    const splitted_d2 = d2.split('-');\n    if (splitted_d1[0] > splitted_d2[0]) {\n        return true;\n    } else if (splitted_d1[0] < splitted_d2[0]) {\n        return false;\n    }\n    if (splitted_d1[1] > splitted_d2[1]){\n        return true\n    } else if (splitted_d1[1] < splitted_d2[1]) {\n\n    } \n    if (splitted_d1[2] >= splitted_d2[2]){\n        return true\n    }\n    return false;\n}\n\nexport function getCurrentDate(separator='-'){\n\n    let newDate = new Date()\n    let date = newDate.getDate();\n    let month = newDate.getMonth() + 1;\n    let year = newDate.getFullYear();\n\n    return `${year}${separator}${month<10?`0${month}`:`${month}`}${separator}${date}`\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { AppBar, Toolbar, IconButton } from '@material-ui/core';\nimport Hidden from '@material-ui/core/Hidden';\nimport { asset_url } from '../utils/Config';\nimport LockIcon from '@material-ui/icons/Lock';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { Link } from 'react-router-dom'\n\nexport function IconButtonLink(props) {\n\treturn <IconButton component={Link} {...props} />\n}\n\n\nconst COUVERTURE_PATH = asset_url('/images/background_a22.png')\nconst COUVERTURE_PATH_XS = asset_url('/images/background_no_logo_a22.png')\nconst LOGO_PATH = asset_url('/images/logo_a22.png')\n\n\nclass Header extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\topen_menu : null,\n\t\t\theight : window.innerHeight\n\t\t}\n\t}\n\tupdateSize=()=>{\n\t\tthis.setState({height : window.innerHeight})\n\t}\n\tcomponentDidMount() {\n\t\twindow.addEventListener('resize', this.updateSize);\n\t}\n\tcomponentWillUnmount(){\n\t\twindow.removeEventListener('resize', this.updateSize);\n\t}\n\n\thandleOpenMenu(event){\n\t\tthis.setState({anchor: event.currentTarget})\n\t}\n\n\thandleCloseMenu(event, link=null){\n\t\tthis.setState({anchor: null})\n\t\tif (link) {\n\t\t\twindow.location.hash = null;\n\t\t\twindow.location.hash=link;\n\t\t}\n\t}\n\n\n\trender() {\n\n\t\tconst { anchor, height } = this.state;\n\n\t\tconst { classes } = this.props;\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div className={classes.root}>\n\t\t\t\t\t<AppBar position=\"fixed\" className={classes.appBar}>\n\t\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t\t<div className={classes.logo}>\n\t\t\t\t\t\t\t\t<img alt=\"logo_pic\" src={LOGO_PATH} height=\"60px\"/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<IconButtonLink to=\"/login\" className={classes.menuButton} aria-label=\"Login\">\n\t\t\t\t\t\t\t\t<LockIcon className={classes.icon}/>\n\t\t\t\t\t\t\t</IconButtonLink>\n\t\t\t\t\t\t</Toolbar>\n\t\t\t\t\t</AppBar>\n\t\t\t\t</div>\n\n\t\t\t\t<div className = {classes.imgContainer}>\n\t\t\t\t\t<Hidden smUp implementation=\"css\">\n\t\t\t\t\t\t<div className={classes.couvXS}>\n\t\t\t\t\t\t\t<img alt=\"logo_pic\" src={LOGO_PATH} className={classes.logoCouv} />\n\t\t\t\t\t\t\t<img alt=\"couverture_pic\" src={COUVERTURE_PATH_XS} className={classes.couverture} style={{height:height}}/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Hidden>\n\t\t\t\t\t<Hidden xsDown implementation=\"css\">\n\t\t\t\t\t\t<img alt=\"couverture_pic\" src={COUVERTURE_PATH} className={classes.couverture}/>\n\t\t\t\t\t</Hidden>\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t);\n\n\t}\n}\n\nHeader.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nconst styles = theme => ({\n\troot: {\n\t\tflexGrow: 1,\n\t},\n\tappBar: {\n\t\tbackgroundColor: 'var(--color-light)',\n\t\tcolor: 'white',\n\t},\n\tlogo: {\n\t\tflexGrow: 1,\n\t},\n\tmenuButton: {\n\t\tbackgroundColor: 'var(--color-light)',\n\t\tfontSize: 35,\n\t\tpadding: \"10px\",\n\t\tmarginTop: 0,\n\t\tborderRadius: 0,\n\t\theight: 60,\n\t\tcolor: 'var(--color-primary)',\n\t\t'&:hover': {\n\t\t\tborderTop: \"3px solid var(--color-primary)\",\n\t\t\ttextDecoration: \"none\",\n\t\t},\n\t},\n\ticon: {\n\t\tfontSize: 35,\n\t},\n\timgContainer: {\n\t\twidth: '100%',\n\t\tposition: 'absolute',\n\t\tright: 0,\n\t\tleft: 'auto',\n\t\tmarginTop: 65,\n\t},\n\tcouverture: {\n\t\twidth: '100%',\n\t\theight: window.innerHeight,\n\t\tobjectFit: 'cover',\n\t},\n\tlogoCouv: {\n\t\twidth: '70%',\n\t\tposition: 'absolute',\n\t\ttop: '15%',\n\t\tleft: '15%'\n\t},\n\tcouvXS: {\n\t\tdisplay: 'flex'\n\t}\n});\n\n\nexport default withStyles(styles)(Header);\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { asset_url } from '../utils/Config'\n\n\nclass Footer extends React.Component {\n\n\trender() {\n\n\t\tconst { classes } = this.props;\n\n\t\treturn (\n\t\t\t<React.Fragment>\n                <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    className={classes.footer}\n                >\n                    <Grid item className={classes.footer_content}>\n                    <Typography variant=\"body1\" gutterBottom>\n                        Pour toute question relative au <strong>Pic'Asso</strong> : <a href=\"mailto:picasso@assos.utc.fr\" className={classes.link}>picasso@assos.utc.fr</a>\n                    </Typography>\n                    <Typography variant=\"body1\" gutterBottom>\n                        Vous êtes responsables : <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://assos.utc.fr/picasso/charte-consommateur.pdf\" className={classes.link}>Charte</a>\n                    </Typography>\n                    <Typography variant=\"body1\" gutterBottom>\n                        Signer la charte du permanencier <a target=\"_blank\" rel=\"noopener noreferrer\" href={asset_url(\"/charte\")} className={classes.link}>ici</a>\n                    </Typography>\n                    <Typography variant=\"body1\" gutterBottom className={classes.copyright}>\n                        @2021 Copyright Pic'Asso\n                    </Typography>\n                    </Grid>\n                </Grid>\n\t\t\t</React.Fragment>\n\t\t);\n\n\t}\n}\n\n\n\nconst styles = theme => ({\n\tfooter : {\n\t    padding: '10px',\n        margin: '0px',\n        backgroundColor: 'var(--color-light)',\n        color: 'white',\n        boxShadow: '0px -2px 4px -1px rgba(0,0,0,0.2),0px -4px 5px 0px rgba(0,0,0,0.14),0px -1px 10px 0px rgba(0,0,0,0.12)',\n    },\n    footer_content: {\n        textAlign: 'center',\n        padding: '0px',\n        margin: '0px',\n    },\n    copyright: {\n        //color: '#B22132',\n    },\n    link: {\n        textDecoration: 'None',\n        color: 'var(--color-primary)',\n    },\n});\n\n\nexport default withStyles(styles)(Footer);\n","import React from 'react'\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\n\n\n\nclass Home extends React.Component {\n\n\trender() {\n\n\t\tconst { classes } = this.props;\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<CssBaseline />\n\n\t\t\t\t<Container id=\"home\" className={classes.root}>\n\n\t\t\t\t\t<Container className={classes.header} id=\"header\" fixed>\n\t\t\t\t\t\t<Header/>\n\t\t\t\t\t</Container>\n\n\t\t\t\t</Container>\n\t\t\t\t<Footer/>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nconst styles = theme => ({\n\troot: {\n\t\twidth:'100%',\n\t\tmaxWidth: '100%',\n\t\tmargin: 0,\n\t\tpaddingRight: '5%',\n\t\tpaddingLeft: '5%',\n\n\t},\n\theader : {\n\t\theight : window.innerHeight+65,\n\t\t//display: \"inline-block\"\n\t},\n\ttitle: {\n\t\tcolor: 'white',\n\t\ttextAlign: \"center\",\n\t\tmarginTop: 50,\n\t},\n\tcontainer: {\n\t\tpadding: 0,\n\t\toverflowX: \"overlay\",\n\t},\n\tcomponent: {\n\t\tmarginTop: 40,\n\t\tpadding: '5%',\n\t\tborder: \"var(--color-secondary) 1.5px solid\",\n\t\ttextAlign: 'left',\n\t},\n\tlegend : {\n\t\tfontSize: 34,\n\t\tpadding: 15,\n\t\tcolor: 'var(--color-primary)',\n\t},\n});\n\nexport default withStyles(styles)(Home)\n","import React from 'react';\nimport Auth from '../utils/Auth';\nimport { withStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\n\nclass Login extends React.Component {\n\n\tcomponentDidMount(){\n\t\tthis.loginUser();\n\t}\n\n\tredirectUser(){\n\t\tAuth.redirectUser();\n\t}\n\n\tloginUser(){\n\t\tAuth.login();\n\t}\n\n\n\trender() {\n\n\t\tconst { classes } = this.props;\n\n\t\treturn (\n\t\t\t<div className={classes.container}>\n\t\t\t\t\t<Typography variant=\"h4\" noWrap>\n\t\t\t\t\t\t<CircularProgress className={classes.progress} />\n\t\t\t\t\t\tConnexion ...\n\t\t\t\t\t</Typography>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst styles = theme => ({\n    container: {\n        paddingTop: 100,\n        textAlign: 'center',\n\t},\n\tprogress: {\n\t\tmargin: 20,\n\t\tcolor: '#B22132',\n\t}\n});\n\nexport default withStyles (styles) (Login)\n\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\nimport { asset_url } from '../utils/Config';\nimport { ajaxGet } from '../utils/Ajax';\n\nclass Logout extends React.Component {\n\n\tcomponentDidMount(){\n\t\tthis.logoutUser();\n\t}\n\n\tlogoutUser(){\n\t\tconst query = new URLSearchParams(this.props.location.search);\n\t\tconst redirection = query.get('redirect');\n\t\tif (redirection) {\n\t\t\twindow.location = \"https://cas.utc.fr/cas/logout\";\n\t\t} else {\n\t\t\tlet logout_window = window.open(asset_url(\"/logout?redirect=true\"));\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (logout_window) {\n\t\t\t\t\tlogout_window.close();\n\t\t\t\t\tajaxGet('auth/logout').then(res => {\n\t\t\t\t\t\twindow.location = asset_url('/')\n\t\t\t\t\t})\n\t\t\t\t} else {\n\t\t\t\t\tajaxGet('auth/logout').then(res => {\n\t\t\t\t\t\twindow.location = asset_url('/')\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}, 2000)\n\t\t}\n    }\n\n\n\trender() {\n\n\t\tconst { classes } = this.props;\n\n\t\treturn (\n\t\t\t<div className={classes.container}>\n\n                <Grid \n                    container\n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                >\n                    <Typography variant=\"h4\" noWrap>\n                        <CircularProgress className={classes.progress} />\n                        Déconnexion ...\n                    </Typography>\n                </Grid>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst styles = theme => ({\n    container: {\n        paddingTop: 100,\n\t},\n\tprogress: {\n\t\tmargin: 20,\n\t\tcolor: '#B22132',\n\t}\n});\n\nexport default withStyles (styles) (Logout)\n\n","import React, {Component} from 'react'\nimport TextField from \"@material-ui/core/TextField\"\nimport Button from \"@material-ui/core/Button\"\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport { ajaxGet, ajaxPost } from '../utils/Ajax'\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { formateToDjangoDate } from '../utils/Date';\nimport SnackbarComponent from '../utils/SnackbarComponent';\n\nclass Charte extends Component {\n\n  \tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tnewSignature : {\n\t\t\t\tnom: '',\n\t\t\t\tcreneau_id: {},\n\t\t\t\tdate: new Date(),\n\t\t\t\tlogin: '',\n\t\t\t},\n\t\t\tcurrentCreneau: {},\n\t\t\tloading: true,\n\t\t\tsnackbar: {\n\t\t\t\topen: false,\n\t\t\t\tvariant: 'success',\n\t\t\t\tmessage: '',\n\t\t\t},\n\t\t\tsaving: false,\n\t\t}\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.saveSignature = this.saveSignature.bind(this);\n\t\tthis.handleSnackbarClose = this.handleSnackbarClose.bind(this);\n\t\tthis.changeSnackbarState = this.changeSnackbarState.bind(this);\n\t}\n\n\n\tcomponentDidMount(){\n\t\tthis.loadCurrentPerm()\n\t}\n\n\tloadCurrentPerm(){\n\t\tajaxGet('perms/current/public/creneau').then(res => {\n\t\t\tthis.setState({\n\t\t\t\tnewSignature : {\n\t\t\t\t\t...this.state.newSignature,\n\t\t\t\t\tcreneau_id: res.data.id,\n\t\t\t\t\tdate: formateToDjangoDate(new Date())\n\t\t\t\t},\n\t\t\t\tcurrentCreneau: res.data,\n\t\t\t\tloading: false,\n\t\t\t})\n\t\t})\n\t\t.catch(error => {\n\t\t\tthis.setState({\n\t\t\t\tloading: false,\n\t\t\t})\n\t\t\tthis.changeSnackbarState(true, 'error', 'Erreur lors du chargement.');\n\t\t})\n\t}\n\n\tdisplayDate() {\n\t\tlet date = new Date()\n\t\treturn(\n\t\t\t<Typography variant=\"body1\">\n\t\t\t\tFait le {(\"0\" + (date.getDate())).slice(-2)}/{(\"0\" + (date.getMonth() + 1)).slice(-2)}/{date.getFullYear()} à Compiègne\n\t\t\t\t<br/><br/>\n\t\t\t</Typography>\n\t\t)\n\t}\n\n\thandleChange(event) {\n\t\tthis.setState({\n            newSignature: {\n                ...this.state.newSignature,\n                [event.target.name]: event.target.value\n            }\n        })\n\t}\n\n\tsaveSignature() {\n\t\tconst new_signature = this.state.newSignature;\n\t\tif (new_signature.nom && new_signature.login) {\n\t\t\tthis.setState({saving: true})\n\t\t\tajaxPost('signatures/', new_signature).then(res => {\n\t\t\t\tconst current_creneau = this.state.currentCreneau;\n\t\t\t\tthis.setState({\n\t\t\t\t\tnewSignature: {\n\t\t\t\t\t\tnom: '',\n\t\t\t\t\t\tlogin: '',\n\t\t\t\t\t\tcreneau_id: current_creneau.id,\n\t\t\t\t\t\tdate: formateToDjangoDate(new Date()),\n\t\t\t\t\t},\n\t\t\t\t\tsaving: false,\n\t\t\t\t})\n\t\t\t\tthis.changeSnackbarState(true, 'success', 'Signature de la charte enregistrée.');\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tsaving: false,\n\t\t\t\t})\n\t\t\t\tthis.changeSnackbarState(true, 'error', 'Une erreur est survenue.');\n\t\t\t})\n\t\t} else {\n\t\t\tthis.changeSnackbarState(true, 'error', 'Il manque des informations.');\n\t\t}\n\t}\n\n\n\thandleSnackbarClose(){\n\t\tthis.setState({\n\t\t\tsnackbar: {\n                ...this.state.snackbar,\n            \topen: false\n\t\t\t}\n\t\t})\n\t}\n\n\tchangeSnackbarState(open, variant, message){\n\t\tthis.setState({\n\t\t\tsnackbar: {\n\t\t\t\topen: open,\n\t\t\t\tvariant: variant,\n\t\t\t\tmessage: message\n\t\t\t}\n\t\t})\n\t}\n\n  \trender() {\n\t\t  const { currentCreneau, newSignature, loading, snackbar, saving } = this.state\n\t\tconst {classes} = this.props\n\t\treturn(\n\t\t\t<React.Fragment>\n\t\t\t\t{loading ? (\n\t\t\t\t\t<Grid\n\t\t\t\t\t\tcontainer\n\t\t\t\t\t\tclassName={classes.loader}\n\t\t\t\t\t\tdirection=\"row\"\n\t\t\t\t\t\tjustify=\"center\"\n\t\t\t\t\t\talignItems=\"center\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<CircularProgress className={classes.progress} />\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t):(\n\t\t\t\t\t<div className=\"basic_container\">\n\t\t\t\t\t\t<Typography variant=\"h4\" className={classes.title}>\n\t\t\t\t\t\t\tCharte du permanencier\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t{currentCreneau.perm?(\n\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t<Typography variant=\"body1\" className={classes.text}>\n\t\t\t\t\t\t\t\t\tCe document est valable pour toute la durée du semestre en cours et sera susceptible d’être utilisé comme justificatif de\n\t\t\t\t\t\t\t\t\tresponsabilité de l’étudiant en cas de dégradation ou de comportement inapproprié lors d’une de ses permanences dans le\n\t\t\t\t\t\t\t\t\tfoyer étudiant.<br/><br/>\n\t\t\t\t\t\t\t\t\tJe soussigné\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t\t\tid='name'\n\t\t\t\t\t\t\t\t\t\tplaceholder='Prénom / Nom'\n\t\t\t\t\t\t\t\t\t\tname=\"nom\"\n\t\t\t\t\t\t\t\t\t\tclassName={classes.textField}\n\t\t\t\t\t\t\t\t\t\tvalue={newSignature.nom}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Typography variant=\"body1\" className={classes.text}>\n\t\t\t\t\t\t\t\t\tmembre de l’association / membre du groupe, <strong>{currentCreneau.perm.nom}</strong> engage ma\n\t\t\t\t\t\t\t\t\tpersonne et le reste de mon équipe à respecter les règles suivantes lors de toutes les permanences\n\t\t\t\t\t\t\t\t\ttenues au Pic’asso durant le semestre. Respecter les décisions de l’équipe d’astreinte. Notamment en ce qui\n\t\t\t\t\t\t\t\t\tconcerne les horaires de fermeture, le volume sonore et l’utilisation de la licence de cercle privé. Respecter le\n\t\t\t\t\t\t\t\t\tmatériel mis à disposition des permanenciers. Respecter les étudiants présents dans l’enceinte du foyer. Vérifier\n\t\t\t\t\t\t \t\t\tpass vaccinal de toutes les personnes entrant dans l’enceinte du Picasso pendant les heures de permanence.\n\t\t\t\t\t\t\t\t\tPayer mes consommations pendant mes permanences. En effet, les permanences sont tenues bénévolement.\n\t\t\t\t\t\t\t\t\tLeur but est d’assurer un service aux étudiants et non de permettre à ceux qui les tiennent d’en tirer des avantages.\n\t\t\t\t\t\t\t\t\tNe pas servir une personne qui a trop bu et prévenir l’astreinteur si l’état de la personne nécessite\n\t\t\t\t\t\t\t\t\tl’intervention de personnel qualifié. Distribuer des éthylotests aux conducteurs le demandant. Ceux-ci\n\t\t\t\t\t\t\t\t\tseront à disposition derrière le bar durant les heures de services d’alcool (18h30 à 21h30).\n\t\t\t\t\t\t\t\t\tRester sobre car nous vous rappelons que vous êtes responsable du bon déroulement de la permanence.\n\t\t\t\t\t\t\t\t\tEffectuer les tâches ménagères de manière correcte en suivant les consignes des astreinteurs.\n\t\t\t\t\t\t\t\t\tLa caution est un chèque de 200€ à l’ordre du BDE UTC Pic’asso par groupe de permanence, que ce soit\n\t\t\t\t\t\t\t\t\tgroupe d’amis ou association. Le non-respect d’une des règles citées ci-dessus pourra entraîner l’encaissement\n\t\t\t\t\t\t\t\t\tde la caution, totale ou partielle selon la gravité du problème.<br/><br/>\n\t\t\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t\t\t\t{this.displayDate()}\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t\tid='login'\n\t\t\t\t\t\t\t\t\tplaceholder=\"Login\"\n\t\t\t\t\t\t\t\t\tname=\"login\"\n\t\t\t\t\t\t\t\t\tclassName={classes.textField}\n\t\t\t\t\t\t\t\t\tvalue={newSignature.login}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{saving? (\n\t\t\t\t\t\t\t\t\t<CircularProgress className={classes.progress} />\n\t\t\t\t\t\t\t\t):(\n\t\t\t\t\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={this.saveSignature}>\n\t\t\t\t\t\t\t\t\t\tValider\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t):(\n\t\t\t\t\t\t\t<Typography variant=\"body1\">\n\t\t\t\t\t\t\t\tPas de perm en cours ...\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t<SnackbarComponent\n\t\t\t\topen={snackbar.open}\n\t\t\t\tvariant={snackbar.variant}\n\t\t\t\tmessage={snackbar.message}\n\t\t\t\tcloseSnackbar={\n\t\t\t\t\t()=>{\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tsnackbar: {\n\t\t\t\t\t\t\t\t...this.state.snackbar,\n\t\t\t\t\t\t\t\topen: false,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t/>\n\n\t\t\t</React.Fragment>\n\t\t)\n  \t}\n}\n\nconst styles = theme => ({\n\tcontainer: {\n\t\ttextAlign: 'justify',\n\t\tpadding: 20,\n\t\tmargin: 30,\n\t\tborder: \"1.5px solid var(--color-primary)\",\n\t},\n\ttitle : {\n\t\ttextAlign: 'center',\n\t\ttextDecoration : 'underline var(--color-primary)',\n\t\tmarginBottom: 30,\n\t},\n\ttextField: {\n\t\tpaddingLeft: 10,\n\t\tpaddingRight: 10,\n\t\tcolor: 'red',\n\t\tdisplay: 'inline-block',\n\t\tverticalAlign: 'text-bottom',\n\t},\n\ttext : {\n\t\tdisplay: 'inline',\n\t},\n\tloader: {\n        marginTop: 200,\n    },\n})\n\nCharte.propTypes = {\n \tclasses: PropTypes.object.isRequired\n}\n\nexport default withStyles (styles) (Charte)\n","import React, {Component} from 'react'\nimport TextField from \"@material-ui/core/TextField\"\nimport Button from \"@material-ui/core/Button\"\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport { ajaxGet, ajaxPost } from '../utils/Ajax'\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Typography from '@material-ui/core/Typography';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Auth from '../utils/Auth';\nimport SnackbarComponent from '../utils/SnackbarComponent';\n\nclass Menu extends Component {\n\n  \tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n            menus: [],\n            selected_article: '',\n            orders: [],\n            menu: {},\n            loading: true,\n            open_login: false,\n            user_credentials: {\n                username: '',\n                pin: '',\n            },\n            stack_information : [],\n            snackbar: {\n\t\t\t\topen: false,\n\t\t\t\tvariant: 'success',\n                message: '',\n\t\t\t},\n            saving: false,\n            confirm_modal: false,\n        }\n\n        this.handleChange = this.handleChange.bind(this)\n        this.selectMenu = this.selectMenu.bind(this)\n        this.loginBadge = this.loginBadge.bind(this)\n\t}\n\n    componentDidMount() {\n        this.checkAuth()\n\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    checkAuth(){\n        Auth.checkAuth().then(res => {\n            this.loadMenus();\n        })\n        .catch(error => {\n            this.setState({open_login: true})\n        })\n    }\n\n    loginBadge(event){\n        Auth.loginUsername(this.state.user_credentials).then(res => {\n            Auth.checkAuth().then(res => {\n                this.setState({open_login: false})\n                Auth.authenticateUser(res.data);\n                this.loadMenus();\n            })\n            .catch(error => {\n                window.location.reload();\n            })\n        })\n        .catch(error => {\n            window.location.reload();\n        });\n    }\n\n\n    handleChange(event) {\n\t\tthis.setState({\n            user_credentials: {\n                ...this.state.user_credentials,\n                [event.target.name]: event.target.value\n            }\n        })\n\t}\n\n\tloadMenus(){\n        ajaxGet('perm/menus/').then(res => {\n            const query = new URLSearchParams(this.props.location.search);\n            const selected_article = query.get('selected_article');\n            this.setState({menus: res.data, loading: false, orders: [], menu: {}, stack_information:[], selected_article: ''});\n            if (selected_article) {\n                this.setState({selected_article: selected_article})\n            }\n            this.interval = setInterval(() => this.loadSelectedMenu(), 2000);\n        })\n        .catch(error => {\n            window.location.reload();\n        })\n    }\n\n\n    loadSelectedMenu(){\n        const menus = [...this.state.menus];\n        const menu = menus.find(m => m.article.id.toString() === this.state.selected_article.toString())\n        if (menu && menu.article && menu.article.id_payutc) {\n            ajaxGet('perms/menu/orders/' + menu.article.id_payutc).then(res => {\n                // On synchronise le stack avec le retour de l'API\n                let stack_information = [...this.state.stack_information];\n                let stack_index_to_remove = [];\n                let orders = res.data.orders;\n                for (let index = 0; index < stack_information.length; index++) {\n                    const stack = stack_information[index];\n                    const order_index = orders.find(order => order.id_transaction === stack.id_transaction);\n                    if (order_index > -1) {\n                        // Si la commande existe bien on compare les informations avec ce qu'il y a dans le stack\n                        if (orders[order_index].served === stack.served && orders[order_index].is_staff === stack.is_staff) {\n                            // Si les informations sont calés entre l'API et le stack on supprime l'élément du stack\n                            stack_index_to_remove.push(stack.id_transaction);\n                        }\n                        // Sinon on garde l'élément dans le stack, on met à jour order\n                        orders.splice(order_index, 1);\n                        if (!stack.served) {\n                            // Si le stack note la commande comme non servi, on la met en haut de la liste\n                            orders.splice(0,0,stack);\n                        } else {\n                            // Sinon on met la commande à la fin\n                            orders.push(stack);\n                        }\n                    } else {\n                        // Si la commande n'existe pas, on la supprime du stack car on considère qu'elle a été annulée\n                        stack_index_to_remove.push(stack.id_transaction);\n                    }\n                    // On met à jour les informations du stack\n                    stack_information = stack_information.filter(stack =>  !stack_index_to_remove.includes(stack.id_transaction))\n                }\n                this.setState({orders: res.data.orders, menu: res.data.menu, stack_information: stack_information, loading: false})\n            })\n            .catch(error => {\n                window.location.reload();\n            })\n        }\n    }\n\n\n    areMenusAllServed(){\n        const orders = this.state.orders;\n        if (orders.length > 0) {\n            let all_served = true;\n            for (let index = 0; index < orders.length; index++) {\n                const element = orders[index];\n                if(!element.served){\n                    all_served = false;\n                    break;\n                }\n            }\n            return all_served\n        }\n        return false;\n    }\n\n\n    selectMenu(event){\n        this.setState({selected_article: event.target.value, orders: [], menu: {}, stack_information:[]})\n    }\n\n    servedMenu(event, order){\n        // On récupère le stack et on cherche la commande dans les commandes du state\n        let stack_information = [...this.state.stack_information];\n        let orders = [...this.state.orders];\n        let order_index = orders.findIndex(order_in_state => order_in_state.id_transaction === order.id_transaction)\n\n        if (order_index > - 1) {\n            // On modifie la commande en changeant son attribut served\n            let order_edited = orders[order_index];\n            order_edited.served = !order_edited.served;\n            // Si la commande a été servie on la met à la fin de la liste de commmande\n            if (order_edited.served) {\n                orders.splice(order_index, 1);\n                orders.push(order_edited);\n            } else {\n                // Suppression élément\n                orders.splice(order_index,1)\n                // Ajout en première position\n                orders.splice(0,0, order_edited)\n                console.log(orders);\n            }\n            stack_information.push(order_edited);\n            // On envoie l'appel à la bdd\n            this.setState({stack_information: stack_information, orders: orders});\n            ajaxPost('perms/menu/served/' + order.id_transaction).then(res => {\n                let message = \"Le service du menu de \" + order.first_name + \" a été annulé\";\n                if (order.served) {\n                    message = 'Le menu de ' + order.first_name + ' a été validé';\n                }\n                this.changeSnackbarState(true, 'success', message);\n            })\n            .catch(error => {\n                window.location.reload();\n            })\n        }\n\n    }\n\n\n    staffMenu(event, order){\n        // On récupère le stack et on cherche la commande dans les commandes du state\n        let stack_information = [...this.state.stack_information];\n        let orders = [...this.state.orders];\n        stack_information.push(order);\n        let order_index = orders.findIndex(order_in_state => order_in_state.id_transaction === order.id_transaction)\n\n        if (order_index > - 1) {\n            // On modifie la commande en changeant son attribut is_staff\n            let order_edited = orders[order_index];\n            order_edited.is_staff = true;\n            // On peut seulement déclarer un menu comme staff, par conséquent on le met à la fin de la liste\n            // Aucune posibilité de revenir en arrière et de mettre la commande en haut de la liste\n            orders.splice(order_index, 1);\n            orders.push(order_edited);\n            this.setState({stack_information: stack_information, orders: orders});\n            ajaxPost('perms/menu/staff/' + order.id_transaction).then(res => {\n                this.changeSnackbarState(true, 'success', 'Le menu de ' + order.first_name + ' a été reporté');\n            })\n            .catch(error => {\n                window.location.reload();\n            })\n        }\n    }\n\n\n    changeSnackbarState(open, variant, message){\n\t\tthis.setState({\n\t\t\tsnackbar: {\n\t\t\t\topen: open,\n\t\t\t\tvariant: variant,\n\t\t\t\tmessage: message\n\t\t\t}\n\t\t})\n    }\n\n\n    handleConfirmModalOpen(){\n        this.setState({confirm_modal: true})\n    }\n\n    handleModalClickClose = () => {\n        this.setState({confirm_modal: false})\n    };\n\n\n    deleteMenu(event, menu){\n        console.log(menu)\n        ajaxPost('perms/menu/closed/' + menu.id_payutc, {}).then(res => {\n            this.changeSnackbarState(true, 'success', 'Le menu a été supprimé');\n            this.loadMenus();\n            this.handleModalClickClose();\n        }).catch(error => {\n            this.changeSnackbarState(true, 'error', 'Une erreur est survenue lors de la suppression du menu');\n        })\n    }\n\n\n  \trender() {\n\t\t  const { menus, selected_article, menu, orders, loading, open_login, user_credentials, snackbar, confirm_modal } = this.state\n\t\tconst {classes} = this.props\n\t\treturn(\n\t\t\t<React.Fragment>\n\t\t\t\t{loading ? (\n\t\t\t\t\t<Grid\n\t\t\t\t\t\tcontainer\n\t\t\t\t\t\tclassName={classes.loader}\n\t\t\t\t\t\tdirection=\"row\"\n\t\t\t\t\t\tjustify=\"center\"\n\t\t\t\t\t\talignItems=\"center\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<CircularProgress className={classes.progress} />\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t):(\n\t\t\t\t\t<div className=\"basic_container\">\n                        {selected_article &&\n                            <React.Fragment>\n                                <Typography variant=\"h4\" className={classes.title}>\n                                    Menu - {menu.name}\n                                </Typography>\n                                <Typography variant=\"h6\" className={classes.subtitle}>\n                                    {menu.total_quantity} / {menu.quantity} - Menus servis : {menu.served_quantity}\n                                </Typography>\n                                {this.areMenusAllServed() &&\n                                    <Grid\n                                        container\n                                        direction=\"row\"\n                                        justify=\"center\"\n                                        alignItems=\"center\"\n                                    >\n                                        <Button\n                                            variant=\"contained\"\n                                            size=\"small\"\n                                            color=\"secondary\"\n                                            className={classes.delete_btn}\n                                            onClick={() => this.handleConfirmModalOpen()}\n                                        >\n                                            Supprimer Menu\n                                        </Button>\n                                    </Grid>\n                                }\n                                <div className=\"responsive_table\">\n                                    <Table>\n                                        <TableBody>\n                                            {orders.map((order, index) => (\n                                                <TableRow hover key={index} className={classes.row}>\n                                                    <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\n                                                        {order.first_name} {order.last_name}\n                                                    </TableCell>\n                                                    <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\n                                                        {order.quantity}\n                                                    </TableCell>\n                                                    <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\n                                                        {order.served? (\n                                                            <Button\n                                                                variant=\"contained\"\n                                                                size=\"small\"\n                                                                color=\"secondary\"\n                                                                className={classes.btn}\n                                                                onClick={(e) => this.servedMenu(e, order)}\n                                                            >\n                                                                Annuler\n                                                            </Button>\n                                                        ):(\n                                                            <React.Fragment>\n                                                                <Button\n                                                                    variant=\"contained\"\n                                                                    size=\"small\"\n                                                                    color=\"primary\"\n                                                                    className={classes.btn}\n                                                                    onClick={(e) => this.servedMenu(e, order)}\n                                                                >\n                                                                    Valider\n                                                                </Button>\n                                                                <Button\n                                                                    variant=\"contained\"\n                                                                    size=\"small\"\n                                                                    color=\"secondary\"\n                                                                    className={classes.btn}\n                                                                    onClick={(e) => this.staffMenu(e, order)}\n                                                                >\n                                                                    Reporter\n                                                                </Button>\n                                                            </React.Fragment>\n                                                        )}\n                                                    </TableCell>\n                                                </TableRow>\n                                            ))}\n                                        </TableBody>\n                                    </Table>\n                                </div>\n                            </React.Fragment>\n                        }\n                        <Grid\n                            container\n                            direction=\"row\"\n                            justify=\"center\"\n                            alignItems=\"center\"\n                        >\n                            <Grid item xs={10} md={6}>\n                                <TextField\n                                    select\n                                    label=\"Sélection du menu\"\n                                    className={classes.menu_selection}\n                                    value={selected_article}\n                                    onChange={this.selectMenu}\n                                    margin=\"dense\"\n                                    variant=\"outlined\"\n                                >\n                                    {menus.map(menu => (\n                                    <MenuItem key={menu.article.id} value={menu.article.id}>\n                                        {menu.article.nom}\n                                    </MenuItem>\n                                    ))}\n                                </TextField>\n                            </Grid>\n                        </Grid>\n\t\t\t\t\t</div>\n                )}\n\n                <Dialog open={open_login} aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">Connexion Badge</DialogTitle>\n                    <DialogContent>\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            label=\"Login\"\n                            type=\"text\"\n                            fullWidth\n                            name=\"username\"\n                            value={user_credentials.username}\n                            onChange={this.handleChange}\n                        />\n                        <TextField\n                            margin=\"dense\"\n                            label=\"Pin\"\n                            type=\"password\"\n                            fullWidth\n                            name=\"pin\"\n                            value={user_credentials.pin}\n                            onChange={this.handleChange}\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                    <Button onClick={this.loginBadge} color=\"primary\">\n                        Se connecter\n                    </Button>\n                    </DialogActions>\n                </Dialog>\n\n                <Dialog\n                    open={confirm_modal}\n                    onClose={() => this.handleModalClickClose()}\n                >\n                    <DialogTitle>{\"Suppresion: \" + menu.name}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            Veux-tu vraiment supprimer ce menu ?\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button\n                            color=\"secondary\"\n                            variant=\"contained\"\n                            margin=\"dense\"\n                            size=\"small\"\n                            className={classes.btn}\n                            // onClick={(e) => this.deleteMedia(media.id)}\n                            onClick={(e) => this.deleteMenu(e, menu)}\n                        >\n                            Supprimer\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n\n                <SnackbarComponent\n                    open={snackbar.open}\n                    variant={snackbar.variant}\n                    message={snackbar.message}\n                    duration={2000}\n                    closeSnackbar={\n                        ()=>{\n                            this.setState({\n                                snackbar: {\n                                    ...this.state.snackbar,\n                                    open: false,\n                                }\n                            })\n                        }\n                    }\n                />\n\n\t\t\t</React.Fragment>\n\t\t)\n  \t}\n}\n\nconst styles = theme => ({\n\tcontainer: {\n\t\ttextAlign: 'justify',\n\t\tpadding: 20,\n\t\tmargin: 30,\n\t\tborder: \"1.5px solid var(--color-primary)\",\n\t},\n\ttitle : {\n\t\ttextAlign: 'center',\n\t\ttextDecoration : 'underline #B22132',\n\t\tmarginBottom: 30,\n    },\n    subtitle : {\n\t\ttextAlign: 'center',\n\t\tmarginBottom: 30,\n\t},\n\tloader: {\n        marginTop: 200,\n    },\n    btn: {\n        marginLeft: 5,\n        marginRight: 5,\n        marginTop: 3,\n    },\n    delete_btn: {\n        marginBottom: 20,\n    },\n    menu_selection: {\n        width: '100%'\n    },\n    cell: {\n        paddingTop: 10,\n        paddingBottom: 10,\n        paddingRight: 10,\n        paddingLeft: 10,\n    },\n})\n\nMenu.propTypes = {\n \tclasses: PropTypes.object.isRequired\n}\n\nexport default withStyles (styles)(Menu)\n","import React from 'react'\nimport Container from '@material-ui/core/Container';\nimport { Link } from 'react-router-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { withStyles } from '@material-ui/core/styles';\nimport { ajaxGet } from '../utils/Ajax';\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport Chip from '@material-ui/core/Chip';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport {config, asset_url} from '../utils/Config';\n\n\n\nclass Poll extends React.Component {\n\n    constructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tsurvey: {\n\n            },\n            loading: true,\n            vote_loading: false,\n            results : [],\n        }\n        this.canVote = this.canVote.bind(this);\n\t}\n\n\n\tcomponentDidMount(){\n        this.loadSurveys();\n\t}\n\n\tloadSurveys(){\n        const id = this.props.match.params.id;\n\t\tajaxGet('surveys/public/' + id).then((res) => {\n            this.setState({survey: res.data.survey, loading: false});\n            this.getResults();\n        })\n        .catch((error) => {\n            console.log(error);\n        })\n    }\n\n\n    getResults(){\n        ajaxGet('surveys/public/results/' + this.state.survey.id).then((res) => {\n            this.setState({results: res.data.results})\n        })\n    }\n\n\n    findResult(item_id){\n        const results = this.state.results;\n        const item_index = results.findIndex(r => r.id === item_id);\n        if (item_index > -1) {\n            return results[item_index].votes.toFixed(2);\n        }\n        return null;\n    }\n\n\n    canVote(){\n        if (!this.state.survey.multi_choice) {\n            const index = this.state.survey.surveyitem_set.findIndex(s => s.voted === true)\n            if (index > -1) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n\n    hasVote(){\n        const index = this.state.survey.surveyitem_set.findIndex(s => s.voted === true)\n        if (index > -1) {\n            return true;\n        }\n        return false;\n    }\n\n\n    isThereDescriptionInItems(survey){\n        let found = false;\n        for (let index = 0; index < survey.surveyitem_set.length; index++) {\n            if(survey.surveyitem_set[index].description){\n                found = true;\n            }\n        }\n        return found;\n    }\n\n\n    cancelVote(item_index){\n        this.setState({vote_loading: true})\n        let items = [...this.state.survey.surveyitem_set];\n        ajaxGet('surveys/public/vote/cancel/' + items[item_index].id).then((res) => {\n            items[item_index].voted = false;\n            this.setState({survey:{...this.state.survey, items}, vote_loading: false});\n            this.getResults();\n        })\n        .catch((error) => {\n            console.log(error);\n        })\n    }\n\n    vote(item_index){\n        this.setState({vote_loading: true})\n        let items = [...this.state.survey.surveyitem_set];\n        ajaxGet('surveys/public/vote/' + this.state.survey.id + '/' + items[item_index].id).then((res) => {\n            items[item_index].voted = true;\n            this.setState({survey:{...this.state.survey, items}, vote_loading: false});\n            this.getResults();\n        })\n        .catch((error) => {\n            console.log(error);\n        })\n    }\n\n\trender() {\n\n        const { survey, loading, vote_loading } = this.state;\n\t\tconst { classes } = this.props;\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<CssBaseline />\n\n                {loading?(\n\t\t\t\t\t<Grid\n\t\t\t\t\t\tcontainer\n\t\t\t\t\t\tclassName={classes.loader}\n\t\t\t\t\t\tdirection=\"row\"\n\t\t\t\t\t\tjustify=\"center\"\n\t\t\t\t\t\talignItems=\"center\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<CircularProgress  className={classes.progress} color=\"secondary\"/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t):(\n\n                    <Container className={classes.root}>\n                        <Link to=\"/\" color=\"inherit\" className={classes.exit_link}>\n                            <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                className={classes.exit_btn}\n                            >\n                                <ExitToAppIcon className={classes.exit_icon}/> Retour à l'accueil\n                            </Button>\n\t\t\t\t\t\t</Link>\n                        <Container className={classes.container}>\n                            <fieldset className={classes.component} style={{minWidth: 1}}>\n                                <legend className={classes.legend}>{survey.title}</legend>\n                                <div style={{overflowY: 'auto', padding: 5, marginTop: -20}}>\n                                    <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                                        <Typography variant=\"body1\" className={classes.survey_description}>\n                                            {survey.description}{survey.multi_choice && <span className={classes.multiple_choice}>(Choix multiple)</span>}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                                        <img alt={survey.title} src={`${config.urls.URL}/media/${survey.image}`} className={classes.survey_img}/>\n                                    </Grid>\n\n\n                                    <div className={classes.root_items}>\n                                        <GridList className={classes.gridList} style={{margin: 0}}>\n                                            {survey.surveyitem_set.map((item, item_index) => (\n                                                <GridListTile key={item_index} style={{height: '100%', minWidth: 150, maxWidth: 300, width: \"auto\"}}>\n                                                    <Card className={classes.card}>\n                                                        {this.isThereDescriptionInItems(survey) &&\n                                                            <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                                                                <Typography variant=\"body1\" className={classes.subTitle}>\n                                                                    {item.name}\n                                                                </Typography>\n                                                            </Grid>\n                                                        }\n                                                        <img\n                                                            alt={item.name}\n                                                            className={classes.item_img}\n                                                            src={item.image ? `${config.urls.URL}/media/${item.image}` : asset_url('/images/default_image.png')}\n                                                        />\n                                                        {this.isThereDescriptionInItems(survey) ? (\n                                                            <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                                                                <p className={classes.item_description}>{item.description}</p>\n                                                            </Grid>\n                                                        ):(\n                                                            <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                                                                <Typography variant=\"body1\" className={classes.subTitle}>\n                                                                    {item.name}\n                                                                </Typography>\n                                                            </Grid>\n                                                        )}\n\n                                                        {this.hasVote() &&\n                                                            <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                                                                <p>{this.findResult(item.id)}%</p>\n                                                            </Grid>\n                                                        }\n\n                                                        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                                                            {item.voted ? (\n                                                                <Chip\n                                                                    label=\"Voté !\"\n                                                                    className={classes.voted_item}\n                                                                    onDelete={() => this.cancelVote(item_index)}\n                                                                />\n                                                            ):(\n                                                                <React.Fragment>\n                                                                    {this.canVote() === true ? (\n                                                                        <Button\n                                                                            variant=\"contained\"\n                                                                            margin=\"dense\"\n                                                                            size=\"small\"\n                                                                            onClick={() => this.vote(item_index)}\n                                                                            disabled={vote_loading}\n                                                                        >\n                                                                            Voter\n                                                                        </Button>\n                                                                    ):(\n                                                                        <span></span>\n                                                                    )}\n                                                                </React.Fragment>\n                                                            )}\n\n                                                        </Grid>\n                                                    </Card>\n                                                </GridListTile>\n                                            ))}\n                                        </GridList>\n                                    </div>\n                                    <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                                        <Typography className={classes.note}>\n                                            ** Note : Votre vote sera conservé durant la durée du sondage et supprimé par la suite.\n                                        </Typography>\n                                    </Grid>\n                                </div>\n                            </fieldset>\n                        </Container>\n\n\t\t\t\t    </Container>\n                )}\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nconst styles = theme => ({\n\troot: {\n\t\twidth:'100%',\n\t\tmaxWidth: '100%',\n\t\tmargin: 0,\n\t\tpaddingRight: '5%',\n        paddingLeft: '5%',\n        paddingTop: 10,\n\t\tpaddingBottom: 300,\n\t\tbackgroundColor: '#000223',\n        color: 'white',\n        height: '100%',\n    },\n    survey_img : {\n        height: 140,\n        borderRadius: 5,\n        maxWidth: '100%',\n        objectFit: 'contain'\n    },\n\theader : {\n\t\theight: window.innerHeight,\n\t},\n\ttitle: {\n\t\tcolor: 'white',\n\t\ttextAlign: \"center\",\n\t\tmarginTop: 50,\n\t},\n\tcontainer: {\n\t\tpadding: 0,\n\t},\n\tcomponent: {\n        padding: '5%',\n        paddingBottom: 20,\n\t\tborder: \"#B22132 1.5px solid\",\n\t\ttextAlign: 'center',\n\t},\n\tlegend : {\n\t\tfontSize: 34,\n\t\tpadding: 15,\n    },\n    loader: {\n        marginTop: 200,\n    },\n    survey_description : {\n        maxWidth: 500,\n        overflowWrap : 'break-word',\n        marginBottom: 20,\n        fontWeight: 300,\n    },\n    btn : {\n        margin: 5,\n    },\n    subTitle:{\n        marginBottom: 10,\n        fontWeight: 300,\n    },\n    title_btn: {\n        marginLeft: 20,\n    },\n    subTitleIcon: {\n        marginRight: 8,\n        paddingTop: 5,\n    },\n    generate_btn: {\n        margin: 20,\n        marginTop: 30,\n    },\n    card: {\n        maxWidth: 300,\n        backgroundColor: '#000223',\n        color: 'white',\n        marginBottom: 15\n    },\n    item_img: {\n        height: 90,\n        borderRadius: 5,\n        maxWidth: '100%',\n        objectFit: 'contain'\n    },\n    add_item : {\n        marginLeft: 10,\n    },\n    root_items: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        overflowX: 'hidden',\n        marginTop: 20,\n    },\n    gridList: {\n        flexWrap: 'nowrap',\n        transform: 'translateZ(0)',\n        width: 'min-content',\n    },\n    voted_item : {\n        backgroundColor : '#43A047',\n        color: 'white'\n    },\n    item_description : {\n        height: 80,\n        overflowY: 'overlay',\n        fontWeight: 200,\n    },\n    note : {\n        fontWeight: 200,\n        fontSize: 10,\n        marginTop: 5\n    },\n    exit_link : {\n        textDecoration: 'none',\n    },\n    exit_btn : {\n        marginTop: 10,\n        marginBottom: 10,\n        fontWeight: 400,\n        textTransform: 'none',\n    },\n    exit_icon : {\n        marginRight: 5,\n    },\n    multiple_choice : {\n        fontSize: 12,\n        marginLeft: 8,\n    },\n});\n\nexport default withStyles(styles)(Poll)\n","import React from 'react'\nimport Container from '@material-ui/core/Container';\nimport { Link } from 'react-router-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { withStyles } from '@material-ui/core/styles';\nimport { ajaxGet, ajaxPost, ajaxPut } from '../utils/Ajax';\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport Radio from '@material-ui/core/Radio';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport TextField from '@material-ui/core/TextField';\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\nimport Slider from '@material-ui/core/Slider';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Auth from '../utils/Auth';\nimport Paper from '@material-ui/core/Paper';\nimport {isStringEmpty} from '../utils/String';\nimport SnackbarComponent from '../utils/SnackbarComponent';\n\n\nclass PermForm extends React.Component {\n\n    constructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n            assos : [],\n            autocomplete_users: [],\n            loading: true,\n            new_perm : {\n                type: \"friend\",\n                nom : \"\",\n                asso_login: \"\",\n                mail_asso : \"\",\n                ambiance: 3,\n                description: \"\",\n                theme: \"\",\n                nom_resp : \"\",\n                mail_resp: \"\",\n                nom_resp_2 : \"\",\n                mail_resp_2: \"\",\n                membres: \"\",\n                periode : \"\",\n                founder_login: \"\"\n            },\n            errors: [],\n            saving: false,\n            mode : \"create\",\n            saved: false,\n            snackbar: {\n\t\t\t\topen: false,\n\t\t\t},\n        }\n\t}\n\n\t\n\tcomponentDidMount(){\n        this.checkPermFormAvaibility();\n        this.authUser();\n    }\n\n\n    checkPermFormAvaibility(){\n        ajaxGet('perms/public/may/request').then(res => {\n\t\t\tif (res.data.perm_may_be_requested) {\n                this.loadAssos();\n            } else {\n                window.location.href = \"/\"\n            }\n\t\t}).catch(error => {\n            this.openSnackbar();\n\t\t})\n    }\n\n\n    authUser(){\n        Auth.getUserInformation().then((user) => {\n            this.setState({\n                new_perm: {\n                    ...this.state.new_perm,\n                    nom_resp : user.first_name + \" \" + user.last_name,\n                    mail_resp: user.email,\n                    founder_login: user.login,\n                }\n            })\n        });\n        \n    }\n    \n    loadAssos(){\n        ajaxGet('perms/assos').then(res => {\n            let assos = res.data.assos;\n            assos = assos.sort(function(a,b){\n                if (a.shortname > b.shortname) {\n                    return 1\n                }\n                return -1\n            })\n            this.setState({assos: assos})\n            this.isFormExisting()\n        }).catch(error => {\n            this.openSnackbar();\n        })\n    }\n\n    isFormExisting(){\n        const query = new URLSearchParams(this.props.location.search);\n        const form_id = query.get('form_id');\n        if(form_id){\n            ajaxGet('request/perm/' + form_id + \"/\").then(res => {\n                let perm = res.data.perm;\n                if (perm.asso) {\n                    perm.type = \"asso\";\n                    perm.asso_login = perm.mail_asso.split(\"@\")[0]\n                } else {\n                    perm.type = \"friend\";\n                }\n                this.setState({new_perm: perm, loading: false, mode: \"edit\"})\n            })\n            .catch(error => {\n                window.location.href = \"/perm/form\"\n            })\n        } else {\n            this.setState({loading: false})\n        }\n    }\n\n    handleNewPermChange(event){\n        if (event.target.name === \"membres\" && event.target.value.length > 250) {return;} \n        else if (event.target.name === \"theme\" && event.target.value.length > 250) {return;}\n        else if (event.target.name === \"periode\" && event.target.value.length > 250) {return;}\n        else if (event.target.name === \"nom\" && event.target.value.length > 250) {return;}\n        else if (event.target.name === \"description\" && event.target.value.length > 1000){return;}\n        this.setState({\n            new_perm: {\n                ...this.state.new_perm,\n                [event.target.name] : event.target.value\n            }\n        })\n    }\n\n\n    handleSliderChange(event, value){\n        this.setState({\n            new_perm: {\n                ...this.state.new_perm,\n                'ambiance' : value\n            }\n        })\n    }\n\n    handleAssoChange(event){\n        const assos = this.state.assos;\n        const results = assos.filter(a => a.login === event.target.value);\n        if (results.length > 0) {\n            this.setState({\n                new_perm: {\n                    ...this.state.new_perm,\n                    [event.target.name] : event.target.value\n                }\n            })\n        }\n    }\n\n    handleResp2Change(user){\n        const data = user.split('-')\n        const nom_resp_2 = data[0].split('(')[0]\n        const mail_resp_2 = data[1]\n        this.setState({\n            new_perm: {\n                ...this.state.new_perm,\n                nom_resp_2: nom_resp_2,\n                mail_resp_2: mail_resp_2\n            },\n            autocomplete_users: []\n        })\n    }\n\n    handleAutocompleteChange(event){\n        this.setState({\n            new_perm: {\n                ...this.state.new_perm,\n                nom_resp_2: event.target.value\n            }\n        })\n        if (event.target.value){\n            this.autoCompleteQuery(event.target.value)\n        } else {\n            this.setState({autocomplete_users: []})\n        }\n    }\n\n    openSnackbar(){\n\t\tthis.setState({\n\t\t\tsnackbar: {\n\t\t\t\topen: true,\n\t\t\t}\n\t\t})\n\t}\n\n    autoCompleteQuery(query){\n        ajaxGet('payutc/user/autocomplete/' + query).then(res => {\n            this.setState({autocomplete_users: res.data.users});\n        })\n        .catch(error => {\n\n        })\n    }\n\n\n    saveRequestedPerm(){\n        \n        this.setState({saving: true});\n\n        if(this.isFormValid()){\n\n            let new_perm = this.state.new_perm;\n            if (new_perm.type === \"friend\") {\n                new_perm.asso = false\n            } else {\n                new_perm.asso = true;\n                new_perm.mail_asso = new_perm.asso_login + \"@assos.utc.fr\";\n            }\n\n            if (this.state.mode === \"create\") {\n                ajaxPost('request/perm/', new_perm).then(res => {\n                    new_perm.id = res.data.id;\n                    this.setState({saving: false, saved: true, new_perm: new_perm, mode: \"edit\"});\n                }).catch(error => {\n                    this.openSnackbar();\n                    this.setState({saving: false});\n                })\n            } else {\n                ajaxPut('request/perm/' + new_perm.id + '/', new_perm).then(res => {\n                    this.setState({saving: false, saved: true});\n                })\n                .catch(error => {\n                    this.openSnackbar();\n                    this.setState({saving: false});\n                })\n            }        \n        } else {\n            this.setState({saving: false});\n        }\n    }\n\n\n    isFormValid(){\n        const new_perm = this.state.new_perm;\n        let errors = [];\n        if (new_perm.type === \"asso\" && isStringEmpty(new_perm.asso_login)){\n            errors.push(\"Vous devez préciser l'association.\")\n        }\n        if (isStringEmpty(new_perm.nom)){\n            errors.push(\"Le nom de la perm est requis.\")\n        }\n        if(isStringEmpty(new_perm.description)){\n            errors.push('La description de la perm est requise.')\n        }\n        if(isStringEmpty(new_perm.periode)){\n            errors.push('La période la perm n\\'a pas été renseignée.')\n        }\n        if(isStringEmpty(new_perm.nom_resp_2)){\n            errors.push('Il faut un deuxième responsable de perm.')\n        }\n        if (isStringEmpty(new_perm.membres)) {\n            errors.push('Aucun permanencier n\\'a été rentré.')\n        }\n        this.setState({errors: errors})\n        if (errors.length > 0) { \n            return false;\n        }\n        return true;\n    }\n\n\n    backToForm(){\n        this.setState({saved: false})\n    }\n\n    newForm(){\n        this.setState({\n            new_perm : {\n                type: \"friend\",\n                nom : \"\",\n                asso_login: \"\",\n                mail_asso : \"\",\n                ambiance: 3,\n                description: \"\",\n                theme: \"\",\n                nom_resp : \"\",\n                mail_resp: \"\",\n                nom_resp_2 : \"\",\n                mail_resp_2: \"\",\n                membres: \"\",\n                periode : \"\",\n                founder_login: \"\"\n            },\n            mode: \"create\",\n            saved: false\n        })\n    }\n\n\n\trender() {\n\n        const { loading, assos, new_perm, autocomplete_users, errors, saving, saved, mode, snackbar } = this.state;\n        const { classes } = this.props;\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<CssBaseline />\n\n                {loading?(\n\t\t\t\t\t<Grid \n\t\t\t\t\t\tcontainer \n\t\t\t\t\t\tclassName={classes.loader}\n\t\t\t\t\t\tdirection=\"row\"\n\t\t\t\t\t\tjustify=\"center\"\n\t\t\t\t\t\talignItems=\"center\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<CircularProgress  className={classes.progress} color=\"secondary\"/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t):(\n\t\t\t\t\n                    <Container className={classes.root}>\n                        <Link to=\"/\" color=\"inherit\" className={classes.exit_link}>\n                            <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                className={classes.exit_btn}\n                            >\n                                <ExitToAppIcon className={classes.exit_icon}/> Retour à l'accueil\n                            </Button>\n\t\t\t\t\t\t</Link>\n                        <Container className={classes.container}>\n                            <fieldset className={classes.component} style={{minWidth: 1}}>\n                                <legend className={classes.legend}>Demande de permanence</legend>\n                                \n                                {saved ? (\n                                    <React.Fragment>\n                                        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                                            <Typography variant=\"h6\" className={classes.perm_title}>\n                                                Demande enregitrée avec succès !\n                                            </Typography>\n                                        </Grid>\n                                        <Grid \n                                            container \n                                            direction=\"row\"\n                                            justify=\"center\"\n                                            alignItems=\"center\"\n                                        >\n                                            <Button \n                                                variant=\"contained\" \n                                                className={classes.btn}\n                                                onClick={() => this.backToForm()}\n                                            >\n                                                Revenir au formulaire\n                                            </Button>\n                                            <Button \n                                                variant=\"contained\" \n                                                className={classes.btn}\n                                                onClick={() => this.newForm()}\n                                            >\n                                                Nouveau\n                                            </Button>\n                                        </Grid> \n                                    </React.Fragment> \n                                ): (\n\n                                    <div style={{overflowY: 'auto', padding: 5, marginTop: -20}}>\n\n                                        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                                            <Typography variant=\"h6\" className={classes.perm_title}>\n                                                Organisateur\n                                            </Typography>\n                                        </Grid>\n                                        <Grid container direction=\"row\">\n                                            <RadioGroup \n                                                style={{display:'inline-block', textAlign: 'left'}} \n                                                value={new_perm.type} \n                                                name=\"type\"\n                                                onChange={(event) => this.handleNewPermChange(event)}\n                                            >\n                                                <FormControlLabel \n                                                    value=\"friend\" \n                                                    labelPlacement=\"start\"\n                                                    label=\"Groupe de potes\" \n                                                    control={\n                                                        <Radio \n                                                            color=\"primary\" \n                                                            icon={\n                                                                <RadioButtonUncheckedIcon \n                                                                    fontSize=\"small\" \n                                                                    style={{color:'white'}}\n                                                                />\n                                                            }\n                                                        />\n                                                    } \n                                                />\n                                                <FormControlLabel \n                                                    value=\"asso\" \n                                                    labelPlacement=\"start\"\n                                                    control={\n                                                        <Radio \n                                                            color=\"primary\" \n                                                            icon={\n                                                                <RadioButtonUncheckedIcon \n                                                                    fontSize=\"small\" \n                                                                    style={{color:'white'}}\n                                                                />\n                                                            }\n                                                        />\n                                                    } \n                                                    label=\"Associations UTC\" \n                                                />\n                                            </RadioGroup>\n                                            <Grid container direction=\"row\">\n                                                <Grid container item xs={12} sm={6} lg={4}>\n                                                    <TextField \n\n                                                        label=\"Nom de la perm\" \n                                                        variant=\"filled\" \n                                                        value={new_perm.nom}\n                                                        name=\"nom\"\n                                                        onChange={(event) => this.handleNewPermChange(event)}\n                                                        className={classes.perm_input}\n                                                        size=\"small\"\n                                                        margin=\"dense\"\n                                                        fullWidth\n                                                        InputProps={{style: {\n                                                            backgroundColor: 'white',\n                                                            borderRadius: 4\n                                                        }}}\n                                                    />\n                                                </Grid>\n                                            </Grid>\n                                            {new_perm.type === \"asso\" && \n                                                <Grid container direction=\"row\">\n                                                    <Grid container item xs={12} sm={6} lg={4}>\n                                                        <TextField\n                                                            select\n                                                            label=\"Association\"\n                                                            value={new_perm.asso_login}\n                                                            onChange={(event) => this.handleAssoChange(event)}\n                                                            variant=\"filled\"\n                                                            name=\"asso_login\"\n                                                            className={classes.perm_input}\n                                                            size=\"small\"\n                                                            margin=\"dense\"\n                                                            fullWidth\n                                                            InputProps={{style: {\n                                                                backgroundColor: 'white',\n                                                                borderRadius: 4\n                                                            }}}\n                                                        >\n                                                            {assos.map(asso => (\n                                                                <MenuItem key={asso.login} value={asso.login}>\n                                                                    {asso.shortname}\n                                                                </MenuItem>\n                                                            ))}\n                                                        </TextField>\n                                                    </Grid>\n                                                </Grid>\n                                            }\n                                            <Typography variant=\"body1\" style={{fontSize: 12}} className={classes.perm_input}>\n                                                ** Note : Si la perm recoupe plusieurs associations une seule doit être designée comme responsable ici.\n                                            </Typography>\n                                        </Grid>\n                                        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                                            <Typography variant=\"h6\" className={classes.perm_title}>\n                                                Perm\n                                            </Typography>\n                                        </Grid>\n                                        <Grid container direction=\"row\">\n                                            <Typography variant=\"body1\" className={classes.perm_label}>\n                                                Thème de la perm : \n                                            </Typography>\n                                        </Grid>\n                                        <Grid container direction=\"row\">\n                                            <Grid container item xs={12} sm={6} lg={4}>\n                                                <TextField \n                                                    label=\"Thème\" \n                                                    variant=\"filled\" \n                                                    name=\"theme\"\n                                                    value={new_perm.theme}\n                                                    onChange={(event) => this.handleNewPermChange(event)}\n                                                    className={classes.perm_input}\n                                                    size=\"small\"\n                                                    margin=\"dense\"\n                                                    fullWidth\n                                                    InputProps={{style: {\n                                                        backgroundColor: 'white',\n                                                        borderRadius: 4\n                                                    }}}\n                                                />\n                                            </Grid>\n                                        </Grid>\n                                        <Grid container direction=\"row\">\n                                            <Typography variant=\"body1\" className={classes.perm_label}>\n                                                Description de la perm (anim, repas, etc ...) \n                                                <span className={classes.form_field_length}>{new_perm.description.length}/1000 caractères max</span>\n                                            </Typography>\n                                        </Grid>\n                                        <Grid container direction=\"row\">\n                                            <Grid container item xs={12}>\n                                                <TextField \n                                                    label=\"Description\" \n                                                    variant=\"filled\" \n                                                    value={new_perm.description}\n                                                    name=\"description\"\n                                                    onChange={(event) => this.handleNewPermChange(event)}\n                                                    className={classes.perm_input}\n                                                    size=\"small\"\n                                                    margin=\"dense\"\n                                                    fullWidth\n                                                    rowsMax=\"6\"\n                                                    rows=\"4\"\n                                                    multiline\n                                                    InputProps={{style: {\n                                                        backgroundColor: 'white',\n                                                        borderRadius: 4\n                                                    }}}\n                                                />\n                                            </Grid>\n                                        </Grid>\n                                        <Grid container direction=\"row\">\n                                            <Typography variant=\"body1\" className={classes.perm_label}>\n                                                Lourdeur de la perm (de posé à giga fat): \n                                            </Typography>\n                                        </Grid>\n                                        <Grid container direction=\"row\">\n                                            <Grid container item xs={12} sm={6} lg={4}>\n                                                <Slider\n                                                    name=\"ambiance\"\n                                                    value={new_perm.ambiance}\n                                                    onChange={(event, value) => this.handleSliderChange(event, value)}\n                                                    step={1}\n                                                    valueLabelDisplay=\"on\"\n                                                    min={1}\n                                                    max={5}\n                                                    className={classes.slider_input}\n                                                />\n                                            </Grid>\n                                        </Grid> \n                                        <Grid container direction=\"row\">\n                                            <Typography variant=\"body1\" className={classes.perm_label}>\n                                                Période privilégiée dans le semestre \n                                            </Typography>\n                                        </Grid>\n                                        <Grid container direction=\"row\">\n                                            <Grid container item xs={12} sm={6} lg={4}>\n                                                <TextField \n                                                    label=\"Période\" \n                                                    variant=\"filled\" \n                                                    name=\"periode\"\n                                                    value={new_perm.periode}\n                                                    onChange={(event) => this.handleNewPermChange(event)}\n                                                    className={classes.perm_input}\n                                                    size=\"small\"\n                                                    margin=\"dense\"\n                                                    fullWidth\n                                                    InputProps={{style: {\n                                                        backgroundColor: 'white',\n                                                        borderRadius: 4\n                                                    }}}\n                                                />\n                                            </Grid>\n                                        </Grid>\n                                        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                                            <Typography variant=\"h6\" className={classes.perm_title}>\n                                                Responsables\n                                            </Typography>\n                                        </Grid>\n                                        <Grid container direction=\"row\">\n                                            <Typography variant=\"body1\" className={classes.perm_label}>\n                                                Responsable 1 : {new_perm.nom_resp} \n                                            </Typography>\n                                        </Grid>\n\n                                        <Grid container direction=\"row\">\n                                            <Typography variant=\"body1\" className={classes.perm_label}>\n                                                Responsable 2 : \n                                            </Typography>\n                                        </Grid>\n                                        <Grid container direction=\"row\">\n                                            <Grid container item xs={12} sm={6} lg={4}>\n                                                <TextField\n                                                    variant=\"filled\" \n                                                    size=\"small\"\n                                                    margin=\"dense\"\n                                                    fullWidth\n                                                    label=\"Nom de l'étudiant\"\n                                                    value={new_perm.nom_resp_2}\n                                                    onChange={(event) => this.handleAutocompleteChange(event)}\n                                                    autoComplete=\"off\"\n                                                    InputProps={{style: {\n                                                        backgroundColor: 'white',\n                                                        borderRadius: 4\n                                                    }}}\n                                                />\n                                                <Paper className={classes.suggestions}>\n                                                    {autocomplete_users.map((suggestion, index)=> (\n                                                        <MenuItem\n                                                            className={classes.suggestionItem}\n                                                            key={index}\n                                                            component=\"div\"\n                                                            onClick={()=>this.handleResp2Change(suggestion.name)}\n                                                        >\n                                                            {suggestion.name.split('-')[0]}\n                                                        </MenuItem>\n                                                    ))}\n                                                    \n                                                </Paper>\n                                            </Grid>\n                                        </Grid>\n\n                                        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                                            <Typography variant=\"h6\" className={classes.perm_title}>\n                                                Permanenciers\n                                            </Typography>\n                                        </Grid>\n                                        <Grid container direction=\"row\">\n                                            <Typography variant=\"body1\" className={classes.perm_label}>\n                                                Noms et prénoms des permanenciers (au minimum 10) \n                                                <span className={classes.form_field_length}>{new_perm.membres.length}/250 caractères max</span>\n                                            </Typography>\n                                        </Grid>\n                                        <Grid container direction=\"row\">\n                                            <Grid container item xs={12}>\n                                                <TextField \n                                                    variant=\"filled\" \n                                                    value={new_perm.membres}\n                                                    name=\"membres\"\n                                                    onChange={(event) => this.handleNewPermChange(event)}\n                                                    className={classes.perm_input}\n                                                    size=\"small\"\n                                                    margin=\"dense\"\n                                                    fullWidth\n                                                    rowsMax=\"20\"\n                                                    rows=\"10\"\n                                                    multiline\n                                                    InputProps={{style: {\n                                                        backgroundColor: 'white',\n                                                        borderRadius: 4\n                                                    }}}\n                                                />\n                                            </Grid>\n                                        </Grid>\n                                        {errors.length > 0 &&\n                                            <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                                                <Paper className=\"errors_paper\">\n                                                    <Typography variant=\"h6\">\n                                                    Erreurs lors de l'insertion\n                                                    </Typography>\n                                                    <ul>\n                                                        {errors.map((error, index)=> (\n                                                            <li key={index}>{error}</li>\n                                                        ))}\n                                                    </ul>\n                                                </Paper>\n                                            </Grid>\n                                        }\n                                        <Grid \n                                            container \n                                            direction=\"row\"\n                                            justify=\"center\"\n                                            alignItems=\"center\"\n                                        >\n                                            <Typography variant=\"body1\" className={classes.perm_label}>\n                                                Si tu veux nous montrer d'autres folies, n'hésite pas à nous mettre un petit lien Drive dans la description !\n                                            </Typography>\n                                        </Grid>  \n                                        <Grid \n                                            container \n                                            direction=\"row\"\n                                            justify=\"center\"\n                                            alignItems=\"center\"\n                                        >\n                                            <Button \n                                                variant=\"contained\" \n                                                className={classes.btn}\n                                                disabled={saving}\n                                                onClick={() => this.saveRequestedPerm()}\n                                            >\n                                                {mode === \"edit\" ? (<span>Editer</span>) : (<span>Envoyer</span>)}\n                                            </Button>\n                                        </Grid>  \n                                    </div>\n                                )}\n                            </fieldset>   \n                        </Container>\n\n\t\t\t\t    </Container>\n                )}\n                <SnackbarComponent \n                    open={snackbar.open} \n                    variant=\"error\" \n                    message=\"Une erreur est survenue. Si cette dernière se reproduit, contacte directement le Pic !\"\n\t\t\t\t\tduration={10000}\n\t\t\t\t\thorizontal='right'\n\t\t\t\t\tvertical='top'\n                    closeSnackbar={\n                        ()=>{\n                            this.setState({\n                                snackbar: {\n                                    ...this.state.snackbar,\n                                    open: false,\n                                }\n                            })\n                        }\n                    }\n                />\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nconst styles = theme => ({\n\troot: {\n        width:'100%',\n        minHeight: '100vh',\n\t\tmaxWidth: '100%',\n\t\tmargin: 0,\n\t\tpaddingRight: '5%',\n        paddingLeft: '5%',\n        paddingTop: 10,\n\t\tpaddingBottom: 50,\n\t\tbackgroundColor: '#000223',\n        color: 'white',\n        height: '100%',\n    },\n\theader : {\n\t\theight: window.innerHeight,\n\t},\n\ttitle: {\n\t\tcolor: 'white',\n\t\ttextAlign: \"center\",\n\t\tmarginTop: 50,\n\t},\n\tcontainer: {\n\t\tpadding: 0,\n\t},\n\tcomponent: {\n        padding: '5%',\n        paddingBottom: 20,\n\t\tborder: \"#B22132 1.5px solid\",\n\t\ttextAlign: 'center',\n\t},\n\tlegend : {\n\t\tfontSize: 34,\n\t\tpadding: 15,\n    },\n    loader: {\n        marginTop: 200,\n    },\n    perm_title : {\n        maxWidth: 500,\n        overflowWrap : 'break-word',\n        marginBottom: 20,\n        fontWeight: 400,\n        textDecoration: 'underline'\n    },\n    radio_btn : {\n        icon : {\n            color: 'white'\n        }\n    },\n    perm_label : {\n        textAlign: 'left'\n    },\n    perm_input : {\n        marginBottom: 20\n    },\n    slider_input : {\n        width: '90%',\n        marginBottom: 30,\n        marginTop: 40\n    },\n    exit_link : {\n        textDecoration: 'none',\n    },\n    exit_btn : {\n        marginTop: 10,\n        marginBottom: 10,\n        fontWeight: 400,\n        textTransform: 'none',\n    },\n    exit_icon : {\n        marginRight: 5,\n    },\n    btn : {\n        margin: 10\n    },\n    add_item : {\n        marginLeft: 10,\n    },\n    suggestions: {\n        zIndex: 100,\n        maxHeight: 200,\n        overflowY: 'scroll',\n        marginBottom: 30\n    },\n    suggestionItem: {\n        paddingLeft: 15,\n        paddingBottom: 0,\n        paddingTop: 0,\n        fontSize: 14,\n        minHeight: 30,\n    },\n    form_field_length:{\n        fontWeight: 200,\n        fontSize: 12,\n        marginLeft: 10\n    }\n});\n\nexport default withStyles(styles)(PermForm)\n","import React from \"react\";\nimport WebSocket from \"react-websocket\";\nimport axios from 'axios';\nimport { useAlert } from 'react-alert'\n\nconst WEBSOCKET_URL = 'ws://localhost:9191/events';\n// const REQUEST_INSERT = Symbol('INTERNAL.REQUEST_INSERT');\n\n\n\nconst WebSocketManager = () => {\n\n    const alert = useAlert()\n    const onMessage = React.useCallback((badgeID) => {\n    console.log(badgeID)\n    axios.get(\"https://kraken.picasso-dev.fr/api/core/badge_scan?badge_id=\" + badgeID)\n        .then(res => {\n            const info = res.data;\n            console.log(info)\n            alert.show('Bienvenue '+ info[\"first_name\"] + \" \" + info[\"last_name\"])\n      })\n      .catch(err=>{\n          console.log(err)\n          alert.show(\"Erreur, repasse ton badge stp\")\n        })\n\n  });\n\n  return (\n\n    <WebSocket\n      url = { WEBSOCKET_URL }\n      onOpen={() => console.log(\"connected\")}\n      onClose={() => console.log(\"disconnected\")}\n      onMessage={(data) => onMessage(data.substr(13, data.length))}\n      reconnectIntervalInMilliSeconds = { 500 }\n    />\n\n  )\n\n}\n\nexport default WebSocketManager;\n","import React from 'react'\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { withStyles } from '@material-ui/core/styles';\n\n\nimport Footer from '../components/Footer';\nimport WebSocketManager from '../components/websocket'\nimport { transitions, positions, Provider as AlertProvider } from 'react-alert'\nimport AlertTemplate from 'react-alert-template-basic'\n\n\nconst options = {\n    position: positions.MIDDLE,\n    timeout: 2000,\n    offset: '30px',\n    // you can also just use 'scale'\n    transition: transitions.SCALE\n  }\n\n\n\n\nclass Badge extends React.Component {\n    constructor(props) {\n        super(props);\n\t\tthis.state = {\n\t\t\tshow : false,\n\t\t\tinfos : null\n\t\t}\n\t}\n\n\thideComponent(){\n    \tconsole.log('cc')\n    \tthis.setState({show: !this.state.show})\n\t}\n\n\thtmlDecode(input){\n\t\tvar e = document.createElement('div');\n\t\te.innerHTML = input;\n\t\treturn e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n\t}\n\n\trender() {\n\n        const { classes} = this.props;\n        var content = \"\";\n\t\tif (this.state.show){\n\t\t\tcontent =\n\t\t\t\t<div>\n\t\t\t\t\t<button onClick={() => this.hideComponent()}>Cacher les politiques d'utilisation des données</button>\n\t\t\t\t\t<h1>Politique d'utilisation des données</h1>\n\t\t\t\t\t<h2>Responsables</h2>\n\t\t\t\t\t<p>L'équipe informatique du Pic'Asso met en place cette collecte de donnée pour l'administration et la médecine de l'UTC.</p>\n\t\t\t\t\t<h2>Finalités du traitement</h2>\n\t\t\t\t\t<p>Dispositif de prévention sanitaire dans le cadre de la crise sanitaire de la covid 19.</p>\n\t\t\t\t\t<h2>Personnes visées par cette collecte</h2>\n\t\t\t\t\t<p>Tout membre de l'UTC (étudiants, professeurs, salariés) entrant dans le Pic'asso.</p>\n\t\t\t\t\t<h2>Les données stockées</h2>\n\t\t\t\t\t<p>Les données sont : date et heure du scan, login étudiant, nom et prénom de l'étudiant.</p>\n\t\t\t\t\t<h2>Destinataires et utilisation des données</h2>\n\t\t\t\t\t<ul>\n\t\t\t\t\t<li>Médecine : contacter les potentiels cas contacts en cas d'une contamination à la COVID 19 avérée.</li>\n\t\t\t\t\t<li>Administration : connaitre le nombre d'entrées (anonymement).</li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<p>Les données seront communiquées par l'équipe du Pic'Asso aux destinataires</p>\n\t\t\t\t\t<h2>Transferts</h2>\n\t\t\t\t\t<p>Les données ne feront pas objet d'un transfert dans un pays tiers ou une organisation internationale.</p>\n\t\t\t\t\t<h2>Conservation des données</h2>\n\t\t\t\t\t<p>Les données seront conservées 21 jours.</p>\n\t\t\t\t</div>\n\t\t}\n\t\telse{\n\t\t\tcontent =\n\t\t\t<div>\n\t\t\t\t<button onClick={() => this.hideComponent()}>Voir les politiques d'utilisation des données</button>\n\t\t\t</div>\n\t\t}\n\t\treturn (\n            <AlertProvider template={AlertTemplate} {...options}>\n\n\t\t\t<React.Fragment>\n\n\t\t\t\t<CssBaseline />\n\n\t\t\t\t<Container id=\"home\" className={classes.root}>\n\n\t\t\t\t\t<Container className={classes.header} id=\"header\" fixed>\n                        <div styles={{padding:\"50px\"}}>\n                            <h1 >Veuillez déposer votre (ancien) badge</h1>\n\t\t\t\t\t\t\t<p>Attendez de voir Bienvenue (Votre nom) pour vous aventurer dans le pic</p>\n\t\t\t\t\t\t\t<h2>Merci!!</h2>\n\t\t\t\t\t\t\t{content}\n                        </div>\n\t\t\t\t\t</Container>\n\n                    <WebSocketManager/>\n\n\n\n\t\t\t\t</Container>\n\t\t\t\t<Container id=\"footer\" direction=\"row\">\n\t\t\t\t\t<Footer/>\n\t\t\t\t</Container>\n\t\t\t</React.Fragment>\n            </AlertProvider>\n\t\t);\n\t}\n}\n\nconst styles = theme => ({\n\troot: {\n\t\twidth:'100%',\n\t\tmaxWidth: '100%',\n\t\tmargin: 0,\n\t\tpaddingRight: '5%',\n\t\tpaddingLeft: '5%',\n\t\tpaddingBottom: 50,\n\t\tbackgroundColor: '#000223',\n\t\tcolor: 'white',\n\t},\n\theader : {\n        height : window.innerHeight+65,\n        textAlign: \"center\",\n\t\t//display: \"inline-block\"\n\t},\n\ttitle: {\n\t\tcolor: 'white',\n\t\ttextAlign: \"center\",\n\t\tmarginTop: 50,\n\t},\n\tcontainer: {\n\t\tpadding: 0,\n\t\toverflowX: \"overlay\",\n\t},\n\tcomponent: {\n\t\tmarginTop: 40,\n\t\tpadding: '5%',\n\t\tborder: \"#B22132 1.5px solid\",\n\t\ttextAlign: 'left',\n\t},\n\tlegend : {\n\t\tfontSize: 34,\n\t\tpadding: 15,\n\t},\n});\n\nexport default withStyles(styles)(Badge)\n","import React from \"react\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Table from \"@material-ui/core/Table\";\nimport {\n    InputLabel,\n    ListItem,\n    ListItemSecondaryAction,\n    ListItemText,\n    MenuItem,\n    Paper,\n    Select,\n    TextField\n} from \"@material-ui/core\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Button from \"@material-ui/core/Button\";\nimport List from \"@material-ui/core/List\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport GridList from \"@material-ui/core/GridList\";\nimport {ajaxGet} from \"../utils/Ajax\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nclass PermGen extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            nom: '',\n            personnesPerm:[],\n            dayType:[],\n            currentTypeDay: '',\n            postes: [],\n            listJobs: [],\n        }\n        this.handleChangeTextField = this.handleChangeTextField.bind(this)\n        this.addPerson = this.addPerson.bind(this)\n        this.loadTypeDay = this.loadTypeDay.bind(this)\n        this.handleChangeDay = this.handleChangeDay.bind(this)\n    }\n\n    componentDidMount() {\n        this.loadTypeDay()\n    }\n\n    deleteItem(n){\n        let temp = this.state.personnesPerm\n        temp.splice(n,1)\n        this.setState({personnesPerm:temp})\n    }\n\n    loadTypeDay(){\n        ajaxGet('planning_day_type/').then(res =>{\n            this.setState({dayType:res.data})\n        })\n    }\n\n    loadJobs(){\n        ajaxGet('planning')\n    }\n\n    addPerson(){\n        this.setState(\n            {personnesPerm:this.state.personnesPerm.concat(this.state.nom)}\n        )\n        this.setState({nom:''})\n    }\n\n    loadDayTabl(){\n        // ajaxGet()\n    }\n\n    handleChangeTextField(e){\n        this.setState({nom:e.target.value})\n    }\n\n    handleChangeDay(e){\n        this.setState({currentTypeDay:e.target.value})\n        ajaxGet('planning_job/?id_day='+e.target.value).then(res =>{\n            let listJobs = []\n            let listCreneau = {}\n\n            res.data.map((value,index) => {\n                if (!listJobs.includes(value.titre)){\n                    listJobs.push(value.titre)\n                    listCreneau[value.titre] = []\n                }\n                listCreneau[value.titre].push([value.hour,value.nb])\n            })\n            this.setState({listJobs: listJobs})\n            this.setState({listCreneau: listCreneau})\n            this.setState({postes: res.data})\n        })\n\n    }\n\n    render() {\n        const { classes} = this.props;\n        const { nom , personnesPerm, dayType, listJobs} = this.state\n        return(\n            <Grid container direction=\"row\">\n                <Typography variant=\"h6\" className={classes.subTitle}>\n                    PermGen2000\n                </Typography>\n                <Grid container justify=\"center\" alignItems=\"center\" >\n                    <Typography variant=\"h6\">Nom perm (TODO)</Typography>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel id=\"demo-simple-select-label\">Type de perm</InputLabel>\n                        <Select\n                            labelId=\"demo-simple-select-label\"\n                            id=\"demo-simple-select\"\n                            value={this.state.currentTypeDay}\n                            onChange={this.handleChangeDay}\n                        >\n                            {dayType.map((val,index) => {\n                                return <MenuItem value={val.id}>{val.nom}</MenuItem>\n                            })}\n                        </Select>\n                    </FormControl>\n                </Grid>\n                <Grid container justify=\"center\" alignItems=\"center\">\n                    <Grid item xs={12} sm={6} lg={3} className={classes.textFieldContainer}>\n                        <TextField\n                            label=\"Ajouter un membre\"\n                            className={classes.textField}\n                            name=\"nom\"\n                            value={nom}\n                            onChange={this.handleChangeTextField}\n                            autoComplete=\"off\"\n                            margin=\"dense\"\n                            fullWidth\n                            variant=\"outlined\"\n                            size=\"small\"\n                            InputProps={{ style: { fontSize: 12 } }}\n                        />\n                    </Grid>\n                    <Grid item xs={12} sm={6} lg={3} className={classes.textFieldContainer}>\n                    <Button\n                            variant=\"contained\"\n                            size=\"small\"\n                            color=\"primary\"\n                            onClick={this.addPerson}\n                            className={classes.btnAddMember}\n                        >\n                            Ajouter\n                        </Button>\n                    </Grid>\n                </Grid>\n\n                <List className={classes.root}>\n                    <Grid container>\n                        {personnesPerm.map((person, index) =>{\n                            return(\n                                <ListItem key={index} role={undefined} dense button className={classes.listItem}>\n                                    <ListItemText primary={person} />\n                                    <ListItemSecondaryAction>\n                                        <IconButton edge=\"end\" aria-label=\"comments\">\n                                            <DeleteOutlineIcon onClick={()=>this.deleteItem(index)}/>\n                                        </IconButton>\n                                    </ListItemSecondaryAction>\n                                </ListItem>\n                            )\n                        })}\n                    </Grid>\n                </List>\n\n                <Paper className={classes.paper_box}>\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell className=\"center side_padding8\">Poste</TableCell>\n                                <TableCell className=\"center side_padding8\">17h30-18h</TableCell>\n                                <TableCell className=\"center side_padding8\">18h-18h30</TableCell>\n                                <TableCell className=\"center side_padding8\">18h30-19h</TableCell>\n                                <TableCell className=\"center side_padding8\">19h-19h30</TableCell>\n                                <TableCell className=\"center side_padding8\">19h30-20h</TableCell>\n                                <TableCell className=\"center side_padding8\">20h-20h30</TableCell>\n                                <TableCell className=\"center side_padding8\">20h30-21h</TableCell>\n                                <TableCell className=\"center side_padding8\">21-21h30</TableCell>\n                                <TableCell className=\"center side_padding8\">21h30-22h</TableCell>\n                                <TableCell className=\"center side_padding8\">22h-23h</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {listJobs.map((job,index ) => {\n\n                                return (\n                                    <TableRow>\n                                        <TableCell>\n                                            <Typography variant=\"caption\" display=\"block\" gutterBottom className={classes.day} noWrap>\n                                                <strong>{job.titre}</strong>\n                                            </Typography>\n                                        </TableCell>\n                                    </TableRow>\n                                )\n                            })}\n\n                        </TableBody>\n                    </Table>\n                </Paper>\n            </Grid>\n        )\n    }\n}\n\nconst styles = theme => ({\n    paper_box : {\n        width: '100%',\n        overflowX: 'auto',\n        marginBottom: 20,\n    },\n    titleIcon: {\n        marginRight: 8,\n        paddingTop: 5,\n    },\n    subTitle:{\n        marginBottom: 5\n    },\n    btnAddMember: {\n        marginLeft:20,\n    },\n    listItem:{\n        width: 300,\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n})\n\nexport default withStyles(styles)(PermGen)\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport {CircularProgress, TextField} from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport {ajaxGet, ajaxPost} from \"../utils/Ajax\";\nimport * as qs from \"query-string\";\n\nconst messages = {\n    \"max\":\"Le shotgun est déjà complet 😭\",\n    \"login\":\"Le login fourni n'est pas reconnu 😭\",\n    \"time\":\"Le shotgun n'a pas commencé / est fini ⏰\",\n    \"succes\":\"Ton shotgun a bien été pris en compte! ☑️ Nous reviendrons vers toi par mail pour te confirmer ta participation️\",\n    \"others\":\"Une erreur interne est arrivé, vérifiez votre lien ou envoyez un message au pic 🚨\",\n    \"notFound\":\"Le shotgun semble ne pas éxister il est soit supprimé soit votre lien n'est pas le bon 🚧\"\n}\n\nclass Shotgun extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            nb: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).id,\n            loading: true,\n            login: '',\n            shotgun: false,\n            text:'',\n        }\n        this.handleChange = this.handleChange.bind(this)\n    }\n\n    getCookie(name) {\n        const value = `; ${document.cookie}`;\n        const parts = value.split(`; ${name}=`);\n        if (parts.length === 2) return parts.pop().split(';').shift();\n    }\n\n    componentDidMount() {\n        ajaxGet('shotgun/creneau/'+this.state.nb).then((res) => {\n            this.setState({text:res.data['text']})\n            let date = new Date(res.data['shotgunDate'])\n            if(!res.data['actif'] || date >  Date.now()){\n                this.setState({loading: false})\n                this.setState({message:'time'})\n            }\n            this.setState({loading: false})\n        }).catch((reason => {\n            this.setState({message:'notFound'})\n            this.setState({loading: false})\n        }))\n        if(this.getCookie('SHOTGUN_'+this.state.nb)) {\n            this.setState({message:'succes'})\n            this.setState({loading: false})\n        }\n    }\n\n    makeshotgun(){\n\n        this.setState({loading:true})\n        ajaxPost('shotgun/persons/',{login: this.state.login, id_creneau: this.state.nb, email: null}).then((res) =>{\n            document.cookie = 'SHOTGUN_'+this.state.nb+'=True'\n            this.setState({message:'succes'})\n            this.setState({loading:false})\n        }).catch((exeption)=>{\n            if (exeption.response) {\n                switch (exeption.response.status){\n                    case 400:\n                        this.setState({message:'succes'})\n                        document.cookie = 'SHOTGUN_'+this.state.nb+'=True'\n                        break;\n                    case 429:\n                        this.setState({message:'max'})\n                        break;\n                    case 422:\n                        this.setState({message:'login'})\n                        break;\n                    case 451:\n                        this.setState({message:'time'})\n                        break;\n                    default:\n                        this.setState({message:'others'})\n                        break;\n                }\n            }\n            this.setState({loading:false})\n\n        })\n\n    }\n\n    handleChange(e){\n        this.setState({login:e.target.value})\n    }\n\n\n    renderShutgun(classes){\n        return(\n            <div>\n                <Grid container direction=\"row\" className={classes.font}\n                      direction=\"column\"\n                      alignItems=\"center\"\n                      justify=\"center\">\n                    <Typography variant=\"h1\" className={classes.title}>\n                        Shotgun\n                    </Typography>\n                    <Typography variant=\"h4\" className={classes.title}>\n                        {this.state.text}\n                    </Typography>\n                    <TextField value={this.state.login} onChange={this.handleChange} label=\"Ton login\" variant=\"outlined\" className={classes.textField} />\n                    <Button variant=\"contained\" className={classes.button} onClick={() => this.makeshotgun()}>SHOTGUN!</Button>\n                </Grid>\n            </div>\n        )\n    }\n\n    renderMessageShotgun(classes, extraText){\n        let customMessage = messages[this.state.message]\n        return(\n            <div>\n                <Grid container direction=\"row\" className={classes.font}\n                      direction=\"column\"\n                      alignItems=\"center\"\n                      justify=\"center\">\n                    <Typography variant=\"h4\">\n                        {extraText}\n                    </Typography>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        {customMessage}\n                    </Typography>\n                </Grid>\n            </div>\n        )\n\n    }\n\n    render() {\n        const { classes} = this.props;\n        if(this.state.loading){\n            return(\n                <div>\n                    <Grid container direction=\"row\" className={classes.font}\n                          direction=\"column\"\n                          alignItems=\"center\"\n                          justify=\"center\">\n                        <Typography>N'actualisez pas la page SVP (ça bosse) 😰</Typography>\n                        <CircularProgress />\n                    </Grid>\n                </div>\n            )\n        }\n        else{\n            if(this.state.message){\n                if(this.state.message = 'time'){\n                    return this.renderMessageShotgun(classes,this.state.text)\n                }\n                else{\n                    return this.renderMessageShotgun(classes)\n                }\n            }else{\n                return this.renderShutgun(classes)\n            }\n        }\n\n    }\n}\n\nconst styles = theme => ({\n    font:{\n        height: '100vh',\n        backgroundColor: '#F9BF38',\n        paddingLeft: '20px',\n        paddingRight: '20px'\n    },\n    title:{\n      fontfamily: 'roboto',\n        marginBottom: '20px',\n    },\n    textField:{\n        backgroundColor: '#FFFFFF',\n        marginBottom: '20px'\n    },\n})\nexport default withStyles(styles)(Shotgun)\n","import React from 'react';\n\nconst AppAssistancy = () => {\n    return (\n        <div style={{textAlign: 'center'}}>\n            <h1>Assitance pour l'Application du Pic'Asso</h1>\n            <p>Vous pouvez retrouver ici toutes les informations nécessaires pour utiliser l'application du Pic'Asso.</p>\n            <h2>Que faire en cas de pépin ?</h2>\n            <p>Si vous avez un problème avec l'application, veuillez en référer à un membre du Pic'Asso, ils sont disponibles pour vous !</p>\n            <p>Et prenez un pampryl pomme c'est bon, c'est antioxydant, c'est fruité, c'est vitaminé, régalez-vous.</p>\n            <p style={{position: 'absolute', bottom: 10, left: 10}}>Codé avec passion par la team A22 du Pic'Asso</p>\n        </div>\n    );\n};\n\nexport default AppAssistancy;\n","import React from 'react';\n\nconst AppPrivacy = () => {\n    return (\n        <div style={{textAlign: 'center'}}>\n            <h1>Privacy Policy - Pic'Asso UTC App</h1>\n            <p>L'application du Pic'Asso ne récupère et n'utilise aucune donnée utilisateur.</p>\n            <p>The Pic'Asso App doesn't store any user data.</p>\n            <p style={{position: 'absolute', bottom: 10, left: 10}}>Codé avec passion par la team A22 du Pic'Asso</p>\n        </div>\n    );\n};\n\nexport default AppPrivacy;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { CssBaseline } from '@material-ui/core';\n\nimport './App.css';\n\nimport Home from './pages/Home';\nimport Admin from './pages/Admin';\nimport Login from './pages/Login';\nimport Logout from './pages/Logout';\nimport Charte from './components/Charte';\nimport Menu from './components/Menu';\nimport Error404 from './pages/Error404';\nimport ProtectedRoute from './utils/ProtectedRoute';\nimport Poll from './pages/Poll';\nimport PermForm from './pages/PermForm';\nimport Badge from './pages/Badge';\nimport { createGlobalStyle } from 'styled-components';\nimport PermGen from \"./pages/PermGen\";\nimport Shotgun from \"./pages/Shotgun\";\nimport AppAssistancy from \"./pages/AppAssistancy\";\nimport AppPrivacy from \"./pages/AppPrivacy\";\n\nReact.lazy(() => import('./pages/Admin'))\n\nconst PUBLIC_URL = process.env.PUBLIC_URL;\n// Create a `GlobalStyles` component.\n// I usually already have this, to include a CSS\n// reset, set border-box, and other global concerns.\nconst GlobalStyles = createGlobalStyle`\n  html {\n\t  --color-primary: #7ADFCE;\n\t  --color-secondary: #D4E4E0;\n\t  --color-third: #1D1D1B;\n\t  --color-light: #3499FF;\n\t  --color-warning: #3499FF;\n\t  --color-important: #3499FF;\n\t  --color-font: #FAFAFA;\n  }\n`;\n\nclass App extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<BrowserRouter basename={PUBLIC_URL}>\n\t\t\t\t<CssBaseline />\n\t\t\t\t<GlobalStyles/>\n\t\t\t\t<React.Suspense fallback={<div>Loading</div>}>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path=\"/\" exact component={Home}/>\n\t\t\t\t\t\t<Route path=\"/badge\" exact component={Badge}/>\n\t\t\t\t\t\t<Route path=\"/shotgun\" exact component={Shotgun} />\n\t\t\t\t\t\t<Route path=\"/login\" exact component={Login}/>\n\t\t\t\t\t\t<Route path=\"/logout\" exact component={Logout}/>\n\t\t\t\t\t\t<Route path=\"/charte\" exact component={Charte}/>\n\t\t\t\t\t\t<Route path=\"/menu\" component={Menu} />\n\t\t\t\t\t\t<Route path=\"/perm/gen/:id\" exact component={PermGen} />\n\t\t\t\t\t\t<ProtectedRoute only=\"member\" path=\"/admin\" component={Admin}/>\n\t\t\t\t\t\t<ProtectedRoute path=\"/poll/:id\" exact component={Poll}/>\n\t\t\t\t\t\t<ProtectedRoute path=\"/perm/form\" exact component={PermForm}/>\n\t\t\t\t\t\t<Route path=\"/app/assistancy\" exact component={AppAssistancy}/>\n\t\t\t\t\t\t<Route path=\"/app/privacy\" exact component={AppPrivacy}/>\n\t\t\t\t\t\t<Route component={Error404}/>\n\t\t\t\t\t</Switch>\n\t\t\t\t</React.Suspense>\n\t\t\t</BrowserRouter>\n\t\t)\n\t}\n}\n\nexport default App;\n","import axios from 'axios';\nimport { asset_url } from './Config';\n\nconst uncaught_path = [\n    asset_url(\"/login\"),\n    asset_url(\"/menu\")\n]\n\naxios.interceptors.response.use( (response) => {\n    return response;\n }, (error) => {\n    switch (error.response.status) {\n        case 403:\n            if (uncaught_path.indexOf(window.location.pathname)===-1) {\n                const redirection = asset_url('/login?redirect=' + window.location.pathname + window.location.search);\n                window.location = redirection;\n            }\n            break;\n        default:\n            return Promise.reject(error);\n    }\n    return Promise.reject(error);\n });","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport './utils/Interceptor';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n","  \nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport Auth from './Auth';\n\nclass ProtectedRoute extends React.Component {\n\n\tisAuthorized = (only) => {\n\t\tif (only === \"admin\") {\n            return Auth.isUserAdmin();\n        } else if (only === \"member\"){\n            return Auth.isUserMember();\n\n        } else {\n            return Auth.isUserAuthenticated();\n        }\n\t}\n\n\trender() {\n\t\tconst { auth, only, component: Component, ...routeProps } = this.props;\n\t\tconst redirection = '/login?redirect=' + window.location.pathname + window.location.search;\n\n\t\treturn (\n\t\t\t<Route\n\t\t\t\t{...routeProps} \n\t\t\t\trender={props => (this.isAuthorized(only)\n\t\t\t\t\t? <Component {...props} />\n\t\t\t\t\t: <Redirect to={redirection} />\n\t\t\t\t)}\n\t\t\t/>\n\t\t);\n    }\n    \n}\n\nProtectedRoute.defaultProps = {\n\t// only: 'member',\n\t// redirection: '/login',\n}\n\nexport default ProtectedRoute;","/**\n * Sends an HTTP request to the API.\n */\n\nimport {config} from './Config'\nimport axios from 'axios';\n\n\nconst defaultConfig = {withCredentials: true}\n\nfunction ajaxGet(path) {\n    return axios.get(config.urls.API_URL + path, defaultConfig);\n}\n\nfunction ajaxPost(path, data) {\n    return axios.post(config.urls.API_URL + path, data, defaultConfig);\n}\n\nfunction ajaxPut(path, data) {\n    return axios.put(config.urls.API_URL + path, data, defaultConfig);\n}\n\nfunction ajaxPatch(path, data) {\n    return axios.patch(config.urls.API_URL + path, data, defaultConfig);\n}\n\nfunction ajaxDelete(path) {\n    return axios.delete(config.urls.API_URL + path, defaultConfig);\n}\n\n\nexport { ajaxGet, ajaxPost, ajaxPut, ajaxDelete, ajaxPatch };\n","import {asset_url, config} from './Config';\nimport {ajaxGet, ajaxPost} from './Ajax';\nimport { isStringEmpty } from './String';\nconst GENERAL_CONNEXION = 'full';\n\nclass Auth {\n\n    static isUserAuthenticated(){\n        return localStorage.getItem('auth');\n    }\n\n    static async getUserInformation(){\n        const identity = {\n            login : localStorage.getItem('login'),\n            last_name : localStorage.getItem('last_name'),\n            first_name : localStorage.getItem('first_name'),\n            email : localStorage.getItem('email')\n        }\n\n        if (isStringEmpty(identity.login) || isStringEmpty(identity.last_name) || isStringEmpty(identity.first_name) || isStringEmpty(identity.email)) {\n            Auth.goLogin();\n        } else {\n            return identity;\n        }\n    }\n\n    static getUserRight(){\n        return localStorage.getItem('right');\n    }\n\n    static isUserAdmin(){\n        return localStorage.getItem('right') === 'A' && localStorage.getItem('connexion') === GENERAL_CONNEXION\n    }\n\n    static isUserMember(){\n        return (localStorage.getItem('right') === 'A' || localStorage.getItem('right') === 'M') && localStorage.getItem('connexion') === GENERAL_CONNEXION\n    }\n\n    static isConnexionRestricted(){\n        return localStorage.getItem('connexion') !== GENERAL_CONNEXION;\n    }\n\n\n    static async login(){\n        this.emptyLocalStorage();\n        this.checkAuth()\n            .then(res => {\n                Auth.authenticateUser(res.data)\n                if (Auth.isConnexionRestricted()) {\n                    Auth.goLogin();\n                } else {\n                    Auth.redirectUser();\n                }\n            })\n            .catch(error => {\n                Auth.goLogin();\n            })\n    }\n\n    static async checkAuth(){\n        return ajaxGet('auth/me');\n    }\n\n    static authenticateUser(data){\n        localStorage.setItem('auth', data.authenticated);\n        localStorage.setItem('login', data.user.login);\n        localStorage.setItem('last_name', data.user.nom);\n        localStorage.setItem('first_name', data.user.prenom);\n        localStorage.setItem('email', data.user.mail);\n        localStorage.setItem('right', data.right);\n        localStorage.setItem('connexion', data.connexion);\n        console.log('authenticate')\n    }\n\n\n    static goLogin(){\n        const current_url = window.location.href;\n        // Redirection vers le CAS\n        window.location.href = config.urls.URL + '/api/auth/login?redirect=' + current_url;\n    }\n\n\n    static goLogout(){\n        this.emptyLocalStorage();\n        window.location.href = config.urls.URL + '/api/auth/logout';\n    }\n\n\n    static loginUsername(data){\n        return ajaxPost('auth/username', data);\n    }\n\n\n    static redirectUser(){\n        const query = new URLSearchParams(window.location.search);\n        const redirect = query.get('redirect')\n        if (redirect) {\n            if (!Auth.isUserMember() && redirect.startsWith('/admin')) {\n                window.location = asset_url('/');\n            } else {\n                window.location = redirect;\n            }\n        } else {\n            if (Auth.isUserMember()) {\n                window.location = asset_url('/admin');\n            } else {\n                window.location = asset_url('/');\n            }\n        }\n    }\n\n\n    static emptyLocalStorage(){\n        localStorage.clear()\n    }\n\n}\n\nexport default Auth;\n","export function isStringEmpty(str) {\n    return (!str || 0 === str.length);\n}\n","import React, {Component} from 'react'\nimport Snackbar from '@material-ui/core/Snackbar';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { amber, green } from '@material-ui/core/colors';\nimport IconButton from '@material-ui/core/IconButton';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst variantIcon = {\n    success: CheckCircleIcon,\n    warning: WarningIcon,\n    error: ErrorIcon,\n    info: InfoIcon,\n  };\n  \n  const useStyles1 = makeStyles(theme => ({\n    success: {\n      backgroundColor: green[600],\n    },\n    error: {\n      backgroundColor: theme.palette.error.dark,\n    },\n    info: {\n      backgroundColor: theme.palette.primary.main,\n    },\n    warning: {\n      backgroundColor: amber[700],\n    },\n    icon: {\n      fontSize: 20,\n    },\n    iconVariant: {\n      opacity: 0.9,\n      marginRight: theme.spacing(1),\n    },\n    message: {\n      display: 'flex',\n      alignItems: 'center',\n    },\n  }));\n\n  function SnackbarContentWrapper(props) {\n    const classes = useStyles1();\n    const { className, message, onClose, variant, ...other } = props;\n    const Icon = variantIcon[variant];\n  \n    return (\n      <SnackbarContent\n        className={clsx(classes[variant], className)}\n        aria-describedby=\"client-snackbar\"\n        message={\n          <span id=\"client-snackbar\" className={classes.message}>\n            <Icon className={clsx(classes.icon, classes.iconVariant)} />\n            {message}\n          </span>\n        }\n        action={[\n          <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={onClose}>\n            <CloseIcon className={classes.icon} />\n          </IconButton>,\n        ]}\n        {...other}\n      />\n    );\n  }\n  \n  SnackbarContentWrapper.propTypes = {\n    className: PropTypes.string,\n    message: PropTypes.string,\n    onClose: PropTypes.func,\n    variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired,\n  };\n\nclass SnackbarComponent extends Component {\n\n  \tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tsnackbar: {\n\t\t\t\topen: this.props.open,\n\t\t\t\tvariant: this.props.variant,\n        message: this.props.message,\n        horizontal: 'right',\n        vertical: 'top',\n\t\t\t},\n\t\t}\n\t\tthis.handleSnackbarClose = this.handleSnackbarClose.bind(this);\n    }\n    \n    componentDidUpdate(prevProps) {\n        if (this.props.open !== prevProps.open && this.props.open === true && this.state.snackbar.open === false){\n            this.setState((state, props) => ({ \n                snackbar: {\n                    open: props.open,\n                    variant: props.variant,\n                    message: props.message,\n                    horizontal: props.horizontal || 'right',\n                    vertical: props.vertical || 'top',\n                } \n            }))\n        }\n    }\n\n\thandleSnackbarClose(){\n\t\tthis.setState({\n\t\t\tsnackbar: {\n                ...this.state.snackbar,\n            \topen: false\n\t\t\t}\n        })\n        this.props.closeSnackbar();\n\t}\n\n  \trender() {\n        const { snackbar } = this.state;\n        \n        return(\n            <Snackbar\n                anchorOrigin={{\n                    vertical: snackbar.vertical,\n                    horizontal: snackbar.horizontal,\n                }}\n                open={snackbar.open}\n                autoHideDuration={this.props.duration? this.props.duration : 6000}\n                onClose={this.handleSnackbarClose}\n            >\n                <SnackbarContentWrapper\n                    onClose={this.handleSnackbarClose}\n                    variant={snackbar.variant}\n                    message={snackbar.message}\n                />\n            </Snackbar>\t\n        )\n  \t}\n}\n\n\nexport default SnackbarComponent\n"],"sourceRoot":""}